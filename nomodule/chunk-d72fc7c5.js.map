{"version":3,"file":"chunk-d72fc7c5.js","sources":["../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this._parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // When using the Custom Elements polyfill, clone the node, rather than\n        // importing it, to keep the fragment in the template's document. This\n        // leaves the fragment inert so custom elements won't upgrade and\n        // potentially modify their contents by creating a polyfilled ShadowRoot\n        // while we traverse the tree.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        let partIndex = 0;\n        let nodeIndex = 0;\n        const _prepareInstance = (fragment) => {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            let node = walker.nextNode();\n            // Loop through all the nodes and parts of a template\n            while (partIndex < parts.length && node !== null) {\n                const part = parts[partIndex];\n                // Consecutive Parts may have the same node index, in the case of\n                // multiple bound attributes on an element. So each iteration we either\n                // increment the nodeIndex, if we aren't on a node with a part, or the\n                // partIndex if we are. By not incrementing the nodeIndex when we find a\n                // part, we allow for the next part to be associated with the current\n                // node if neccessasry.\n                if (!isTemplatePartActive(part)) {\n                    this._parts.push(undefined);\n                    partIndex++;\n                }\n                else if (nodeIndex === part.index) {\n                    if (part.type === 'node') {\n                        const part = this.processor.handleTextExpression(this.options);\n                        part.insertAfterNode(node.previousSibling);\n                        this._parts.push(part);\n                    }\n                    else {\n                        this._parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n                    }\n                    partIndex++;\n                }\n                else {\n                    nodeIndex++;\n                    if (node.nodeName === 'TEMPLATE') {\n                        _prepareInstance(node.content);\n                    }\n                    node = walker.nextNode();\n                }\n            }\n        };\n        _prepareInstance(fragment);\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const endIndex = this.strings.length - 1;\n        let html = '';\n        for (let i = 0; i < endIndex; i++) {\n            const s = this.strings[i];\n            // This exec() call does two things:\n            // 1) Appends a suffix to the bound attribute name to opt out of special\n            // attribute value parsing that IE11 and Edge do, like for style and\n            // many SVG attributes. The Template class also appends the same suffix\n            // when looking up attributes to create Parts.\n            // 2) Adds an unquoted-attribute-safe marker for the first expression in\n            // an attribute. Subsequent attribute expressions will use node markers,\n            // and this is safe since attributes with multiple expressions are\n            // guaranteed to be quoted.\n            const match = lastAttributeNameRegex.exec(s);\n            if (match) {\n                // We're starting a new bound attribute.\n                // Add the safe attribute suffix, and use unquoted-attribute-safe\n                // marker.\n                html += s.substr(0, match.index) + match[1] + match[2] +\n                    boundAttributeSuffix + match[3] + marker;\n            }\n            else {\n                // We're either in a bound node, or trailing bound attribute.\n                // Either way, nodeMarker is safe to use.\n                html += s + nodeMarker;\n            }\n        }\n        return html + this.strings[endIndex];\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) ||\n                        // tslint:disable-next-line:no-any\n                        typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) ||\n            // tslint:disable-next-line:no-any\n            value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const comitter = new PropertyCommitter(element, name.slice(1), strings);\n            return comitter.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const comitter = new AttributeCommitter(element, name, strings);\n        return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected.` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    // If there are no styles, skip unnecessary work\n    if (styles.length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < styles.length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    insertNodeIntoTemplate(template, condensedStyle, template.element.content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    if (window.ShadyCSS.nativeShadow) {\n        // When in native Shadow DOM, re-add styling to rendered content using\n        // the style ShadyCSS produced.\n        const style = template.element.content.querySelector('style');\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When not in native Shadow DOM, at this point ShadyCSS will have\n        // removed the style from the lit template and parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        template.element.content.insertBefore(condensedStyle, template.element.content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = container instanceof ShadowRoot &&\n        compatibleShadyCSSVersion && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                // tslint:disable-next-line:no-any no symbol in index\n                return this[key];\n            },\n            set(value) {\n                // tslint:disable-next-line:no-any no symbol in index\n                const oldValue = this[name];\n                // tslint:disable-next-line:no-any no symbol in index\n                this[key] = value;\n                this.requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure connection triggers an update. Updates cannot complete before\n        // connection and if one is pending connection the `_hasConnectionResolver`\n        // will exist. If so, resolve it to complete the update, otherwise\n        // requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n        else {\n            this.requestUpdate();\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // if we have a property key, perform property update steps.\n        if (name !== undefined && !this._changedProperties.has(name)) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                // track old value when changing.\n                this._changedProperties.set(name, oldValue);\n                // add to reflecting properties set\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n                // abort the request if the property should not be considered changed.\n            }\n            else {\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res) => resolve = res);\n        // Ensure any previous update has resolved before updating.\n        // This `await` also ensures that property changes are batched.\n        await previousUpdatePromise;\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        // Allow `performUpdate` to be asynchronous to enable scheduling of updates.\n        const result = this.performUpdate();\n        // Note, this is to avoid delaying an additional microtask unless we need\n        // to.\n        if (result != null &&\n            typeof result.then === 'function') {\n            await result;\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update.\n     *\n     * You can override this method to change the timing of updates. For instance,\n     * to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        if (this.shouldUpdate(this._changedProperties)) {\n            const changedProperties = this._changedProperties;\n            this.update(changedProperties);\n            this._markUpdated();\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n        else {\n            this._markUpdated();\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            // tslint:disable-next-line:no-any decorator\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n */\nexport const query = _query((target, selector) => target.querySelector(selector));\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n */\nexport const queryAll = _query((target, selector) => target.querySelectorAll(selector));\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\n/**\n * Base-implementation of `@query` and `@queryAll` decorators.\n *\n * @param queryFn exectute a `selector` (ie, querySelector or querySelectorAll)\n * against `target`.\n * @suppress {visibility} The descriptor accesses an internal field on the\n * element.\n */\nfunction _query(queryFn) {\n    return (selector) => (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return queryFn(this.renderRoot, selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.0.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map"],"names":["directive","render","litRender"],"mappings":"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"}