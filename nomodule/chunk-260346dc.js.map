{"version":3,"file":"chunk-260346dc.js","sources":["../node_modules/@webcomponents/shadydom/src/shady-data.js","../node_modules/@webcomponents/shadydom/src/utils.js","../node_modules/@webcomponents/shadydom/src/flush.js","../node_modules/@webcomponents/shadydom/src/observe-changes.js","../node_modules/@webcomponents/shadydom/src/innerHTML.js","../node_modules/@webcomponents/shadydom/src/patch-native.js","../node_modules/@webcomponents/shadydom/src/patch-instances.js","../node_modules/@webcomponents/shadydom/src/patch-events.js","../node_modules/@webcomponents/shadydom/src/array-splice.js","../node_modules/@webcomponents/shadydom/src/link-nodes.js","../node_modules/@webcomponents/shadydom/src/style-scoping.js","../node_modules/@webcomponents/shadydom/src/patches/Node.js","../node_modules/@webcomponents/shadydom/src/patches/ParentNode.js","../node_modules/@webcomponents/shadydom/src/patches/DocumentOrFragment.js","../node_modules/@webcomponents/shadydom/src/patches/DocumentOrShadowRoot.js","../node_modules/@webcomponents/shadydom/src/attach-shadow.js","../node_modules/@webcomponents/shadydom/src/patches/ElementOrShadowRoot.js","../node_modules/@webcomponents/shadydom/src/patches/ShadowRoot.js","../node_modules/@webcomponents/shadydom/src/patch-shadyRoot.js","../node_modules/@webcomponents/shadydom/src/wrapper.js","../node_modules/@webcomponents/shadydom/src/patches/EventTarget.js","../node_modules/@webcomponents/shadydom/src/patches/Slotable.js","../node_modules/@webcomponents/shadydom/src/patches/Element.js","../node_modules/@webcomponents/shadydom/src/patches/HTMLElement.js","../node_modules/@webcomponents/shadydom/src/patches/Slot.js","../node_modules/@webcomponents/shadydom/src/patches/Document.js","../node_modules/@webcomponents/shadydom/src/patches/Window.js","../node_modules/@webcomponents/shadydom/src/patch-prototypes.js","../node_modules/@webcomponents/shadydom/src/shadydom.js","../node_modules/@webcomponents/custom-elements/src/Utilities.js","../node_modules/@webcomponents/custom-elements/src/CustomElementState.js","../node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","../node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","../node_modules/@webcomponents/custom-elements/src/Deferred.js","../node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","../node_modules/@webcomponents/custom-elements/src/Patch/Native.js","../node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","../node_modules/@webcomponents/custom-elements/src/custom-elements.js","../node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","../node_modules/@webcomponents/custom-elements/src/Patch/Document.js","../node_modules/@webcomponents/custom-elements/src/Patch/DocumentFragment.js","../node_modules/@webcomponents/custom-elements/src/Patch/Node.js","../node_modules/@webcomponents/custom-elements/src/Patch/Element.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js","../node_modules/@webcomponents/shadycss/src/css-parse.js","../node_modules/@webcomponents/shadycss/src/style-settings.js","../node_modules/@webcomponents/shadycss/src/common-regex.js","../node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js","../node_modules/@webcomponents/shadycss/src/style-util.js","../node_modules/@webcomponents/shadycss/src/style-transformer.js","../node_modules/@webcomponents/shadycss/src/style-info.js","../node_modules/@webcomponents/shadycss/src/style-properties.js","../node_modules/@webcomponents/shadycss/src/style-placeholder.js","../node_modules/@webcomponents/shadycss/src/style-cache.js","../node_modules/@webcomponents/shadycss/src/document-watcher.js","../node_modules/@webcomponents/shadycss/src/template-map.js","../node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","../node_modules/@webcomponents/shadycss/src/document-wait.js","../node_modules/@webcomponents/shadycss/src/custom-style-interface.js","../node_modules/@webcomponents/shadycss/src/scoping-shim.js","../node_modules/@webcomponents/shadycss/src/common-utils.js","../node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nexport class ShadyData {\n  constructor() {\n    /** @type {ShadowRoot} */\n    this.root = null;\n    /** @type {ShadowRoot} */\n    this.publicRoot = null;\n    this.dirty = false;\n    this.observer = null;\n    /** @type {Array<Node>} */\n    this.assignedNodes = null;\n    /** @type {Element} */\n    this.assignedSlot = null;\n    /** @type {Array<Node>} */\n    this._previouslyAssignedNodes = null;\n    /** @type {Element} */\n    this._prevAssignedSlot = null;\n    /** @type {Array<Node>} */\n    this.flattenedNodes = null;\n    this.ownerShadyRoot = undefined;\n    /** @type {Node|undefined} */\n    this.parentNode = undefined;\n    /** @type {Node|undefined} */\n    this.firstChild = undefined;\n    /** @type {Node|undefined} */\n    this.lastChild = undefined;\n    /** @type {Node|undefined} */\n    this.previousSibling = undefined;\n    /** @type {Node|undefined} */\n    this.nextSibling = undefined;\n    /** @type {Array<Node>|undefined} */\n    this.childNodes = undefined;\n    this.__outsideAccessors = false;\n    this.__insideAccessors = false;\n    this.__onCallbackListeners = {};\n  }\n\n  /** @override */\n  toJSON() {\n    return {};\n  }\n}\n\nexport function ensureShadyDataForNode(node) {\n  if (!node.__shady) {\n    node.__shady = new ShadyData();\n  }\n  return node.__shady;\n}\n\nexport function shadyDataForNode(node) {\n  return node && node.__shady;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {shadyDataForNode} from './shady-data.js';\n\n/** @type {!Object} */\nexport const settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nconst desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\nsettings.noPatch = settings['noPatch'] || false;\nsettings.preferPerformance = settings['preferPerformance'];\n\nexport const isTrackingLogicalChildNodes = (node) => {\n  const nodeData = shadyDataForNode(node);\n  return (nodeData && nodeData.firstChild !== undefined);\n}\n\nexport const isShadyRoot = (obj) => {\n  return Boolean(obj._localName === 'ShadyRoot');\n}\n\nexport const hasShadowRootWithSlot = (node) => {\n  const nodeData = shadyDataForNode(node);\n  let root = nodeData && nodeData.root;\n  return (root && root._hasInsertionPoint());\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport const matchesSelector = (element, selector) => {\n  return matches.call(element, selector);\n}\n\nexport const mixin = (target, source) => {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\n// NOTE, prefer MutationObserver over Promise for microtask timing\n// for consistency x-platform.\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport const microtask = (callback) => {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}\n\nexport const hasDocumentContains = Boolean(document.contains);\n\nexport const contains = (container, node) => {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node[SHADY_PREFIX + 'parentNode'];\n  }\n  return false;\n}\n\nconst getNodeHTMLCollectionName = (node) =>\n    node.getAttribute('id') || node.getAttribute('name');\n\nconst isValidHTMLCollectionName = (name) => name !== 'length' && isNaN(name);\n\nexport const createPolyfilledHTMLCollection = (nodes) => {\n  // Note: loop in reverse so that the first named item matches the named property\n  for (let l = nodes.length - 1; l >= 0; l--) {\n    const node = nodes[l];\n    const name = getNodeHTMLCollectionName(node);\n\n    if (name && isValidHTMLCollectionName(name)) {\n      nodes[name] = node;\n    }\n  }\n  nodes.item = function(index) {\n    return nodes[index];\n  }\n  nodes.namedItem = function(name) {\n    if (isValidHTMLCollectionName(name) && nodes[name]) {\n      return nodes[name];\n    }\n\n    for (const node of nodes) {\n      const nodeName = getNodeHTMLCollectionName(node);\n\n      if (nodeName == name) {\n        return node;\n      }\n    }\n\n    return null;\n  };\n  return nodes;\n}\n\nexport const NATIVE_PREFIX = '__shady_native_';\nexport const SHADY_PREFIX = '__shady_';\n\n\n\n/**\n * Patch a group of accessors on an object only if it exists or if the `force`\n * argument is true.\n * @param {!Object} proto\n * @param {!Object} descriptors\n * @param {string=} prefix\n * @param {Array=} disallowedPatches\n */\nexport const patchProperties = (proto, descriptors, prefix = '', disallowedPatches) => {\n  for (let p in descriptors) {\n    const newDescriptor = descriptors[p];\n    if (disallowedPatches && disallowedPatches.indexOf(p) >= 0) {\n      continue;\n    }\n    newDescriptor.configurable = true;\n    const name = prefix + p;\n    // NOTE: we prefer writing directly because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (newDescriptor.value) {\n      proto[name] = newDescriptor.value;\n    } else {\n      // NOTE: this can throw if 'force' is used so catch the error.\n      try {\n        Object.defineProperty(proto, name, newDescriptor);\n      } catch(e) {\n        // this error is harmless so we just trap it.\n      }\n    }\n  }\n}\n\n/** @type {!function(new:HTMLElement)} */\nexport const NativeHTMLElement =\n    (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n    HTMLElement;\n\n// note, this is not a perfect polyfill since it doesn't include symbols\n/** @return {!Object<!ObjectPropertyDescriptor>} */\nexport const getOwnPropertyDescriptors = (obj) => {\n  const descriptors = {};\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    descriptors[name] = Object.getOwnPropertyDescriptor(obj, name);\n  });\n  return descriptors;\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  const sd = ensureShadyDataForNode(node);\n  if (!sd.observer) {\n    sd.observer = new AsyncObserver();\n  }\n  sd.observer.callbacks.add(callback);\n  let observer = sd.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      ensureShadyDataForNode(handle._node).observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from './utils.js';\nimport {patchProperties} from './utils.js';\nimport {getInnerHTML} from './innerHTML.js';\n\nconst hasDescriptors = utils.settings.hasDescriptors;\nexport const NATIVE_PREFIX = utils.NATIVE_PREFIX;\n\n// Object on which raw native methods are stored.\n// e.g. `nativeMethods.querySelector.call(node, selector)`\n// same as `node.querySelector(selector)`\nexport const nativeMethods = {\n  /** @this {Element} */\n  querySelector(selector) {\n    return this[NATIVE_PREFIX + 'querySelector'](selector);\n  },\n  /** @this {Element} */\n  querySelectorAll(selector) {\n    return this[NATIVE_PREFIX + 'querySelectorAll'](selector);\n  }\n};\n// Object on which raw native accessors are available via `accessorName(node)`.\n// e.g. `nativeTree.firstChild(node)`\n// same as `node.firstChild`\nexport const nativeTree = {};\n\nconst installNativeAccessor = (name) => {\n  nativeTree[name] = (node) => node[NATIVE_PREFIX + name];\n}\n\nconst installNativeMethod = (name, fn) => {\n  if (!nativeMethods[name]) {\n    nativeMethods[name] = fn;\n  }\n}\n\n\nconst defineNativeAccessors = (proto, descriptors) => {\n  patchProperties(proto, descriptors, NATIVE_PREFIX);\n  // make native accessors available to users\n  for (let prop in descriptors) {\n    installNativeAccessor(prop);\n  }\n}\n\nconst copyProperties = (proto, list = []) => {\n  for (let i = 0; i < list.length; i++) {\n    const name = list[i];\n    const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n    if (descriptor) {\n      Object.defineProperty(proto, NATIVE_PREFIX + name, descriptor);\n      // make native methods/accessors available to users\n      if (descriptor.value) {\n        installNativeMethod(name, descriptor.value);\n      } else {\n        installNativeAccessor(name);\n\n      }\n    }\n  }\n}\n\n/** @type {!TreeWalker} */\nconst nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\n/** @type {!TreeWalker} */\nconst elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nconst clearNode = node => {\n  let firstChild;\n  while ((firstChild = node[NATIVE_PREFIX + 'firstChild'])) {\n    node[NATIVE_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nconst ParentNodeAccessors = [\n  'firstElementChild',\n  'lastElementChild',\n  'children',\n  'childElementCount',\n];\n\nconst ParentNodeMethods = [\n  'querySelector',\n  'querySelectorAll'\n  // 'append', 'prepend'\n];\n\nexport const addNativePrefixedProperties = () => {\n\n  // EventTarget\n  const eventProps = [\n    'dispatchEvent',\n    'addEventListener',\n    'removeEventListener'\n  ];\n  if (window.EventTarget) {\n    copyProperties(window.EventTarget.prototype, eventProps);\n  } else {\n    copyProperties(Node.prototype, eventProps);\n    copyProperties(Window.prototype, eventProps);\n  }\n\n\n  // Node\n  if (hasDescriptors) {\n    copyProperties(Node.prototype, [\n      'parentNode',\n      'firstChild',\n      'lastChild',\n      'previousSibling',\n      'nextSibling',\n      'childNodes',\n      'parentElement',\n      'textContent',\n    ]);\n  } else {\n    defineNativeAccessors(Node.prototype, {\n      parentNode: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.parentNode();\n        }\n      },\n      firstChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.firstChild();\n        }\n      },\n      lastChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.lastChild();\n        }\n\n      },\n      previousSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.previousSibling();\n        }\n      },\n      nextSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.nextSibling();\n        }\n      },\n      // TODO(sorvell): make this a NodeList or whatever\n      childNodes: {\n        /** @this {Node} */\n        get() {\n          const nodes = [];\n          nodeWalker.currentNode = this;\n          let n = nodeWalker.firstChild();\n          while (n) {\n            nodes.push(n);\n            n = nodeWalker.nextSibling();\n          }\n          return nodes;\n        }\n      },\n      parentElement: {\n        /** @this {Node} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.parentNode();\n        }\n      },\n      textContent: {\n        /** @this {Node} */\n        get() {\n          /* eslint-disable no-case-declarations */\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              // TODO(sorvell): This cannot be a single TreeWalker that's reused\n              // at least for Safari 9, but it's unclear why.\n              const textWalker = document.createTreeWalker(this, NodeFilter.SHOW_TEXT,\n                null, false);\n              let content = '', n;\n              while ( (n = textWalker.nextNode()) ) {\n                // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n                // However, should probably patch it only on element.\n                content += n.nodeValue;\n              }\n              return content;\n            default:\n              return this.nodeValue;\n          }\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Node} */\n        set(value) {\n          if (typeof value === 'undefined' || value === null) {\n            value = ''\n          }\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              clearNode(this);\n              // Document fragments must have no childnodes if setting a blank string\n              if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n                // Note: old Chrome versions require 2nd argument here\n                this[NATIVE_PREFIX + 'insertBefore'](document.createTextNode(value), undefined);\n              }\n              break;\n            default:\n              // TODO(sorvell): can't do this if patch nodeValue.\n              this.nodeValue = value;\n              break;\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Node.prototype, [\n    'appendChild',\n    'insertBefore',\n    'removeChild',\n    'replaceChild',\n    'cloneNode',\n    'contains'\n  ]);\n\n  const ParentNodeWalkerDescriptors = {\n    firstElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.firstChild();\n      }\n    },\n    lastElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.lastChild();\n      }\n    },\n    children: {\n      /** @this {ParentNode} */\n      get() {\n        let nodes = [];\n        elementWalker.currentNode = this;\n        let n = elementWalker.firstChild();\n        while (n) {\n          nodes.push(n);\n          n = elementWalker.nextSibling();\n        }\n        return utils.createPolyfilledHTMLCollection(nodes);\n      }\n    },\n    childElementCount: {\n      /** @this {ParentNode} */\n      get() {\n        if (this.children) {\n          return this.children.length;\n        }\n        return 0;\n      }\n    }\n  };\n\n  // Element\n  if (hasDescriptors) {\n    copyProperties(Element.prototype, ParentNodeAccessors);\n\n    copyProperties(Element.prototype, [\n      'previousElementSibling',\n      'nextElementSibling',\n      'innerHTML'\n    ]);\n\n    // NOTE, on IE 11 / Edge 15 children and/or innerHTML are on HTMLElement instead of Element\n    if (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n      copyProperties(HTMLElement.prototype, [\n        'children'\n      ]);\n    }\n    if (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n      copyProperties(HTMLElement.prototype, [\n        'innerHTML'\n      ]);\n    }\n  } else {\n    defineNativeAccessors(Element.prototype, ParentNodeWalkerDescriptors);\n    defineNativeAccessors(Element.prototype, {\n      previousElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.previousSibling();\n        }\n      },\n      nextElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.nextSibling();\n        }\n      },\n      innerHTML: {\n        /** @this {Element} */\n        get() {\n          return getInnerHTML(this, n => n[NATIVE_PREFIX + 'childNodes']);\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Element} */\n        set(value) {\n          const content = this.localName === 'template' ?\n          /** @type {HTMLTemplateElement} */(this).content : this;\n          clearNode(content);\n          const containerName = this.localName || 'div';\n          let htmlContainer;\n          if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n            htmlContainer = inertDoc.createElement(containerName);\n          } else {\n            htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n          }\n          htmlContainer.innerHTML = value;\n          const newContent = this.localName === 'template' ?\n            /** @type {HTMLTemplateElement} */(htmlContainer).content : htmlContainer;\n          let firstChild;\n          while ((firstChild = newContent[NATIVE_PREFIX + 'firstChild'])) {\n            // Note: old Chrome versions require 2nd argument here\n            content[NATIVE_PREFIX + 'insertBefore'](firstChild, undefined);\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Element.prototype, [\n    'setAttribute',\n    'getAttribute',\n    'hasAttribute',\n    'removeAttribute',\n    // on older Safari, these are on Element.\n    'focus',\n    'blur',\n  ]);\n  copyProperties(Element.prototype, ParentNodeMethods);\n\n  // HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'focus',\n    'blur',\n    // On IE these are on HTMLElement\n    'contains'\n  ]);\n\n  if (hasDescriptors) {\n    copyProperties(HTMLElement.prototype, [\n      'parentElement',\n      'children',\n      'innerHTML'\n    ]);\n  }\n\n  // HTMLTemplateElement\n  if (window.HTMLTemplateElement) {\n    copyProperties(window.HTMLTemplateElement.prototype, ['innerHTML']);\n  }\n\n  // DocumentFragment\n  if (hasDescriptors) {\n    // NOTE, IE 11 does not have on DocumentFragment\n    // firstElementChild\n    // lastElementChild\n    copyProperties(DocumentFragment.prototype, ParentNodeAccessors);\n  } else {\n    defineNativeAccessors(DocumentFragment.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(DocumentFragment.prototype, ParentNodeMethods);\n\n  // Document\n  if (hasDescriptors) {\n    copyProperties(Document.prototype, ParentNodeAccessors);\n    copyProperties(Document.prototype, [\n      'activeElement'\n    ]);\n  } else {\n    defineNativeAccessors(Document.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(Document.prototype, [\n    'importNode',\n    'getElementById'\n  ]);\n  copyProperties(Document.prototype, ParentNodeMethods);\n\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nexport const InsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get childNodes() {\n    return this[utils.SHADY_PREFIX + 'childNodes'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    return this[utils.SHADY_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    return this[utils.SHADY_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    return this[utils.SHADY_PREFIX + 'textContent'];\n  },\n\n  /** @this {Node} */\n  set textContent(value) {\n    this[utils.SHADY_PREFIX + 'textContent'] = value;\n  },\n\n  /** @this {Node} */\n  get childElementCount() {\n    return this[utils.SHADY_PREFIX + 'childElementCount'];\n  },\n\n  /** @this {Node} */\n  get children() {\n    return this[utils.SHADY_PREFIX + 'children'];\n  },\n\n  /** @this {Node} */\n  get firstElementChild() {\n    return this[utils.SHADY_PREFIX + 'firstElementChild'];\n  },\n\n  /** @this {Node} */\n  get lastElementChild() {\n    return this[utils.SHADY_PREFIX + 'lastElementChild'];\n  },\n\n  /** @this {Node} */\n  get innerHTML() {\n    return this[utils.SHADY_PREFIX + 'innerHTML'];\n  },\n\n  /** @this {Node} */\n  set innerHTML(value) {\n    return this[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  },\n\n  /** @this {Node} */\n  get shadowRoot() {\n    return this[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n});\n\nexport const OutsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentElement() {\n    return this[utils.SHADY_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get parentNode() {\n    return this[utils.SHADY_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    return this[utils.SHADY_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    return this[utils.SHADY_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get nextElementSibling() {\n    return this[utils.SHADY_PREFIX + 'nextElementSibling'];\n  },\n\n  /** @this {Node} */\n  get previousElementSibling() {\n    return this[utils.SHADY_PREFIX + 'previousElementSibling'];\n  },\n\n  /** @this {Node} */\n  get className() {\n    return this[utils.SHADY_PREFIX + 'className'];\n  },\n\n  /** @this {Node} */\n  set className(value) {\n    return this[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n});\n\nfor (let prop in InsideDescriptors) {\n  InsideDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in OutsideDescriptors) {\n  OutsideDescriptors[prop].enumerable = false;\n}\n\nconst noInstancePatching = utils.settings.hasDescriptors || utils.settings.noPatch;\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__outsideAccessors) {\n      sd.__outsideAccessors = true;\n      utils.patchProperties(element, OutsideDescriptors);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__insideAccessors) {\n      sd.__insideAccessors = true;\n      utils.patchProperties(element, InsideDescriptors);\n    }\n  }","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode} from './shady-data.js';\n\n/*\nMake this name unique so it is unlikely to conflict with properties on objects passed to `addEventListener`\nhttps://github.com/webcomponents/shadydom/issues/173\n*/\nconst /** string */ eventWrappersName = `__eventWrappers${Date.now()}`;\n\n/** @type {?function(!Event): boolean} */\nconst composedGetter = (() => {\n  const composedProp = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');\n  return composedProp ? (ev) => composedProp.get.call(ev) : null;\n})();\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nconst alwaysComposed = {\n  'blur': true,\n  'focus': true,\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nconst unpatchedEvents = {\n  'DOMAttrModified': true,\n  'DOMAttributeNameChanged': true,\n  'DOMCharacterDataModified': true,\n  'DOMElementNameChanged': true,\n  'DOMNodeInserted': true,\n  'DOMNodeInsertedIntoDocument': true,\n  'DOMNodeRemoved': true,\n  'DOMNodeRemovedFromDocument': true,\n  'DOMSubtreeModified': true\n}\n\n/**\n * Some EventTarget subclasses are not Node subclasses, and you cannot call\n * `getRootNode()` on them.\n *\n * @param {!(Node|EventTarget)} eventTarget\n * @return {!(Node|EventTarget)}\n */\nfunction getRootNodeWithFallback(eventTarget) {\n  if (eventTarget instanceof Node) {\n    return eventTarget[utils.SHADY_PREFIX + 'getRootNode']();\n  } else {\n    return eventTarget;\n  }\n}\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = getRootNodeWithFallback(startNode);\n  while (current) {\n    composedPath.push(current);\n    if (current[utils.SHADY_PREFIX + 'assignedSlot']) {\n      current = current[utils.SHADY_PREFIX + 'assignedSlot'];\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current[utils.SHADY_PREFIX + 'parentNode'];\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nexport const composedPath = (event) => {\n  if (!event.__composedPath) {\n    event.__composedPath = pathComposer(event.target, true);\n  }\n  return event.__composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = getRootNodeWithFallback(ancestor);\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventPatches = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    if (this.__composed === undefined) {\n      // if there's an original `composed` getter on the Event prototype, use that\n      if (composedGetter) {\n        // TODO(web-padawan): see https://github.com/webcomponents/shadydom/issues/275\n        this.__composed = this.type === 'focusin' || this.type === 'focusout' || composedGetter(this);\n      // If the event is trusted, or `isTrusted` is not supported, check the list of always composed events\n      } else if (this.isTrusted !== false) {\n        this.__composed = alwaysComposed[this.type];\n      }\n    }\n    return /** @type {!Event} */(this).__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return /** @type {!Event} */(this).__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], /** @type {!Event} */(this).__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  klazz.__proto__ = Base;\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\n/**\n * Check if the event has been retargeted by comparing original `target`, and calculated `target`\n * @param {Event} event\n * @return {boolean} True if the original target and calculated target are the same\n */\nfunction hasRetargeted(event) {\n  return event['__target'] !== event.target || event.__relatedTarget !== event.relatedTarget;\n}\n\n/**\n *\n * @param {Event} event\n * @param {Node} node\n * @param {string} phase\n */\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      if (hasRetargeted(event) && event.target === event.relatedTarget) {\n        return;\n      }\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {get() { return Event.AT_TARGET }});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    const nodeData = shadyDataForNode(node);\n    const root = nodeData && nodeData.root;\n    if (i === 0 || (root && root === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node[utils.SHADY_PREFIX + 'getRootNode']();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\nexport function findListener(wrappers, node, type, capture, once, passive) {\n  for (let i = 0; i < wrappers.length; i++) {\n    if (listenerSettingsEqual(wrappers[i], node, type, capture, once, passive)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Firefox can throw on accessing eventWrappers inside of `removeEventListener` during a selenium run\n * Try/Catch accessing eventWrappers to work around\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1353074\n */\nfunction getEventWrappers(eventLike) {\n  let wrappers = null;\n  try {\n    wrappers = eventLike[eventWrappersName];\n  } catch (e) {} // eslint-disable-line no-empty\n  return wrappers;\n}\n\n/**\n * @this {EventTarget}\n */\nexport function addEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n\n  const handlerType = typeof fnOrObj;\n\n  // bail if `fnOrObj` is not a function, not an object\n  if (handlerType !== 'function' && handlerType !== 'object') {\n    return;\n  }\n\n  // bail if `fnOrObj` is an object without a `handleEvent` method\n  if (handlerType === 'object' && (!fnOrObj.handleEvent || typeof fnOrObj.handleEvent !== 'function')) {\n    return;\n  }\n\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'addEventListener'](type, fnOrObj, optionsOrCapture);\n  }\n\n  // The callback `fn` might be used for multiple nodes/events. Since we generate\n  // a wrapper function, we need to keep track of it when we remove the listener.\n  // It's more efficient to store the node/type/options information as Array in\n  // `fn` itself rather than the node (we assume that the same callback is used\n  // for few nodes at most, whereas a node will likely have many event listeners).\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  // hack to let ShadyRoots have event listeners\n  // event listener will be on host, but `currentTarget`\n  // will be set to shadyroot for event listener\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n\n  let wrappers = fnOrObj[eventWrappersName];\n  if (wrappers) {\n    // Stop if the wrapper function has already been created.\n    if (findListener(wrappers, target, type, capture, once, passive) > -1) {\n      return;\n    }\n  } else {\n    fnOrObj[eventWrappersName] = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   * @param {Event} e\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this[utils.SHADY_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    let lastCurrentTargetDesc;\n    if (target !== this) {\n      // replace `currentTarget` to make `target` and `relatedTarget` correct for inside the shadowroot\n      lastCurrentTargetDesc = Object.getOwnPropertyDescriptor(e, 'currentTarget');\n      Object.defineProperty(e, 'currentTarget', {get() { return target }, configurable: true});\n    }\n    e['__previousCurrentTarget'] = e['currentTarget'];\n    // Always check if a shadowRoot is in the current event path.\n    // If it is not, the event was generated on either the host of the shadowRoot\n    // or a children of the host.\n    if (utils.isShadyRoot(target) && e.composedPath().indexOf(target) == -1) {\n      return;\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(target) > -1) {\n      if (hasRetargeted(e) && e.target === e.relatedTarget) {\n        if (e.eventPhase === Event.BUBBLING_PHASE) {\n          e.stopImmediatePropagation();\n        }\n        return;\n      }\n      // prevent non-bubbling events from triggering bubbling handlers on shadowroot, but only if not in capture phase\n      if (e.eventPhase !== Event.CAPTURING_PHASE && !e.bubbles && e.target !== target && !(target instanceof Window)) {\n        return;\n      }\n      let ret = handlerType === 'function' ?\n        fnOrObj.call(target, e) :\n        (fnOrObj.handleEvent && fnOrObj.handleEvent(e));\n      if (target !== this) {\n        // replace the \"correct\" `currentTarget`\n        if (lastCurrentTargetDesc) {\n          Object.defineProperty(e, 'currentTarget', lastCurrentTargetDesc);\n          lastCurrentTargetDesc = null;\n        } else {\n          delete e['currentTarget'];\n        }\n      }\n      return ret;\n    }\n  };\n\n  // Store the wrapper information.\n  fnOrObj[eventWrappersName].push({\n    // note: use target here which is either a shadowRoot\n    // (when the host element is proxy'ing the event) or this element\n    node: target,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    this[utils.NATIVE_PREFIX + 'addEventListener'](type, wrapperFn, optionsOrCapture);\n  }\n}\n\n/**\n * @this {EventTarget}\n */\nexport function removeEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n  }\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  let wrappers = getEventWrappers(fnOrObj);\n  if (wrappers) {\n    let idx = findListener(wrappers, target, type, capture, once, passive);\n    if (idx > -1) {\n      wrapperFn = wrappers.splice(idx, 1)[0].wrapperFn;\n      // Cleanup.\n      if (!wrappers.length) {\n        fnOrObj[eventWrappersName] = undefined;\n      }\n    }\n  }\n  this[utils.NATIVE_PREFIX + 'removeEventListener'](type, wrapperFn || fnOrObj, optionsOrCapture);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window[utils.NATIVE_PREFIX + 'addEventListener'](ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nconst EventPatchesDescriptors = utils.getOwnPropertyDescriptors(EventPatches);\n\nconst SHADY_PROTO = '__shady_patchedProto';\nconst SHADY_SOURCE_PROTO = '__shady_sourceProto';\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // attempt to patch prototype (via cache)\n  if (utils.settings.hasDescriptors) {\n    const proto = Object.getPrototypeOf(event);\n    if (!Object.hasOwnProperty(proto, SHADY_PROTO)) {\n      const patchedProto = Object.create(proto);\n      patchedProto[SHADY_SOURCE_PROTO] = proto;\n      utils.patchProperties(patchedProto, EventPatchesDescriptors);\n      proto[SHADY_PROTO] = patchedProto;\n    }\n    event.__proto__ = proto[SHADY_PROTO];\n  // and fallback to patching instance\n  } else {\n    utils.patchProperties(event, EventPatchesDescriptors);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(Event);\nlet PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(MouseEvent);\n\n\nexport function patchEvents() {\n  activateFocusEventOverrides();\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n}\n\nexport function patchClick() {\n  // Fix up `Element.prototype.click()` if `isTrusted` is supported, but `composed` isn't\n  if (!composedGetter && Object.getOwnPropertyDescriptor(Event.prototype, 'isTrusted')) {\n    /** @this {Element} */\n    const composedClickFn = function() {\n      const ev = new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      this[utils.SHADY_PREFIX + 'dispatchEvent'](ev);\n    };\n    if (Element.prototype.click) {\n      Element.prototype.click = composedClickFn;\n    } else if (HTMLElement.prototype.click) {\n      HTMLElement.prototype.click = composedClickFn;\n    }\n  }\n}\n\nexport const eventPropertyNames = Object.getOwnPropertyNames(Document.prototype)\n    .filter(name => name.substring(0,2) === 'on');\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from './shady-data.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\n\nfunction linkNode(node, container, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  const ref_nodeData = ref_node ? ensureShadyDataForNode(ref_node) : null;\n  // update ref_node.previousSibling <-> node\n  nodeData.previousSibling = ref_node ? ref_nodeData.previousSibling :\n    container[utils.SHADY_PREFIX + 'lastChild'];\n  let psd = shadyDataForNode(nodeData.previousSibling);\n  if (psd) {\n    psd.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let nsd = shadyDataForNode(nodeData.nextSibling = ref_node);\n  if (nsd) {\n    nsd.previousSibling = node;\n  }\n  // update node <-> container\n  nodeData.parentNode = container;\n  if (ref_node) {\n    if (ref_node === containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  } else {\n    containerData.lastChild = node;\n    if (!containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  containerData.childNodes = null;\n}\n\nexport const recordInsertBefore = (node, container, ref_node) => {\n  patchInsideElementAccessors(container);\n  const containerData = ensureShadyDataForNode(container);\n  if (containerData.firstChild !== undefined) {\n    containerData.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i=0; i < c$.length; i++) {\n      linkNode(c$[i], container, ref_node);\n    }\n    // cleanup logical dom in doc fragment.\n    const nodeData = ensureShadyDataForNode(node);\n    let resetTo = (nodeData.firstChild !== undefined) ? null : undefined;\n    nodeData.firstChild = nodeData.lastChild = resetTo;\n    nodeData.childNodes = resetTo;\n  } else {\n    linkNode(node, container, ref_node);\n  }\n}\n\nexport const recordRemoveChild = (node, container) => {\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  if (node === containerData.firstChild) {\n    containerData.firstChild = nodeData.nextSibling;\n  }\n  if (node === containerData.lastChild) {\n    containerData.lastChild = nodeData.previousSibling;\n  }\n  let p = nodeData.previousSibling;\n  let n = nodeData.nextSibling;\n  if (p) {\n    ensureShadyDataForNode(p).nextSibling = n;\n  }\n  if (n) {\n    ensureShadyDataForNode(n).previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  nodeData.parentNode = nodeData.previousSibling =\n  nodeData.nextSibling = undefined;\n  if (containerData.childNodes !== undefined) {\n    // remove caching of childNodes\n    containerData.childNodes = null;\n  }\n}\n\n/**\n * @param  {!Node} node\n */\nexport const recordChildNodes = (node) => {\n  const nodeData = ensureShadyDataForNode(node);\n  if (nodeData.firstChild === undefined) {\n    // remove caching of childNodes\n    nodeData.childNodes = null;\n    const first = nodeData.firstChild = node[utils.NATIVE_PREFIX + 'firstChild'] || null;\n    nodeData.lastChild = node[utils.NATIVE_PREFIX + 'lastChild'] || null;\n    patchInsideElementAccessors(node);\n    for (let n = first, previous; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n      const sd = ensureShadyDataForNode(n);\n      sd.parentNode = node;\n      sd.nextSibling = n[utils.NATIVE_PREFIX + 'nextSibling'] || null;\n      sd.previousSibling = previous || null;\n      previous = n;\n      patchOutsideElementAccessors(n);\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\nlet scopingShim = null;\n\nexport function getScopingShim() {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  return scopingShim || null;\n}\n\n/**\n * @param {!Node} node\n * @param {string} attr\n * @param {string} value\n */\nexport function scopeClassAttribute(node, attr, value) {\n  const scopingShim = getScopingShim();\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n */\nexport function addShadyScoping(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['scopeNode'](node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} currentScopeName\n */\nexport function removeShadyScoping(node, currentScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['unscopeNode'](node, currentScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @param {string} oldScopeName\n */\nexport function replaceShadyScoping(node, newScopeName, oldScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  if (oldScopeName) {\n    removeShadyScoping(node, oldScopeName);\n  }\n  addShadyScoping(node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @return {boolean}\n */\nexport function currentScopeIsCorrect(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return true;\n  }\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // NOTE: as an optimization, only check that all the top-level children\n    // have the correct scope.\n    let correctScope = true;\n    const childNodes = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let idx = 0; correctScope && (idx < childNodes.length); idx++) {\n      correctScope = correctScope &&\n        currentScopeIsCorrect(childNodes[idx], newScopeName);\n    }\n    return correctScope;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  const currentScope = scopingShim['currentScopeForNode'](node);\n  return currentScope === newScopeName;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function currentScopeForNode(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return '';\n  }\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return '';\n  }\n  return scopingShim['currentScopeForNode'](node);\n}\n\n/**\n * Walk over a node's tree and apply visitorFn to each element node\n *\n * @param {Node} node\n * @param {function(!Node):void} visitorFn\n */\nexport function treeVisitor(node, visitorFn) {\n  if (!node) {\n    return;\n  }\n  // this check is necessary if `node` is a Document Fragment\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    visitorFn(node);\n  }\n  const childNodes = node[utils.SHADY_PREFIX + 'childNodes'];\n  for (let idx = 0, n; idx < childNodes.length; idx++) {\n    n = childNodes[idx];\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      treeVisitor(n, visitorFn);\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getScopingShim, removeShadyScoping, replaceShadyScoping,\n  treeVisitor, currentScopeForNode, currentScopeIsCorrect } from '../style-scoping.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\nimport {recordInsertBefore, recordRemoveChild} from '../link-nodes.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\nconst preferPerformance = utils.settings.preferPerformance;\n\nconst nativeIsConnectedAccessors =\n/** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Node.prototype, 'isConnected')\n);\n\nconst nativeIsConnected = nativeIsConnectedAccessors && nativeIsConnectedAccessors.get;\n\nexport function clearNode(node) {\n  let firstChild;\n  while ((firstChild = node[utils.SHADY_PREFIX + 'firstChild'])) {\n    node[utils.SHADY_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nfunction removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (hasCachedOwnerRoot(node)) {\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n      removeOwnerShadyRoot(n);\n    }\n  }\n  const nodeData = shadyDataForNode(node);\n  if (nodeData) {\n    nodeData.ownerShadyRoot = undefined;\n  }\n}\n\nfunction hasCachedOwnerRoot(node) {\n  const nodeData = shadyDataForNode(node);\n  return Boolean(nodeData && nodeData.ownerShadyRoot !== undefined);\n}\n\n/**\n * Finds the first flattened node that is composed in the node's parent.\n * If the given node is a slot, then the first flattened node is returned\n * if it exists, otherwise advance to the node's nextSibling.\n * @param {Node} node within which to find first composed node\n * @returns {Node} first composed node\n */\nfunction firstComposedNode(node) {\n  let composed = node;\n  if (node && node.localName === 'slot') {\n    const nodeData = shadyDataForNode(node);\n    const flattened = nodeData && nodeData.flattenedNodes;\n    composed = flattened && flattened.length ? flattened[0] :\n      firstComposedNode(node[utils.SHADY_PREFIX + 'nextSibling']);\n  }\n  return composed;\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction scheduleObserver(node, addedNode, removedNode) {\n  const nodeData = shadyDataForNode(node);\n  const observer = nodeData && nodeData.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\nexport const NodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentNode() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.parentNode;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.firstChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.lastChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.nextSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.previousSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get childNodes() {\n    let childNodes;\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const nodeData = shadyDataForNode(this);\n      if (!nodeData.childNodes) {\n        nodeData.childNodes = [];\n        for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          nodeData.childNodes.push(n);\n        }\n      }\n      childNodes = nodeData.childNodes;\n    } else {\n      childNodes = this[utils.NATIVE_PREFIX + 'childNodes'];\n    }\n    childNodes.item = function(index) {\n      return childNodes[index];\n    }\n    return childNodes;\n  },\n\n  /** @this {Node} */\n  get parentElement() {\n    const nodeData = shadyDataForNode(this);\n    let l = nodeData && nodeData.parentNode;\n    if (l && l.nodeType !== Node.ELEMENT_NODE) {\n      l = null;\n    }\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get isConnected() {\n    if (nativeIsConnected && nativeIsConnected.call(this)) {\n      return true;\n    }\n    if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) {\n      return false;\n    }\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (utils.hasDocumentContains) {\n      if (ownerDocument[utils.NATIVE_PREFIX + 'contains'](this)) {\n        return true;\n      }\n    } else if (ownerDocument.documentElement &&\n      ownerDocument.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n      return true;\n    }\n    // Slow path for non-distributed nodes.\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node[utils.SHADY_PREFIX + 'parentNode'] || (utils.isShadyRoot(node) ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      let tc = [];\n      for (let i = 0, cn = this[utils.SHADY_PREFIX + 'childNodes'], c; (c = cn[i]); i++) {\n        if (c.nodeType !== Node.COMMENT_NODE) {\n          tc.push(c[utils.SHADY_PREFIX + 'textContent']);\n        }\n      }\n      return tc.join('');\n    } else {\n      return this[utils.NATIVE_PREFIX + 'textContent'];\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {string} value\n   */\n  set textContent(value) {\n    if (typeof value === 'undefined' || value === null) {\n      value = ''\n    }\n    switch (this.nodeType) {\n      case Node.ELEMENT_NODE:\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        if (!utils.isTrackingLogicalChildNodes(this) && utils.settings.hasDescriptors) {\n          // may be removing a nested slot but fast path if we know we are not.\n          const firstChild = this[utils.SHADY_PREFIX + 'firstChild'];\n          if (firstChild != this[utils.SHADY_PREFIX + 'lastChild'] ||\n            (firstChild && firstChild.nodeType != Node.TEXT_NODE)) {\n            clearNode(this);\n          }\n          this[utils.NATIVE_PREFIX + 'textContent'] = value;\n        } else {\n          clearNode(this);\n          // Document fragments must have no childNodes if setting a blank string\n          if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n            this[utils.SHADY_PREFIX + 'insertBefore'](document.createTextNode(value))\n          }\n        }\n        break;\n      default:\n        // Note, be wary of patching `nodeValue`.\n        this.nodeValue = value;\n        break;\n    }\n  },\n\n  // Patched `insertBefore`. Note that all mutations that add nodes are routed\n  // here. When a <slot> is added or a node is added to a host with a shadowRoot\n  // with a slot, a standard dom `insert` call is aborted and `_asyncRender`\n  // is called on the relevant shadowRoot. In all other cases, a standard dom\n  // `insert` can be made, but the location and ref_node may need to be changed.\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  insertBefore(node, ref_node) {\n    // optimization: assume native insertBefore is ok if the nodes are not in the document.\n    if (this.ownerDocument !== doc && node.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      return node;\n    }\n    if (node === this) {\n      throw Error(`Failed to execute 'appendChild' on 'Node': The new child element contains the parent.`);\n    }\n    if (ref_node) {\n      const refData = shadyDataForNode(ref_node);\n      const p = refData && refData.parentNode;\n      if ((p !== undefined && p !== this) ||\n        (p === undefined && ref_node[utils.NATIVE_PREFIX + 'parentNode'] !== this)) {\n        throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n        `before which the new node is to be inserted is not a child of this node.`);\n      }\n    }\n    if (ref_node === node) {\n      return node;\n    }\n    /** @type {!Array<!HTMLSlotElement>} */\n    const slotsAdded = [];\n    const ownerRoot = ownerShadyRootForNode(this);\n    /** @type {string} */\n    const newScopeName = ownerRoot ? ownerRoot.host.localName : currentScopeForNode(this);\n    /** @type {string} */\n    let oldScopeName;\n    // remove from existing location\n    const parentNode = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (parentNode) {\n      oldScopeName = currentScopeForNode(node);\n      parentNode[utils.SHADY_PREFIX + 'removeChild'](node,\n        Boolean(ownerRoot) || !ownerShadyRootForNode(node));\n    }\n    // add to new parent\n    let allowNativeInsert = true;\n    const needsScoping = (!preferPerformance || node['__noInsertionPoint'] === undefined) &&\n        !currentScopeIsCorrect(node, newScopeName);\n    const needsSlotFinding = ownerRoot && !node['__noInsertionPoint'] &&\n        (!preferPerformance || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    if (needsSlotFinding || needsScoping) {\n      // NOTE: avoid node.removeChild as this *can* trigger another patched\n      // method (e.g. custom elements) and we want only the shady method to run.\n      // The following table describes what style scoping actions should happen as a result of this insertion.\n      // document -> shadowRoot: replace\n      // shadowRoot -> shadowRoot: replace\n      // shadowRoot -> shadowRoot of same type: do nothing\n      // shadowRoot -> document: allow unscoping\n      // document -> document: do nothing\n      // The \"same type of shadowRoot\" and \"document to document cases rely on `currentScopeIsCorrect` returning true\n      if (needsScoping) {\n        // in a document or disconnected tree, replace scoping if necessary\n        oldScopeName = oldScopeName || currentScopeForNode(node);\n      }\n      treeVisitor(node, (node) => {\n        if (needsSlotFinding && node.localName === 'slot') {\n          slotsAdded.push(/** @type {!HTMLSlotElement} */(node));\n        }\n        if (needsScoping) {\n          replaceShadyScoping(node, newScopeName, oldScopeName);\n        }\n      });\n    }\n    // if a slot is added, must render containing root.\n    if (this.localName === 'slot' || slotsAdded.length) {\n      if (slotsAdded.length) {\n        ownerRoot._addSlots(slotsAdded);\n      }\n      if (ownerRoot) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordInsertBefore(node, this, ref_node);\n      // when inserting into a host with a shadowRoot with slot, use\n      // `shadowRoot._asyncRender()` via `attach-shadow` module\n      const parentData = shadyDataForNode(this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        allowNativeInsert = false;\n      // when inserting into a host with shadowRoot with NO slot, do nothing\n      // as the node should not be added to composed dome anywhere.\n      } else if (parentData.root) {\n        allowNativeInsert = false;\n      }\n    }\n    if (allowNativeInsert) {\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host : this;\n      // if ref_node, get the ref_node that's actually in composed dom.\n      if (ref_node) {\n        ref_node = firstComposedNode(ref_node);\n        container[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      } else {\n        container[utils.NATIVE_PREFIX + 'appendChild'](node);\n      }\n    // Since ownerDocument is not patched, it can be incorrect after this call\n    // if the node is physically appended via distribution. This can result\n    // in the custom elements polyfill not upgrading the node if it's in an inert doc.\n    // We correct this by calling `adoptNode`.\n    } else if (node.ownerDocument !== this.ownerDocument) {\n      this.ownerDocument.adoptNode(node);\n    }\n    scheduleObserver(this, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   */\n  appendChild(node) {\n    return this[utils.SHADY_PREFIX + 'insertBefore'](node);\n  },\n\n  /**\n   * Patched `removeChild`. Note that all dom \"removals\" are routed here.\n   * Removes the given `node` from the element's `children`.\n   * This method also performs dom composition.\n   * @this {Node}\n   * @param {Node} node\n   * @param {boolean=} skipUnscoping\n   */\n  removeChild(node, skipUnscoping = false) {\n    if (this.ownerDocument !== doc) {\n      return this[utils.NATIVE_PREFIX + 'removeChild'](node);\n    }\n    if (node[utils.SHADY_PREFIX + 'parentNode'] !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    let preventNativeRemove;\n    let ownerRoot = ownerShadyRootForNode(node);\n    const removingInsertionPoint = ownerRoot && ownerRoot._removeContainedSlots(node);\n    const parentData = shadyDataForNode(this);\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordRemoveChild(node, this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        preventNativeRemove = true;\n      }\n    }\n    // unscope a node leaving a ShadowRoot if ShadyCSS is present, and this node\n    // is not going to be rescoped in `insertBefore`\n    if (getScopingShim() && !skipUnscoping && ownerRoot) {\n      const oldScopeName = currentScopeForNode(node);\n      treeVisitor(node, (node) => {\n        removeShadyScoping(node, oldScopeName);\n      });\n    }\n    removeOwnerShadyRoot(node);\n    // if removing slot, must render containing root\n    if (ownerRoot) {\n      let changeSlotContent = this && this.localName === 'slot';\n      if (changeSlotContent) {\n        preventNativeRemove = true;\n      }\n      if (removingInsertionPoint || changeSlotContent) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (!preventNativeRemove) {\n      // if removing from a shadyRoot, remove from host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // (1) if parent has a shadyRoot, element may or may not at distributed\n      // location (could be undistributed)\n      // (2) if parent is a slot, element may not ben in composed dom\n      if (!(parentData.root || node.localName === 'slot') ||\n        (container === node[utils.NATIVE_PREFIX + 'parentNode'])) {\n        container[utils.NATIVE_PREFIX + 'removeChild'](node);\n      }\n    }\n    scheduleObserver(this, null, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  replaceChild(node, ref_node) {\n    this[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n    this[utils.SHADY_PREFIX + 'removeChild'](ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {boolean=} deep\n   */\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return this[utils.NATIVE_PREFIX + 'cloneNode'](deep);\n    } else {\n      const n = this[utils.NATIVE_PREFIX + 'cloneNode'](false);\n      // Attribute nodes historically had childNodes, but they have later\n      // been removed from the spec.\n      // Make sure we do not do a deep clone on them for old browsers (IE11)\n      if (deep && n.nodeType !== Node.ATTRIBUTE_NODE) {\n        let c$ = this[utils.SHADY_PREFIX + 'childNodes'];\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i][utils.SHADY_PREFIX + 'cloneNode'](true);\n          n[utils.SHADY_PREFIX + 'appendChild'](nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {Object=} options\n   */\n  // TODO(sorvell): implement `options` e.g. `{ composed: boolean }`\n  getRootNode(options) { // eslint-disable-line no-unused-vars\n    if (!this || !this.nodeType) {\n      return;\n    }\n    const nodeData = ensureShadyDataForNode(this);\n    let root = nodeData.ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(this)) {\n        root = this;\n        nodeData.ownerShadyRoot = root;\n      } else {\n        let parent = this[utils.SHADY_PREFIX + 'parentNode'];\n        root = parent ? parent[utils.SHADY_PREFIX + 'getRootNode'](options) : this;\n        // memo-ize result for performance but only memo-ize\n        // result if node is in the document. This avoids a problem where a root\n        // can be cached while an element is inside a fragment.\n        // If this happens and we cache the result, the value can become stale\n        // because for perf we avoid processing the subtree of added fragments.\n        if (document.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n          nodeData.ownerShadyRoot = root;\n        }\n      }\n\n    }\n    return root;\n  },\n\n  /** @this {Node} */\n  contains(node) {\n    return utils.contains(this, node);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  queryElements(node[utils.SHADY_PREFIX + 'childNodes'], matcher,\n    halter, list);\n  return list;\n}\n\nfunction queryElements(elements, matcher, halter, list) {\n  for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n    if (c.nodeType === Node.ELEMENT_NODE &&\n        queryElement(c, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  queryElements(node[utils.SHADY_PREFIX + 'childNodes'], matcher,\n    halter, list);\n}\n\n// Needed on Element, DocumentFragment, Document\nexport const ParentNodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get firstElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.firstChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'firstChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'firstElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get lastElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.lastChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'lastChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'lastElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get children() {\n    if (!utils.isTrackingLogicalChildNodes(this)) {\n      return this[utils.NATIVE_PREFIX + 'children'];\n    }\n    return utils.createPolyfilledHTMLCollection(Array.prototype.filter.call(\n        this[utils.SHADY_PREFIX + 'childNodes'], function(n) {\n      return (n.nodeType === Node.ELEMENT_NODE);\n    }));\n  },\n\n  /** @this {Element} */\n  get childElementCount() {\n    let children = this[utils.SHADY_PREFIX + 'children'];\n    if(children) {\n      return children.length;\n    }\n    return 0;\n  }\n\n});\n\nexport const QueryPatches = utils.getOwnPropertyDescriptors({\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   * @param  {boolean} useNative\n   */\n  // TODO(sorvell): `useNative` option relies on native querySelectorAll and\n  // misses distributed nodes, see\n  // https://github.com/webcomponents/shadydom/pull/210#issuecomment-361435503\n  querySelectorAll(selector, useNative) {\n    if (useNative) {\n      const o = Array.prototype.slice.call(this[utils.NATIVE_PREFIX + 'querySelectorAll'](selector));\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      return o.filter(e => e[utils.SHADY_PREFIX + 'getRootNode']() == root);\n    }\n    return query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n});\n\n// Create a custom `ParentNodeDocumentOrFragment` that optionally does not\n// mixin querySelector/All; this is a performance optimization.\nexport const ParentNodeDocumentOrFragmentPatches = utils.settings.preferPerformance ?\n  Object.assign({}, ParentNodePatches) : ParentNodePatches;\n\nObject.assign(ParentNodePatches, QueryPatches);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport { query } from './ParentNode.js';\n\nexport const DocumentOrFragmentPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {Element}\n   * @param {string} id\n   */\n  getElementById(id) {\n    if (id === '') {\n      return null;\n    }\n    let result = query(this, function(n) {\n      return n.id == id;\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nfunction getDocumentActiveElement() {\n  if (utils.settings.hasDescriptors) {\n    return document[utils.NATIVE_PREFIX + 'activeElement'];\n  } else {\n    return document.activeElement;\n  }\n}\n\nexport const DocumentOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Document|ShadowRoot} */\n  get activeElement() {\n    let active = getDocumentActiveElement();\n    // In IE11, activeElement might be an empty object if the document is\n    // contained in an iframe.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n    if (!active || !active.nodeType) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(this));\n    if (this !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (this.host === active ||\n          !this.host[utils.NATIVE_PREFIX + 'contains'](active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== this) {\n      active = activeRoot.host;\n      activeRoot = ownerShadyRootForNode(active);\n    }\n    if (this === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === this ? active : null;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {calculateSplices} from './array-splice.js';\nimport * as utils from './utils.js';\nimport {enqueue} from './flush.js';\nimport {ensureShadyDataForNode, shadyDataForNode} from './shady-data.js';\nimport {recordChildNodes} from './link-nodes.js';\nimport {patchShadyRoot} from './patch-shadyRoot.js';\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\nconst CATCHALL_NAME = '__catchall';\nconst SHADYROOT_NAME = 'ShadyRoot';\n\nconst MODE_CLOSED = 'closed';\n\nlet isRendering = utils.settings['deferConnectionCallbacks'] && document.readyState === 'loading';\nlet rootRendered;\n\nfunction ancestorList(node) {\n  let ancestors = [];\n  do {\n    ancestors.unshift(node);\n  } while ((node = node[utils.SHADY_PREFIX + 'parentNode']));\n  return ancestors;\n}\n\n/**\n * @extends {ShadowRoot}\n */\nclass ShadyRoot {\n\n  constructor(token, host, options) {\n    if (token !== ShadyRootConstructionToken) {\n      throw new TypeError('Illegal constructor');\n    }\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this._localName = SHADYROOT_NAME;\n    // root <=> host\n    this.host = host;\n    /** @type {!string|undefined} */\n    this.mode = options && options.mode;\n    recordChildNodes(host);\n    const hostData = ensureShadyDataForNode(host);\n    /** @type {!ShadyRoot} */\n    hostData.root = this;\n    hostData.publicRoot = this.mode !== MODE_CLOSED ? this : null;\n    // setup root\n    const rootData = ensureShadyDataForNode(this);\n    rootData.firstChild = rootData.lastChild =\n        rootData.parentNode = rootData.nextSibling =\n        rootData.previousSibling = null;\n    rootData.childNodes = [];\n    // state flags\n    this._renderPending = false;\n    this._hasRendered = false;\n    // marsalled lazily\n    this._slotList = null;\n    /** @type {Object<string, Array<HTMLSlotElement>>} */\n    this._slotMap = null;\n    this._pendingSlots = null;\n    // NOTE: optimization flag, only require an asynchronous render\n    // to record parsed children if flag is not set.\n    if (utils.settings['preferPerformance']) {\n      let n;\n      while ((n = host[utils.NATIVE_PREFIX + 'firstChild'])) {\n        host[utils.NATIVE_PREFIX + 'removeChild'](n);\n      }\n    } else {\n      this._asyncRender();\n    }\n  }\n\n  _asyncRender() {\n    if (!this._renderPending) {\n      this._renderPending = true;\n      enqueue(() => this._render());\n    }\n  }\n\n  // returns the oldest renderPending ancestor root.\n  _getPendingDistributionRoot() {\n    let renderRoot;\n    let root = this;\n    while (root) {\n      if (root._renderPending) {\n        renderRoot = root;\n      }\n      root = root._getDistributionParent();\n    }\n    return renderRoot;\n  }\n\n  // Returns the shadyRoot `this.host` if `this.host`\n  // has children that require distribution.\n  _getDistributionParent() {\n    let root = this.host[utils.SHADY_PREFIX + 'getRootNode']();\n    if (!utils.isShadyRoot(root)) {\n      return;\n    }\n    const nodeData = shadyDataForNode(this.host);\n    if (nodeData && nodeData.__childSlotCount > 0) {\n      return root;\n    }\n  }\n\n  // Renders the top most render pending shadowRoot in the distribution tree.\n  // This is safe because when a distribution parent renders, all children render.\n  _render() {\n    // If this root is not pending, it needs no rendering work. Any pending\n    // parent that needs to render wll cause this root to render.\n    const root = this._renderPending && this._getPendingDistributionRoot();\n    if (root) {\n      root._renderSelf();\n    }\n  }\n\n  _flushInitial() {\n    if (!this._hasRendered && this._renderPending) {\n      this._render();\n    }\n  }\n\n  /** @override */\n  _renderSelf() {\n    // track rendering state.\n    const wasRendering = isRendering;\n    isRendering = true;\n    this._renderPending = false;\n    if (this._slotList) {\n      this._distribute();\n      this._compose();\n    }\n    // NOTE: optimization flag, only process parsed children\n    // if optimization flag is not set.\n    // on initial render remove any undistributed children.\n    if (!utils.settings['preferPerformance'] && !this._hasRendered) {\n      const c$ = this.host[utils.SHADY_PREFIX + 'childNodes'];\n      for (let i=0, l=c$.length; i < l; i++) {\n        const child = c$[i];\n        const data = shadyDataForNode(child);\n        if (child[utils.NATIVE_PREFIX + 'parentNode'] === this.host &&\n            (child.localName === 'slot' || !data.assignedSlot)) {\n          this.host[utils.NATIVE_PREFIX + 'removeChild'](child);\n        }\n      }\n    }\n    this._hasRendered = true;\n    isRendering = wasRendering;\n    if (rootRendered) {\n      rootRendered();\n    }\n  }\n\n  _distribute() {\n    this._validateSlots();\n    // capture # of previously assigned nodes to help determine if dirty.\n    for (let i=0, slot; i < this._slotList.length; i++) {\n      slot = this._slotList[i];\n      this._clearSlotAssignedNodes(slot);\n    }\n    // distribute host children.\n    for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n      this._distributeNodeToSlot(n);\n    }\n    // fallback content, slotchange, and dirty roots\n    for (let i=0; i < this._slotList.length; i++) {\n      const slot = this._slotList[i];\n      const slotData = shadyDataForNode(slot);\n      // distribute fallback content\n      if (!slotData.assignedNodes.length) {\n        for (let n=slot[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          this._distributeNodeToSlot(n, slot);\n        }\n      }\n      const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n      const slotParentRoot = slotParentData && slotParentData.root;\n      if (slotParentRoot && (slotParentRoot._hasInsertionPoint() || slotParentRoot._renderPending)) {\n        slotParentRoot._renderSelf();\n      }\n      this._addAssignedToFlattenedNodes(slotData.flattenedNodes,\n        slotData.assignedNodes);\n      let prevAssignedNodes = slotData._previouslyAssignedNodes;\n      if (prevAssignedNodes) {\n        for (let i=0; i < prevAssignedNodes.length; i++) {\n          shadyDataForNode(prevAssignedNodes[i])._prevAssignedSlot = null;\n        }\n        slotData._previouslyAssignedNodes = null;\n        // dirty if previously less assigned nodes than previously assigned.\n        if (prevAssignedNodes.length > slotData.assignedNodes.length) {\n          slotData.dirty = true;\n        }\n      }\n      /* Note: A slot is marked dirty whenever a node is newly assigned to it\n      or a node is assigned to a different slot (done in `_distributeNodeToSlot`)\n      or if the number of nodes assigned to the slot has decreased (done above);\n      */\n      if (slotData.dirty) {\n        slotData.dirty = false;\n        this._fireSlotChange(slot);\n      }\n    }\n  }\n\n  /**\n   * Distributes given `node` to the appropriate slot based on its `slot`\n   * attribute. If `forcedSlot` is given, then the node is distributed to the\n   * `forcedSlot`.\n   * Note: slot to which the node is assigned will be marked dirty for firing\n   * `slotchange`.\n   * @param {Node} node\n   * @param {Node=} forcedSlot\n   *\n   */\n  _distributeNodeToSlot(node, forcedSlot) {\n    const nodeData = ensureShadyDataForNode(node);\n    let oldSlot = nodeData._prevAssignedSlot;\n    nodeData._prevAssignedSlot = null;\n    let slot = forcedSlot;\n    if (!slot) {\n      let name = node[utils.SHADY_PREFIX + 'slot'] || CATCHALL_NAME;\n      const list = this._slotMap[name];\n      slot = list && list[0];\n    }\n    if (slot) {\n      const slotData = ensureShadyDataForNode(slot);\n      slotData.assignedNodes.push(node);\n      nodeData.assignedSlot = slot;\n    } else {\n      nodeData.assignedSlot = undefined;\n    }\n    if (oldSlot !== nodeData.assignedSlot) {\n      if (nodeData.assignedSlot) {\n        ensureShadyDataForNode(nodeData.assignedSlot).dirty = true;\n      }\n    }\n  }\n\n  /**\n   * Clears the assignedNodes tracking data for a given `slot`. Note, the current\n   * assigned node data is tracked (via _previouslyAssignedNodes and\n   * _prevAssignedSlot) to see if `slotchange` should fire. This data may be out\n   *  of date at this time because the assigned nodes may have already been\n   * distributed to another root. This is ok since this data is only used to\n   * track changes.\n   * @param {HTMLSlotElement} slot\n   */\n  _clearSlotAssignedNodes(slot) {\n    const slotData = shadyDataForNode(slot);\n    let n$ = slotData.assignedNodes;\n    slotData.assignedNodes = [];\n    slotData.flattenedNodes = [];\n    slotData._previouslyAssignedNodes = n$;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = shadyDataForNode(n$[i]);\n        n._prevAssignedSlot = n.assignedSlot;\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n.assignedSlot === slot) {\n          n.assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  _addAssignedToFlattenedNodes(flattened, assigned) {\n    for (let i=0, n; (i<assigned.length) && (n=assigned[i]); i++) {\n      if (n.localName == 'slot') {\n        const nestedAssigned = shadyDataForNode(n).assignedNodes;\n        if (nestedAssigned && nestedAssigned.length) {\n          this._addAssignedToFlattenedNodes(flattened, nestedAssigned);\n        }\n      } else {\n        flattened.push(assigned[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(slot) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    slot[utils.NATIVE_PREFIX + 'dispatchEvent'](new Event('slotchange'));\n    const slotData = shadyDataForNode(slot);\n    if (slotData.assignedSlot) {\n      this._fireSlotChange(slotData.assignedSlot);\n    }\n  }\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  // NOTE: here we only compose parents of <slot> elements and not the\n  // shadowRoot into the host. The latter is performend via a fast path\n  // in the `logical-mutation`.insertBefore.\n  _compose() {\n    const slots = this._slotList;\n    let composeList = [];\n    for (let i=0; i < slots.length; i++) {\n      const parent = slots[i][utils.SHADY_PREFIX + 'parentNode'];\n      /* compose node only if:\n        (1) parent does not have a shadowRoot since shadowRoot has already\n        composed into the host\n        (2) we're not already composing it\n        [consider (n^2) but rare better than Set]\n      */\n      const parentData = shadyDataForNode(parent);\n      if (!(parentData && parentData.root) &&\n        composeList.indexOf(parent) < 0) {\n        composeList.push(parent);\n      }\n    }\n    for (let i=0; i < composeList.length; i++) {\n      const node = composeList[i];\n      const targetNode = node === this ? this.host : node;\n      this._updateChildNodes(targetNode, this._composeNode(node));\n    }\n  }\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      // Note: if we see a slot here, the nodes are guaranteed to need to be\n      // composed here. This is because if there is redistribution, it has\n      // already been handled by this point.\n      if (this._isInsertionPoint(child)) {\n        let flattenedNodes = shadyDataForNode(child).flattenedNodes;\n        for (let j = 0; j < flattenedNodes.length; j++) {\n          let distributedNode = flattenedNodes[j];\n            children.push(distributedNode);\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  }\n\n  _isInsertionPoint(node) {\n      return node.localName == 'slot';\n    }\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = Array.prototype.slice.call(container[utils.NATIVE_PREFIX + 'childNodes']);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === container) {\n          container[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n        // TODO(sorvell): avoid the need for splicing here.\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        container[utils.NATIVE_PREFIX + 'insertBefore'](n, next);\n        composed.splice(j, 0, n);\n      }\n    }\n  }\n\n  _ensureSlotData() {\n    this._pendingSlots = this._pendingSlots || [];\n    this._slotList = this._slotList || [];\n    this._slotMap = this._slotMap || {};\n  }\n\n  _addSlots(slots) {\n    this._ensureSlotData();\n    this._pendingSlots.push(...slots);\n  }\n\n  _validateSlots() {\n    if (this._pendingSlots && this._pendingSlots.length) {\n      this._mapSlots(this._pendingSlots);\n      this._pendingSlots = [];\n    }\n  }\n\n  /**\n   * Adds the given slots. Slots are maintained in an dom-ordered list.\n   * In addition a map of name to slot is updated.\n   */\n  _mapSlots(slots) {\n    let slotNamesToSort;\n    for (let i=0; i < slots.length; i++) {\n      const slot = slots[i];\n      // ensure insertionPoints's and their parents have logical dom info.\n      // save logical tree info\n      // a. for shadyRoot\n      // b. for insertion points (fallback)\n      // c. for parents of insertion points\n      recordChildNodes(slot);\n      const slotParent = slot[utils.SHADY_PREFIX + 'parentNode'];\n      recordChildNodes(slotParent);\n      const slotParentData = shadyDataForNode(slotParent);\n      slotParentData.__childSlotCount = (slotParentData.__childSlotCount || 0) + 1;\n      let name = this._nameForSlot(slot);\n      if (this._slotMap[name]) {\n        slotNamesToSort = slotNamesToSort || {};\n        slotNamesToSort[name] = true;\n        this._slotMap[name].push(slot);\n      } else {\n        this._slotMap[name] = [slot];\n      }\n      this._slotList.push(slot);\n    }\n    if (slotNamesToSort) {\n      for (let n in slotNamesToSort) {\n        this._slotMap[n] = this._sortSlots(this._slotMap[n]);\n      }\n    }\n  }\n\n  _nameForSlot(slot) {\n    const name = slot['name'] || slot.getAttribute('name') || CATCHALL_NAME;\n    slot.__slotName = name;\n    return name;\n  }\n\n  /**\n   * Slots are kept in an ordered list. Slots with the same name\n   * are sorted here by tree order.\n   */\n  _sortSlots(slots) {\n    // NOTE: Cannot use `compareDocumentPosition` because it's not polyfilled,\n    // but the code here could be used to polyfill the preceeding/following info\n    // in `compareDocumentPosition`.\n    return slots.sort((a, b) => {\n      let listA = ancestorList(a);\n      let listB = ancestorList(b);\n      for (var i=0; i < listA.length; i++) {\n        let nA = listA[i];\n        let nB = listB[i];\n        if (nA !== nB) {\n          let c$ = Array.from(nA[utils.SHADY_PREFIX + 'parentNode'][utils.SHADY_PREFIX + 'childNodes']);\n          return c$.indexOf(nA) - c$.indexOf(nB);\n        }\n      }\n    });\n  }\n\n  /**\n   * Removes from tracked slot data any slots contained within `container` and\n   * then updates the tracked data (_slotList and _slotMap).\n   * Any removed slots also have their `assignedNodes` removed from comopsed dom.\n   */\n  _removeContainedSlots(container) {\n    if (!this._slotList) {\n      return;\n    }\n    this._validateSlots();\n    let didRemove;\n    const map = this._slotMap;\n    for (let n in map) {\n      const slots = map[n];\n      for (let i=0; i < slots.length; i++) {\n        const slot = slots[i];\n        if (utils.contains(container, slot)) {\n          slots.splice(i, 1);\n          const x = this._slotList.indexOf(slot);\n          if (x >= 0) {\n            this._slotList.splice(x, 1);\n            const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n            if (slotParentData && slotParentData.__childSlotCount) {\n              slotParentData.__childSlotCount--;\n            }\n          }\n          i--;\n          this._removeFlattenedNodes(slot);\n          didRemove = true;\n        }\n      }\n    }\n    return didRemove;\n  }\n\n  _updateSlotName(slot) {\n    if (!this._slotList) {\n      return;\n    }\n    // make sure slotMap is initialized with this slot\n    this._validateSlots();\n    const oldName = slot.__slotName;\n    const name = this._nameForSlot(slot);\n    if (name === oldName) {\n      return;\n    }\n    // remove from existing tracking\n    let slots = this._slotMap[oldName];\n    const i = slots.indexOf(slot);\n    if (i >= 0) {\n      slots.splice(i, 1);\n    }\n    // add to new location and sort if nedessary\n    let list = this._slotMap[name] || (this._slotMap[name] = []);\n    list.push(slot);\n    if (list.length > 1) {\n      this._slotMap[name] = this._sortSlots(list);\n    }\n  }\n\n  _removeFlattenedNodes(slot) {\n    const data = shadyDataForNode(slot);\n    let n$ = data.flattenedNodes;\n    if (n$) {\n      for (let i=0; i<n$.length; i++) {\n        let node = n$[i];\n        let parent = node[utils.NATIVE_PREFIX + 'parentNode'];\n        if (parent) {\n          parent[utils.NATIVE_PREFIX + 'removeChild'](node);\n        }\n      }\n    }\n    data.flattenedNodes = [];\n    data.assignedNodes = [];\n  }\n\n  _hasInsertionPoint() {\n    this._validateSlots();\n    return Boolean(this._slotList && this._slotList.length);\n  }\n}\n\npatchShadyRoot(ShadyRoot.prototype);\nexport {ShadyRoot};\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport const attachShadow = (host, options) => {\n  if (!host) {\n    throw new Error('Must provide a host.');\n  }\n  if (!options) {\n    throw new Error('Not enough arguments.');\n  }\n  return new ShadyRoot(ShadyRootConstructionToken, host, options);\n}\n\n// Mitigate connect/disconnect spam by wrapping custom element classes.\nif (window['customElements'] && utils.settings.inUse && !utils.settings['preferPerformance']) {\n\n  // process connect/disconnect after roots have rendered to avoid\n  // issues with reaction stack.\n  let connectMap = new Map();\n  rootRendered = function() {\n    // allow elements to connect\n    // save map state (without needing polyfills on IE11)\n    const r = [];\n    connectMap.forEach((v, k) => {\n      r.push([k, v]);\n    });\n    connectMap.clear();\n    for (let i=0; i < r.length; i++) {\n      const e = r[i][0], value = r[i][1];\n      if (value) {\n        e.__shadydom_connectedCallback();\n      } else {\n        e.__shadydom_disconnectedCallback();\n      }\n    }\n  }\n\n  // Document is in loading state and flag is set (deferConnectionCallbacks)\n  // so process connection stack when `readystatechange` fires.\n  if (isRendering) {\n    document.addEventListener('readystatechange', () => {\n      isRendering = false;\n      rootRendered();\n    }, {once: true});\n  }\n\n  /*\n   * (1) elements can only be connected/disconnected if they are in the expected\n   * state.\n   * (2) never run connect/disconnect during rendering to avoid reaction stack issues.\n   */\n  const ManageConnect = (base, connected, disconnected) => {\n    let counter = 0;\n    const connectFlag = `__isConnected${counter++}`;\n    if (connected || disconnected) {\n\n      /** @this {!HTMLElement} */\n      base.prototype.connectedCallback = base.prototype.__shadydom_connectedCallback = function() {\n        // if rendering defer connected\n        // otherwise connect only if we haven't already\n        if (isRendering) {\n          connectMap.set(this, true);\n        } else if (!this[connectFlag]) {\n          this[connectFlag] = true;\n          if (connected) {\n            connected.call(this);\n          }\n        }\n      }\n\n      /** @this {!HTMLElement} */\n      base.prototype.disconnectedCallback = base.prototype.__shadydom_disconnectedCallback = function() {\n        // if rendering, cancel a pending connection and queue disconnect,\n        // otherwise disconnect only if a connection has been allowed\n        if (isRendering) {\n          // This is necessary only because calling removeChild\n          // on a node that requires distribution leaves it in the DOM tree\n          // until distribution.\n          // NOTE: remember this is checking the patched isConnected to determine\n          // if the node is in the logical tree.\n          if (!this.isConnected) {\n            connectMap.set(this, false);\n          }\n        } else if (this[connectFlag]) {\n          this[connectFlag] = false;\n          if (disconnected) {\n            disconnected.call(this);\n          }\n        }\n      }\n    }\n\n    return base;\n  }\n\n  const define = window['customElements']['define'];\n  // NOTE: Instead of patching customElements.define,\n  // re-define on the CustomElementRegistry.prototype.define\n  // for Safari 10 compatibility (it's flakey otherwise).\n  Object.defineProperty(window['CustomElementRegistry'].prototype, 'define', {\n    value: function(name, constructor) {\n      const connected = constructor.prototype.connectedCallback;\n      const disconnected = constructor.prototype.disconnectedCallback;\n      define.call(window['customElements'], name,\n          ManageConnect(constructor, connected, disconnected));\n      // unpatch connected/disconnected on class; custom elements tears this off\n      // so the patch is maintained, but if the user calls these methods for\n      // e.g. testing, they will be as expected.\n      constructor.prototype.connectedCallback = connected;\n      constructor.prototype.disconnectedCallback = disconnected;\n    }\n  });\n\n}\n\n/** @return {!ShadyRoot|undefined} */\nexport const ownerShadyRootForNode = (node) => {\n  let root = node[utils.SHADY_PREFIX + 'getRootNode']();\n  if (utils.isShadyRoot(root)) {\n    return root;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getInnerHTML} from '../innerHTML.js';\nimport {clearNode} from './Node.js';\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nexport const ElementOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get innerHTML() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const content = this.localName === 'template' ?\n      /** @type {HTMLTemplateElement} */(this).content : this;\n      return getInnerHTML(content, (e) => e[utils.SHADY_PREFIX + 'childNodes']);\n    } else {\n      return this[utils.NATIVE_PREFIX + 'innerHTML'];\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set innerHTML(value) {\n    if (this.localName === 'template') {\n      this[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n    } else {\n      clearNode(this);\n      const containerName = this.localName || 'div';\n      let htmlContainer;\n      if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n        htmlContainer = inertDoc.createElement(containerName);\n      } else {\n        htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n      }\n      if (utils.settings.hasDescriptors) {\n        htmlContainer[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n      } else {\n        htmlContainer.innerHTML = value;\n      }\n      let firstChild;\n      while ((firstChild = htmlContainer[utils.SHADY_PREFIX + 'firstChild'])) {\n        this[utils.SHADY_PREFIX + 'insertBefore'](firstChild);\n      }\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nexport const ShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    optionsOrCapture.__shadyTarget = this;\n    this.host[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n  },\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    optionsOrCapture.__shadyTarget = this;\n    this.host[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {NodePatches} from './patches/Node.js';\nimport {OutsideDescriptors, InsideDescriptors} from './patch-instances.js';\nimport {ParentNodePatches} from './patches/ParentNode.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {ShadowRootPatches} from './patches/ShadowRoot.js';\n\n/**\n * @param {!Object} proto\n * @param {string=} prefix\n */\nconst patchShadyAccessors = (proto, prefix) => {\n  utils.patchProperties(proto, ShadowRootPatches, prefix);\n  utils.patchProperties(proto, DocumentOrShadowRootPatches, prefix);\n  utils.patchProperties(proto, ElementOrShadowRootPatches, prefix);\n  // We ensure ParentNode accessors since these do not exist in Edge/IE on DocumentFragments.\n  utils.patchProperties(proto, ParentNodePatches, prefix);\n  // Ensure `shadowRoot` has basic descriptors when we cannot rely\n  // on them coming from DocumentFragment.\n  //\n  // Case 1, noPatching: Because we want noPatch ShadyRoots to have native property\n  // names so that they do not have to be wrapped...\n  // When we do *not* patch Node/DocumentFragment.prototype\n  // we must manually install those properties on ShadyRoot's prototype.\n  // Note, it's important to only install these in this mode so as not to stomp\n  // over CustomElements polyfill's patches on Node/DocumentFragment methods.\n  if (utils.settings.noPatch && !prefix) {\n    utils.patchProperties(proto, NodePatches, prefix);\n    utils.patchProperties(proto, DocumentOrFragmentPatches, prefix);\n  // Case 2, bad descriptors: Ensure accessors are on ShadowRoot.\n  // These descriptors are normally used for instance patching but because\n  // ShadyRoot can always be patched, just do it to the prototype.\n  } else if (!utils.settings.hasDescriptors) {\n    utils.patchProperties(proto, OutsideDescriptors);\n    utils.patchProperties(proto, InsideDescriptors);\n  }\n}\n\nexport const patchShadyRoot = (proto) => {\n  proto.__proto__ = DocumentFragment.prototype;\n\n  // patch both prefixed and not, even when noPatch == true.\n  patchShadyAccessors(proto, utils.SHADY_PREFIX);\n  patchShadyAccessors(proto);\n\n  // Ensure native properties are all safely wrapped since ShadowRoot is not an\n  // actual DocumentFragment instance.\n  Object.defineProperties(proto, {\n    nodeType: {\n      value: Node.DOCUMENT_FRAGMENT_NODE,\n      configurable: true\n    },\n    nodeName: {\n      value: '#document-fragment',\n      configurable: true\n    },\n    nodeValue: {\n      value: null,\n      configurable: true\n    }\n  });\n\n  // make undefined\n  [\n    'localName',\n    'namespaceURI',\n    'prefix'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      value: undefined,\n      configurable: true\n    });\n  });\n\n  // defer properties to host\n  [\n    'ownerDocument',\n    'baseURI',\n    'isConnected'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      /** @this {ShadowRoot} */\n      get() {\n        return this.host[prop];\n      },\n      configurable: true\n    });\n  });\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {eventPropertyNames} from './patch-events.js';\n\n/** @implements {IWrapper} */\nclass Wrapper {\n\n  /** @param {!Node} node */\n  constructor(node) {\n    this.node = node;\n  }\n\n  // node\n  addEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'addEventListener'](name, fn, options);\n  }\n\n  removeEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'removeEventListener'](name, fn, options);\n  }\n\n  appendChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'appendChild'](node);\n  }\n\n  insertBefore(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n  }\n\n  removeChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'removeChild'](node);\n  }\n\n  replaceChild(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'replaceChild'](node, ref_node);\n  }\n\n  cloneNode(deep) {\n    return this.node[utils.SHADY_PREFIX + 'cloneNode'](deep);\n  }\n\n  getRootNode(options) {\n    return this.node[utils.SHADY_PREFIX + 'getRootNode'](options);\n  }\n\n  contains(node) {\n    return this.node[utils.SHADY_PREFIX + 'contains'](node);\n  }\n\n  dispatchEvent(event) {\n    return this.node[utils.SHADY_PREFIX + 'dispatchEvent'](event);\n  }\n\n  // element\n  setAttribute(name, value) {\n    this.node[utils.SHADY_PREFIX + 'setAttribute'](name, value);\n  }\n\n  // NOTE: not needed, just here for balance\n  getAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'getAttribute'](name);\n  }\n\n  // NOTE: not needed, just here for balance\n  hasAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'hasAttribute'](name);\n  }\n\n  removeAttribute(name) {\n    this.node[utils.SHADY_PREFIX + 'removeAttribute'](name);\n  }\n\n  attachShadow(options) {\n    return this.node[utils.SHADY_PREFIX + 'attachShadow'](options);\n  }\n\n  /** @return {!Node|undefined} */\n  get activeElement() {\n    if (utils.isShadyRoot(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) {\n      const e = this.node[utils.SHADY_PREFIX + 'activeElement'];\n      return e;\n    }\n  }\n\n  /**\n   * Installed for compatibility with browsers (older Chrome/Safari) that do\n   * not have a configurable `activeElement` accessor. Enables noPatch and\n   * patch mode both to consistently use ShadyDOM.wrap(document)._activeElement.\n   * @override\n   * @return {!Node|undefined}\n   */\n  get _activeElement() {\n    return this.activeElement;\n  }\n\n  // NOTE: not needed, just here for balance\n  /** @override */\n  focus() {\n    this.node[utils.NATIVE_PREFIX + 'focus']();\n  }\n\n  blur() {\n    this.node[utils.SHADY_PREFIX + 'blur']();\n  }\n\n  // document\n  importNode(node, deep) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'importNode'](node, deep);\n    }\n  }\n\n  getElementById(id) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'getElementById'](id);\n    }\n  }\n\n  // query\n  querySelector(selector) {\n    return this.node[utils.SHADY_PREFIX + 'querySelector'](selector);\n  }\n\n  querySelectorAll(selector, useNative) {\n    return this.node[utils.SHADY_PREFIX + 'querySelectorAll'](selector, useNative);\n  }\n\n  // slot\n  assignedNodes(options) {\n    if (this.node.localName === 'slot') {\n      return this.node[utils.SHADY_PREFIX + 'assignedNodes'](options);\n    }\n  }\n\n  get host() {\n    if (utils.isShadyRoot(this.node)) {\n      return /** @type {!ShadowRoot} */(this.node).host;\n    }\n  }\n\n  get parentNode() {\n    return this.node[utils.SHADY_PREFIX + 'parentNode'];\n  }\n\n  get firstChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstChild'];\n  }\n\n  get lastChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastChild'];\n  }\n\n  get nextSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextSibling'];\n  }\n\n  get previousSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousSibling'];\n  }\n\n  get childNodes() {\n    return this.node[utils.SHADY_PREFIX + 'childNodes'];\n  }\n\n  get parentElement() {\n    return this.node[utils.SHADY_PREFIX + 'parentElement'];\n  }\n\n  get firstElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstElementChild'];\n  }\n\n  get lastElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastElementChild'];\n  }\n\n  get nextElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextElementSibling'];\n  }\n\n  get previousElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousElementSibling'];\n  }\n\n  get children() {\n    return this.node[utils.SHADY_PREFIX + 'children'];\n  }\n\n  get childElementCount() {\n    return this.node[utils.SHADY_PREFIX + 'childElementCount'];\n  }\n\n  get shadowRoot() {\n    return this.node[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n  get assignedSlot() {\n    return this.node[utils.SHADY_PREFIX + 'assignedSlot'];\n  }\n\n  get isConnected() {\n    return this.node[utils.SHADY_PREFIX + 'isConnected'];\n  }\n\n  get innerHTML() {\n    return this.node[utils.SHADY_PREFIX + 'innerHTML'];\n  }\n\n  set innerHTML(value) {\n    this.node[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  }\n\n  get textContent() {\n    return this.node[utils.SHADY_PREFIX + 'textContent'];\n  }\n\n  set textContent(value) {\n    this.node[utils.SHADY_PREFIX + 'textContent'] = value;\n  }\n\n  get slot() {\n    return this.node[utils.SHADY_PREFIX + 'slot'];\n  }\n\n  set slot(value) {\n    this.node[utils.SHADY_PREFIX + 'slot'] = value;\n  }\n\n}\n\neventPropertyNames.forEach(name => {\n  Object.defineProperty(Wrapper.prototype, name, {\n    /** @this {Wrapper} */\n    get() {\n      return this.node[utils.SHADY_PREFIX + name];\n    },\n    /** @this {Wrapper} */\n    set(value) {\n      this.node[utils.SHADY_PREFIX + name] = value;\n    },\n    configurable: true\n  });\n\n});\n\nexport {Wrapper};\n\nconst wrapperMap = new WeakMap();\n\nexport function wrap(obj) {\n  if (utils.isShadyRoot(obj) || obj instanceof Wrapper) {\n    return obj;\n  }\n  let wrapper = wrapperMap.get(obj)\n  if (!wrapper) {\n    wrapper = new Wrapper(obj);\n    wrapperMap.set(obj, wrapper);\n  }\n  return wrapper;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {flush} from '../flush.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const EventTargetPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  dispatchEvent(event) {\n    flush();\n    return this[utils.NATIVE_PREFIX + 'dispatchEvent'](event);\n  },\n\n  addEventListener,\n\n  removeEventListener\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotablePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get assignedSlot() {\n    // Force any parent's shadowRoot to flush so that distribution occurs\n    // and this node has an assignedSlot.\n    const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n    const ownerRoot = parent && parent[utils.SHADY_PREFIX + 'shadowRoot'];\n    if (ownerRoot) {\n      ownerRoot._render();\n    }\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.assignedSlot || null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {scopeClassAttribute} from '../style-scoping.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {attachShadow, ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\n/**\n * Should be called whenever an attribute changes. If the `slot` attribute\n * changes, provokes rendering if necessary. If a `<slot>` element's `name`\n * attribute changes, updates the root's slot map and renders.\n * @param {Node} node\n * @param {string} name\n */\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    const parent = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (utils.hasShadowRootWithSlot(parent)) {\n      shadyDataForNode(parent).root._asyncRender();\n    }\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = ownerShadyRootForNode(node);\n    if (root) {\n      root._updateSlotName(node);\n      root._asyncRender();\n    }\n  }\n}\n\nexport const ElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get previousElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.previousSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'previousSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'previousElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get nextElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.nextSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'nextSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'nextElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /** @this {Element} */\n  set slot(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('slot', value);\n  },\n\n  // Note: Can be patched on element prototype on all browsers.\n  // Must be patched on instance on browsers that support native Shadow DOM\n  // but do not have builtin accessors (old Chrome).\n  /** @this {Element} */\n  get shadowRoot() {\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.publicRoot || null;\n  },\n\n  /** @this {Element} */\n  get className() {\n    return this.getAttribute('class') || '';\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set className(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('class', value);\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttribute(attr, value) {\n    if (this.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n    } else if (!scopeClassAttribute(this, attr, value)) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n      distributeAttributeChange(this, attr);\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   */\n  removeAttribute(attr) {\n    this[utils.NATIVE_PREFIX + 'removeAttribute'](attr);\n    distributeAttributeChange(this, attr);\n  },\n\n  /**\n   * @this {Element}\n   * @param {!{mode: string}} options\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {eventPropertyNames} from '../patch-events.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\n\nexport const HTMLElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {HTMLElement} */\n  blur() {\n    const nodeData = shadyDataForNode(this);\n    let root = nodeData && nodeData.root;\n    let shadowActive = root && root.activeElement;\n    if (shadowActive) {\n      shadowActive[utils.SHADY_PREFIX + 'blur']();\n    } else {\n      this[utils.NATIVE_PREFIX + 'blur']();\n    }\n  }\n\n});\n\neventPropertyNames.forEach(property => {\n  HTMLElementPatches[property] = {\n    /** @this {HTMLElement} */\n    set: function(fn) {\n      const shadyData = ensureShadyDataForNode(this);\n      const eventName = property.substring(2);\n      shadyData.__onCallbackListeners[property] && this.removeEventListener(eventName, shadyData.__onCallbackListeners[property]);\n      this[utils.SHADY_PREFIX + 'addEventListener'](eventName, fn);\n      shadyData.__onCallbackListeners[property] = fn;\n    },\n    /** @this {HTMLElement} */\n    get() {\n      const shadyData = shadyDataForNode(this);\n      return shadyData && shadyData.__onCallbackListeners[property];\n    },\n    configurable: true\n  };\n});\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {Object=} options\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      // Force any containing shadowRoot to flush so that distribution occurs\n      // and this node has assignedNodes.\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      if (root && utils.isShadyRoot(root)) {\n        root._render();\n      }\n      const nodeData = shadyDataForNode(this);\n      return nodeData ?\n        ((options && options.flatten ? nodeData.flattenedNodes :\n          nodeData.assignedNodes) || []) :\n        [];\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nconst doc = window.document;\n\nexport const DocumentPatches = utils.getOwnPropertyDescriptors({\n\n  // note: Though not technically correct, we fast path `importNode`\n  // when called on a node not owned by the main document.\n  // This allows, for example, elements that cannot\n  // contain custom elements and are therefore not likely to contain shadowRoots\n  // to cloned natively. This is a fairly significant performance win.\n  /**\n   * @this {Document}\n   * @param {Node} node\n   * @param {boolean} deep\n   */\n  importNode(node, deep) {\n    // A template element normally has no children with shadowRoots, so make\n    // sure we always make a deep copy to correctly construct the template.content\n    if (node.ownerDocument !== doc || node.localName === 'template') {\n      return this[utils.NATIVE_PREFIX + 'importNode'](node, deep);\n    }\n    let n = this[utils.NATIVE_PREFIX + 'importNode'](node, false);\n    if (deep) {\n      let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = this[utils.SHADY_PREFIX + 'importNode'](c$[i], true);\n        n[utils.SHADY_PREFIX + 'appendChild'](nc);\n      }\n    }\n    return n;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const WindowPatches = utils.getOwnPropertyDescriptors({\n\n  // NOTE: ensure these methods are bound to `window` so that `this` is correct\n  // when called directly from global context without a receiver; e.g.\n  // `addEventListener(...)`.\n  addEventListener: addEventListener.bind(window),\n\n  removeEventListener: removeEventListener.bind(window)\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {EventTargetPatches} from './patches/EventTarget.js';\nimport {NodePatches} from './patches/Node.js';\nimport {SlotablePatches} from './patches/Slotable.js';\nimport {ParentNodePatches, ParentNodeDocumentOrFragmentPatches} from './patches/ParentNode.js';\nimport {ElementPatches} from './patches/Element.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {HTMLElementPatches} from './patches/HTMLElement.js';\nimport {SlotPatches} from './patches/Slot.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {DocumentPatches} from './patches/Document.js';\nimport {WindowPatches} from './patches/Window.js';\n\n// Some browsers (IE/Edge) have non-standard HTMLElement accessors.\nconst NonStandardHTMLElement = {};\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement')) {\n  NonStandardHTMLElement.parentElement = NodePatches.parentElement;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'contains')) {\n  NonStandardHTMLElement.contains = NodePatches.contains;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n  NonStandardHTMLElement.children = ParentNodePatches.children;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n  NonStandardHTMLElement.innerHTML = ElementOrShadowRootPatches.innerHTML;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'className')) {\n  NonStandardHTMLElement.className = ElementPatches.className;\n}\n\n// Avoid patching `innerHTML` if it does not exist on Element (IE)\n// and we can patch accessors (hasDescriptors).\nconst ElementShouldHaveInnerHTML = !utils.settings.hasDescriptors || 'innerHTML' in Element.prototype;\n\n// setup patching\nconst patchMap = {\n  EventTarget: [EventTargetPatches],\n  Node: [NodePatches, !window.EventTarget ? EventTargetPatches : null],\n  Text: [SlotablePatches],\n  Element: [ElementPatches, ParentNodePatches, SlotablePatches,\n    ElementShouldHaveInnerHTML ? ElementOrShadowRootPatches : null,\n    !window.HTMLSlotElement ? SlotPatches : null],\n  HTMLElement: [HTMLElementPatches, NonStandardHTMLElement],\n  HTMLSlotElement: [SlotPatches],\n  DocumentFragment: [ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches],\n  Document: [DocumentPatches, ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches, DocumentOrShadowRootPatches],\n  Window: [WindowPatches]\n}\n\nconst getPatchPrototype = (name) => window[name] && window[name].prototype;\n\n// Note, must avoid patching accessors on prototypes when descriptors are not correct\n// because the CustomElements polyfill checks if these exist before patching instances.\n// CustomElements polyfill *only* cares about these accessors.\nconst disallowedNativePatches = utils.settings.hasDescriptors ? null : ['innerHTML', 'textContent'];\n\n/** @param {string=} prefix */\nexport const applyPatches = (prefix) => {\n  const disallowed = prefix ? null : disallowedNativePatches;\n  for (let p in patchMap) {\n    const proto = getPatchPrototype(p);\n    patchMap[p].forEach(patch => proto && patch &&\n        utils.patchProperties(proto, patch, prefix, disallowed));\n  }\n}\n\nexport const addShadyPrefixedProperties = () => {\n  // perform shady patches\n  applyPatches(utils.SHADY_PREFIX);\n\n  // install `_activeElement` because some browsers (older Chrome/Safari) do not have\n  // a 'configurable' `activeElement` accesssor.\n  const descriptor = DocumentOrShadowRootPatches.activeElement;\n  Object.defineProperty(document, '_activeElement', descriptor);\n\n  // On Window, we're patching `addEventListener` which is a weird auto-bound\n  // property that is not directly on the Window prototype.\n  utils.patchProperties(Window.prototype, WindowPatches, utils.SHADY_PREFIX);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\nimport * as utils from './utils.js';\nimport {flush, enqueue} from './flush.js';\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes.js';\nimport {addNativePrefixedProperties, nativeMethods, nativeTree} from './patch-native.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\nimport {patchEvents, patchClick, composedPath} from './patch-events.js';\nimport {ShadyRoot} from './attach-shadow.js';\nimport {wrap, Wrapper} from './wrapper.js';\nimport {addShadyPrefixedProperties, applyPatches} from './patch-prototypes.js';\n\nif (utils.settings.inUse) {\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // NOTE: old browsers without prototype accessors (very old Chrome\n    // and Safari) need manually patched accessors to properly set\n    // `innerHTML` and `textContent` when an element is:\n    // (1) inside a shadowRoot\n    // (2) does not have special (slot) children itself\n    // (3) and setting the property needs to provoke distribution (because\n    // a nested slot is added/removed)\n    'patch': (node) => {\n      patchInsideElementAccessors(node);\n      patchOutsideElementAccessors(node);\n      return node;\n    },\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'flushInitial': (root) => {\n      root._flushInitial();\n    },\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    // Set to true to defer native custom elements connection until the\n    // document has fully parsed. This enables custom elements that create\n    // shadowRoots to be defined while the document is loading. Elements\n    // customized as they are created by the parser will successfully\n    // render with this flag on.\n    'deferConnectionCallbacks': utils.settings['deferConnectionCallbacks'],\n    // Set to true to speed up the polyfill slightly at the cost of correctness\n    // * does not patch querySelector/All on Document or DocumentFragment\n    // * does not wrap connected/disconnected callbacks to de-dup these\n    // when using native customElements\n    // * does not wait to process children of elements with shadowRoots\n    // meaning shadowRoots should not be created while an element is parsing\n    // (e.g. if a custom element that creates a shadowRoot is defined before\n    // a candidate element in the document below it.\n    'preferPerformance': utils.settings['preferPerformance'],\n    // Integration point with ShadyCSS to disable styling MutationObserver,\n    // as ShadyDOM will now handle dynamic scoping.\n    'handlesDynamicScoping': true,\n    'wrap': utils.settings.noPatch ? wrap : (n) => n,\n    'Wrapper': Wrapper,\n    'composedPath': composedPath,\n    // Set to true to avoid patching regular platform property names. When set,\n    // Shadow DOM compatible behavior is only available when accessing DOM\n    // API using `ShadyDOM.wrap`, e.g. `ShadyDOM.wrap(element).shadowRoot`.\n    // This setting provides a small performance boost, but requires all DOM API\n    // access that requires Shadow DOM behavior to be proxied via `ShadyDOM.wrap`.\n    'noPatch': utils.settings.noPatch,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Modifies native prototypes for Node, Element, etc. to\n  // make native platform behavior available at prefixed names, e.g.\n  // `utils.NATIVE_PREFIX + 'firstChild'` or `__shady_native_firstChild`.\n  // This allows the standard names to be safely patched while retaining the\n  // ability for native behavior to be used. This polyfill manipulates DOM\n  // by using this saved native behavior.\n  // Note, some browsers do not have proper element descriptors for\n  // accessors; in this case, native behavior for these accessors is simulated\n  // via a TreeWalker.\n  addNativePrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to make ShadowDOM\n  // behavior available at prefixed names, e.g.\n  // `utils.SHADY_PREFIX + 'firstChild` or `__shady_firstChild`. This is done\n  // so this polyfill can perform Shadow DOM style DOM manipulation.\n  // Because patching normal platform property names is optional, these prefixed\n  // names are used internally.\n  addShadyPrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to patch\n  // regular platform property names to have Shadow DOM compatible API behavior.\n  // This applies the utils.SHADY_PREFIX behavior to normal names. For example,\n  // if `noPatch` is not set, then `el.__shady_firstChild` is equivalent to\n  // `el.firstChild`.\n  // NOTE, on older browsers (old Chrome/Safari) native accessors cannot be\n  // patched on prototypes (e.g. Node.prototype.firstChild cannot be modified).\n  // On these browsers, instance level patching is performed where needed; this\n  // instance patching is only done when `noPatch` is *not* set.\n  if (!utils.settings.noPatch) {\n    applyPatches();\n    // Patch click event behavior only if we're patching\n    patchClick()\n  }\n\n  // For simplicity, patch events unconditionally.\n  // Patches the event system to have Shadow DOM compatible behavior (e.g.\n  // event retargeting). When `noPatch` is set, retargeting is only available\n  // when adding event listeners and dispatching events via `ShadyDOM.wrap`\n  // (e.g. `ShadyDOM.wrap(element).addEventListener(...)`).\n  patchEvents();\n\n  window.ShadowRoot = /** @type {function(new:ShadowRoot)} */(ShadyRoot);\n}\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patch(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Node} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ? rawElement.content : rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */(cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$;\n    if (startNode.localName === 'template') {\n      const template = /** @type {!HTMLTemplateElement} */ (startNode);\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      c$ = (template.content || template._content || template).childNodes;\n    } else {\n      c$ = /** @type {!ParentNode} */ (startNode).children ||\n          startNode.childNodes;\n    }\n    if (c$) {\n      for (let i = 0; i < c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   * @param {string=} cssText\n   * @return {string}\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '', cssText = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    if (cssText === '') {\n      if (nativeShadow || cssBuild === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        let {is, typeExtension} = StyleUtil.getIsExtends(element);\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    const attributes = selector.split(/(\\[.+?\\])/);\n\n    const output = [];\n    for (let i = 0; i < attributes.length; i++) {\n      // Do not attempt to transform any attribute selector content\n      if ((i % 2) === 1) {\n        output.push(attributes[i]);\n      } else {\n        const part = attributes[i];\n\n        if (!(part === '' && i === attributes.length - 1)) {\n          let p$ = part.split(PSEUDO_PREFIX);\n          p$[0] += scope;\n          output.push(p$.join(PSEUDO_PREFIX));\n        }\n      }\n    }\n\n    return output.join('');\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nconst NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nconst SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nconst COMPLEX_SELECTOR_SEP = ',';\nconst SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nconst SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nconst HOST = ':host';\nconst ROOT = ':root';\nconst SLOTTED = '::slotted';\nconst SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nconst HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nconst SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nconst DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nconst CSS_CLASS_PREFIX = '.';\nconst PSEUDO_PREFIX = ':';\nconst CLASS = 'class';\nconst SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Object} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow, disableRuntime} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow && !disableRuntime) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    /** @type {number} */\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss, wrap} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nfunction getClasses(element) {\n  if (element.classList && element.classList.value) {\n    return element.classList.value;\n  } else {\n    // NOTE: className is patched to remove scoping classes in ShadyDOM\n    // use getAttribute('class') instead, which is unpatched\n    return element.getAttribute('class') || '';\n  }\n}\n\nconst scopeRegExp = new RegExp(`${StyleTransformer.SCOPE_NAME}\\\\s*([^\\\\s]*)`);\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  const match = getClasses(element).match(scopeRegExp);\n  if (match) {\n    return match[1];\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = wrap(node).getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = wrap(element).getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    })\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables, disableRuntime} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/** @type {!Object<string, string>} */\nconst adoptedCssTextMap = {};\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    /** @type {?Object} */\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared || disableRuntime) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    const optimalBuild = StyleUtil.isOptimalCssBuild(cssBuild);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    let cssText = this._gatherStyles(template) + (adoptedCssTextMap[elementName] || '');\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    if (!optimalBuild) {\n      let hasMixins = !cssBuild && detectMixin(cssText);\n      let ast = parse(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n    }\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild, optimalBuild ? cssText : '');\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n\n  /**\n   * @param {!Array<string>} cssTextArray\n   * @param {string} elementName\n   */\n  prepareAdoptedCssText(cssTextArray, elementName) {\n    adoptedCssTextMap[elementName] = cssTextArray.join(' ');\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (disableRuntime) {\n      return;\n    }\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   * @param {string=} cssText\n   * @return {?HTMLStyleElement}\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild, cssText) {\n    cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild, cssText);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n    return null;\n  }\n  _prepareHost(host) {\n    const {is, typeExtension} = StyleUtil.getIsExtends(host);\n    const placeholder = getStylePlaceholder(is);\n    const template = templateMap[is];\n    if (!template) {\n      return;\n    }\n    const ast = template['_styleAst'];\n    const ownStylePropertyNames = template._ownPropertyNames;\n    const cssBuild = StyleUtil.getCssBuild(template);\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    StyleInfo.set(host, styleInfo);\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = /** @type {!Object} */ (window.ShadyCSS.ApplyShim);\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    if (disableRuntime) {\n      return;\n    }\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    // bail if custom styles are built optimally\n    if (StyleUtil.isOptimalCssBuild(this._documentOwnerStyleInfo.cssBuild)) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n      if (this._elementsHaveApplied) {\n        // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n        this.styleDocument();\n      }\n    } else if (!this._documentOwnerStyleInfo.cssBuild) {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    if (disableRuntime) {\n      if (overrideProps) {\n        if (!StyleInfo.get(host)) {\n          StyleInfo.set(host, new StyleInfo(null));\n        }\n        const styleInfo = /** @type {!StyleInfo} */(StyleInfo.get(host));\n        this._mixOverrideStyleProps(styleInfo, overrideProps);\n        this.styleElementNativeVariables(host, styleInfo);\n      }\n      return;\n    }\n    const styleInfo = StyleInfo.get(host) || this._prepareHost(host);\n    // if there is no style info at this point, bail\n    if (!styleInfo) {\n      return;\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      this._mixOverrideStyleProps(styleInfo, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!StyleInfo} styleInfo\n   * @param {Object} overrideProps\n   */\n  _mixOverrideStyleProps(styleInfo, overrideProps) {\n    styleInfo.overrideStyleProperties =\n      styleInfo.overrideStyleProperties || {};\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = StyleUtil.wrap(node).getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host) || this._prepareHost(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    // style owner has not updated properties yet\n    // go up the chain and force property update,\n    // except if the owner is the document\n    if (owner !== this._documentOwner && !ownerProperties) {\n      this._updateProperties(owner, ownerStyleInfo);\n      ownerProperties = ownerStyleInfo.styleProperties;\n    }\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    const wrappedHost = StyleUtil.wrap(host);\n    let root = wrappedHost.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren =\n        root && (/** @type {!ParentNode} */ (root).children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = wrappedHost.children || wrappedHost.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    if (StyleUtil.isOptimalCssBuild(cssBuild)) {\n      return;\n    }\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = StyleUtil.wrap(element).getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nScopingShim.prototype['prepareAdoptedCssText'] = ScopingShim.prototype.prepareAdoptedCssText;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  cssBuild: cssBuild,\n\n  disableRuntime: disableRuntime,\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"],"names":["ShadyData","root","publicRoot","dirty","observer","assignedNodes","assignedSlot","_previouslyAssignedNodes","_prevAssignedSlot","flattenedNodes","ownerShadyRoot","undefined","parentNode","firstChild","lastChild","previousSibling","nextSibling","childNodes","__outsideAccessors","__insideAccessors","__onCallbackListeners","ensureShadyDataForNode","node","__shady","shadyDataForNode","settings","window","hasNativeShadowDOM","Boolean","Element","prototype","attachShadow","Node","getRootNode","desc","Object","getOwnPropertyDescriptor","hasDescriptors","configurable","get","inUse","noPatch","preferPerformance","isTrackingLogicalChildNodes","nodeData","isShadyRoot","obj","_localName","hasShadowRootWithSlot","_hasInsertionPoint","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","selector","call","twiddle","document","createTextNode","content","queue","MutationObserver","length","shift","e","textContent","observe","characterData","scheduled","microtask","callback","push","hasDocumentContains","contains","container","SHADY_PREFIX","getNodeHTMLCollectionName","getAttribute","isValidHTMLCollectionName","name","isNaN","createPolyfilledHTMLCollection","nodes","l","item","index","namedItem","NATIVE_PREFIX","patchProperties","proto","descriptors","prefix","disallowedPatches","newDescriptor","indexOf","value","defineProperty","getOwnPropertyDescriptors","HTMLElement","getOwnPropertyNames","forEach","flushList","enqueue","utils","flush","didFlush","AsyncObserver","_scheduled","addedNodes","removedNodes","callbacks","Set","this","_this","mutations","takeRecords","cb","escapeAttrRegExp","escapeDataRegExp","escapeReplace","c","escapeAttr","s","replace","makeSet","arr","set","i","voidElements","plaintextParents","getOuterHTML","nodeType","ELEMENT_NODE","attr","tagName","localName","attrs","attributes","getInnerHTML","TEXT_NODE","data","escapeData","COMMENT_NODE","console","error","Error","child","c$","nativeMethods","querySelector","querySelectorAll","nativeTree","installNativeAccessor","installNativeMethod","fn","defineNativeAccessors","prop","copyProperties","list","descriptor","nodeWalker","createTreeWalker","NodeFilter","SHOW_ALL","elementWalker","SHOW_ELEMENT","inertDoc","implementation","createHTMLDocument","clearNode","ParentNodeAccessors","ParentNodeMethods","InsideDescriptors","OutsideDescriptors","enumerable","composedProp","noInstancePatching","patchOutsideElementAccessors","sd","patchInsideElementAccessors","eventWrappersName","Date","now","composedGetter","Event","ev","alwaysComposed","unpatchedEvents","getRootNodeWithFallback","eventTarget","pathComposer","startNode","composed","composedPath","current","startRoot","DOCUMENT_FRAGMENT_NODE","host","retarget","refNode","path","ancestor","lastRoot","rootIdx","refNodePath","p$","mixinComposedFlag","Base","klazz","type","options","event","__composed","__proto__","nonBubblingEventsToRetarget","hasRetargeted","target","__relatedTarget","relatedTarget","fireHandlers","phase","hs","__handlers","__immediatePropagationStopped","retargetNonBubblingEvent","lastFiredRoot","__propagationStopped","AT_TARGET","listenerSettingsEqual","savedListener","capture","once","passive","savedNode","savedType","savedCapture","savedOnce","savedPassive","findListener","wrappers","addEventListener","fnOrObj","optionsOrCapture","handlerType","handleEvent","_typeof","__shadyTarget","wrapperFn","lastCurrentTargetDesc","patchEvent","eventPhase","BUBBLING_PHASE","stopImmediatePropagation","CAPTURING_PHASE","bubbles","Window","ret","removeEventListener","eventLike","getEventWrappers","idx","splice","EventPatchesDescriptors","isTrusted","__composedPath","currentTarget","__relatedTargetComposedPath","stopPropagation","SHADY_PROTO","SHADY_SOURCE_PROTO","getPrototypeOf","hasOwnProperty","patchedProto","create","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","eventPropertyNames","Document","filter","substring","newSplice","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcSplices","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","Math","min","searchLength","equals","sharedPrefix","index1","index2","count","sharedSuffix","ops","distances","j","edits","northWest","west","north","reverse","spliceOperationsFromEditDistances","rowCount","columnCount","Array","calcEditDistances","splices","oldIndex","currentValue","previousValue","linkNode","ref_node","containerData","ref_nodeData","psd","nsd","recordChildNodes","first","previous","n","scopingShim","getScopingShim","removeShadyScoping","currentScopeName","replaceShadyScoping","newScopeName","oldScopeName","addShadyScoping","currentScopeForNode","treeVisitor","visitorFn","doc","nativeIsConnectedAccessors","nativeIsConnected","removeOwnerShadyRoot","hasCachedOwnerRoot","scheduleObserver","addedNode","removedNode","schedule","NodePatches","ownerDocument","documentElement","tc","cn","join","nodeValue","insertBefore","refData","slotsAdded","ownerRoot","ownerShadyRootForNode","allowNativeInsert","needsScoping","currentScopeIsCorrect","correctScope","needsSlotFinding","_addSlots","_asyncRender","resetTo","recordInsertBefore","parentData","firstComposedNode","flattened","adoptNode","appendChild","removeChild","preventNativeRemove","skipUnscoping","removingInsertionPoint","_removeContainedSlots","recordRemoveChild","changeSlotContent","replaceChild","cloneNode","deep","ATTRIBUTE_NODE","nc","parent","query","matcher","halter","queryElements","elements","queryElement","result","ParentNodePatches","children","QueryPatches","useNative","o","slice","ParentNodeDocumentOrFragmentPatches","assign","DocumentOrFragmentPatches","getElementById","id","rootRendered","DocumentOrShadowRootPatches","active","activeElement","activeRoot","ElementOrShadowRootPatches","htmlContainer","containerName","namespaceURI","createElementNS","createElement","innerHTML","ShadowRootPatches","patchShadyAccessors","ShadyRootConstructionToken","SHADYROOT_NAME","MODE_CLOSED","isRendering","readyState","ancestorList","ancestors","unshift","ShadyRoot","token","TypeError","mode","hostData","rootData","_renderPending","_hasRendered","_slotList","_slotMap","_pendingSlots","_render","renderRoot","_getDistributionParent","__childSlotCount","_getPendingDistributionRoot","_renderSelf","wasRendering","_distribute","_compose","_validateSlots","slot","_clearSlotAssignedNodes","_distributeNodeToSlot","slotData","slotParentData","slotParentRoot","_addAssignedToFlattenedNodes","prevAssignedNodes","_fireSlotChange","forcedSlot","oldSlot","n$","assigned","nestedAssigned","slots","composeList","targetNode","_updateChildNodes","_composeNode","_isInsertionPoint","distributedNode","d","next","_ensureSlotData","_mapSlots","slotNamesToSort","slotParent","_nameForSlot","_sortSlots","__slotName","sort","a","b","listA","listB","nA","nB","from","didRemove","map","x","_removeFlattenedNodes","oldName","DocumentFragment","defineProperties","nodeName","connectMap","Map","r","v","k","clear","__shadydom_connectedCallback","__shadydom_disconnectedCallback","define","constructor","connected","connectedCallback","disconnected","disconnectedCallback","base","counter","connectFlag","isConnected","ManageConnect","Wrapper","DOCUMENT_NODE","wrapperMap","WeakMap","EventTargetPatches","dispatchEvent","SlotablePatches","distributeAttributeChange","_updateSlotName","ElementPatches","setAttribute","scopeClassAttribute","removeAttribute","HTMLElementPatches","blur","shadowActive","property","shadyData","eventName","SlotPatches","flatten","DocumentPatches","importNode","WindowPatches","bind","NonStandardHTMLElement","parentElement","className","ElementShouldHaveInnerHTML","patchMap","EventTarget","Text","HTMLSlotElement","disallowedNativePatches","applyPatches","disallowed","patch","ShadyDOM","_flushInitial","targetRootNode","mutation","mutationInScope","m","add","_callback","_observer","_node","handle","delete","size","wrapper","eventProps","currentNode","textWalker","SHOW_TEXT","nextNode","ParentNodeWalkerDescriptors","firstElementChild","lastElementChild","childElementCount","previousElementSibling","nextElementSibling","newContent","HTMLTemplateElement","addNativePrefixedProperties","addShadyPrefixedProperties","composedClickFn","cancelable","click","patchClick","activateFocusEventOverrides","ShadowRoot","reservedTagList","isValidCustomElementName","reserved","has","validForm","test","nativeValue","__CE_isImportDocument","nextSiblingOrAncestorSibling","start","walkDeepDescendantElements","visitedImports","import","shadowRoot","__CE_shadowRoot","setPropertyUnchecked","destination","CustomElementState","custom","failed","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patches","_hasPatches","definition","constructorFunction","listener","Utilities","__CE_patched","__CE_state","CEState","upgradeElement","upgrade","_this2","__CE_hasRegistry","__CE_documentLoadHandled","clonedVisitedImports","patchAndUpgradeTree","defaultView","localNameToDefinition","constructionStack","pop","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","DocumentConstructionObserver","internals","_internals","_document","_handleMutations","childList","subtree","disconnect","Deferred","_value","_resolve","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_pendingDefinitions","_documentConstructionObserver","adoptedCallback","Function","SyntaxError","getCallback","callbackValue","setDefinition","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","pendingUpgradableElements","deferred","reject","prior","toPromise","some","outer","inner","whenDefined","polyfillWrapFlushCallback","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","builtIn","appendPrependPatch","builtInMethod","connectedElements","apply","disconnectTree","connectTree","prepend","append","priorCustomElements","constructorToDefinition","Native","setPrototypeOf","lastIndex","AlreadyConstructedMarker","toConstructElement","writable","PatchHTMLElement","clone","patchTree","PatchParentNode","PatchDocument","PatchDocumentFragment","patch_textContent","baseDescriptor","assignedValue","childNodesLength","insertedNodes","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","addPatch","parts","PatchNode","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","position","wasConnected","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","end","text","toLowerCase","marker","String","init","isTemplate","rawElement","warn","beforeAfterPatch","before","after","replaceWith","remove","PatchChildNode","PatchElement","customElements","StyleNode","parse","parseCss","t","trim","ss","code","arguments","repeat","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","VAR_START","MIXIN_RULE","STYLE_RULE","r$","OPEN_BRACE","CLOSE_BRACE","lex","comments","port","stringify","preserveProperties","cssText","rules","_hasMixinRules","mixinApply","varApply","removeCustomPropApply","removeCustomPropAssignment","removeCustomProps","customProp","mixinProp","nativeCssVariables_","cssBuild","nativeShadow","calcCssVariables","navigator","userAgent","CSS","supports","ShadyCSS","disableRuntime","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","scopingAttribute","processUnscopedStyle","style","newStyle","head","isUnscopedStyle","hasAttribute","toCssText","forEachRule","rulesForStyle","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","applyCss","moniker","contextNode","createScopeStyle","applyStyle","lastHeadApplyNode","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","level","setElementClassRaw","wrap","getIsExtends","is","typeExtension","extends","splitSelectorList","part","CSS_BUILD_ATTR","getCssBuild","__cssBuild","attrValue","buildComment","Comment","commentParts","getBuildComment","removeBuildComment","elementHasBuiltCss","isOptimalCssBuild","StyleTransformer","scope","shouldRemoveScope","_transformDom","transformer","template","_content","classList","CLASS","StyleUtil","oldScope","newScope","_this3","_this4","styleRules","css","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformedSelector","_transformRuleCss","COMPLEX_SELECTOR_SEP","NTH","inside","MATCHES","input","MATCHES_REPLACEMENT","reduce","acc","cur","stop","isNth","_twiddleNthPlus","isMatches","_preserveMatchesPseudo","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_this5","_transformCompoundSelector","combinator","_replaceMatchesPseudo","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","output","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","StyleInfo","ast","placeholder","ownStylePropertyNames","elementName","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","method","IS_IE","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","collectProperties","collectCssText","any","rx","exec","collectConsumingCssText","valueForProperty","valueForProperties","processVariableAndFallback","str","suffix","comma","fallback","propertyValue","colon","pp","keyframeTransforms","hasAnimations","keyframeNamesToTransform","keyframe","transform","selectorToMatch","bits","parseInt","addToBitMask","key","parsedSelector","isRoot","isHost","hostProps","rootProps","whenHostOrRootRule","_element","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","elementStyles","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","transformStyles","placeholderMap","getStylePlaceholder","ensureStylePlaceholder","placeHolder","createComment","ce","origDefine","clazz","StyleCache","typeMax","cache","cacheEntry","ownPropertyNames","pn","tagname","styleElement","entry","_validate","scopeRegExp","SCOPE_NAME","getCurrentScope","getClasses","getOwnerScope","ensureCorrectSubtreeScoping","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","handler","mxns","mxn","currentScope","el","domRemoveScope","domReplaceScope","delayedStart","body","requestAnimationFrame","templateMap","CURRENT_VERSION","NEXT_VERSION","VALIDATING_VERSION","promise","invalidate","invalidateTemplate","templateIsValid","resolveFn","readyPromise","whenReady","documentWait","then","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","cs","getStyleForCustomStyle","styleToTransform","addCustomStyle","processStyles","needsEnqueue","adoptedCssTextMap","styleCache","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","watcherFlush","styleTextParts","styles","prepareTemplateDom","prepareTemplateStyles","_prepared","optimalBuild","_gatherStyles","_ensure","hasMixins","detectMixin","StyleProperties","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","cssTextArray","_domPrepared","domAddScope","shadowroot","ApplyShim","ApplyShimUtils","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_mixOverrideStyleProps","styleElementNativeVariables","_prepareHost","_isRootOwner","styleElementShimVariables","_applyStyleProperties","removeProperty","setProperty","updateNativeProperties","_validating","_styleOwnerForNode","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","hostAndRootPropertiesForScope","propertiesMatchingHost","propertyDataFromStyles","_mixinOverrideStyles","reify","overrides","styleSubtree","wrappedHost","shadowChildren","_revalidateApplyShim","applyCustomStyle","documentRule","getComputedStyle","getPropertyValue","classString","classes","scopeName","classAttr","k$","XSCOPE_NAME","prepareTemplate","getComputedStyleValue","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","scopeNode","unscopeNode","scopeForNode","prepareAdoptedCssText","elementExtends"],"mappings":"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"}