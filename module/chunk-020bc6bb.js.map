{"version":3,"file":"chunk-020bc6bb.js","sources":["../node_modules/@webcomponents/shadydom/src/shady-data.js","../node_modules/@webcomponents/shadydom/src/utils.js","../node_modules/@webcomponents/shadydom/src/flush.js","../node_modules/@webcomponents/shadydom/src/observe-changes.js","../node_modules/@webcomponents/shadydom/src/innerHTML.js","../node_modules/@webcomponents/shadydom/src/patch-native.js","../node_modules/@webcomponents/shadydom/src/patch-instances.js","../node_modules/@webcomponents/shadydom/src/patch-events.js","../node_modules/@webcomponents/shadydom/src/array-splice.js","../node_modules/@webcomponents/shadydom/src/link-nodes.js","../node_modules/@webcomponents/shadydom/src/style-scoping.js","../node_modules/@webcomponents/shadydom/src/patches/Node.js","../node_modules/@webcomponents/shadydom/src/patches/ParentNode.js","../node_modules/@webcomponents/shadydom/src/patches/DocumentOrFragment.js","../node_modules/@webcomponents/shadydom/src/patches/DocumentOrShadowRoot.js","../node_modules/@webcomponents/shadydom/src/patches/ElementOrShadowRoot.js","../node_modules/@webcomponents/shadydom/src/patches/ShadowRoot.js","../node_modules/@webcomponents/shadydom/src/patch-shadyRoot.js","../node_modules/@webcomponents/shadydom/src/attach-shadow.js","../node_modules/@webcomponents/shadydom/src/wrapper.js","../node_modules/@webcomponents/shadydom/src/patches/EventTarget.js","../node_modules/@webcomponents/shadydom/src/patches/Slotable.js","../node_modules/@webcomponents/shadydom/src/patches/Element.js","../node_modules/@webcomponents/shadydom/src/patches/HTMLElement.js","../node_modules/@webcomponents/shadydom/src/patches/Slot.js","../node_modules/@webcomponents/shadydom/src/patches/Document.js","../node_modules/@webcomponents/shadydom/src/patches/Window.js","../node_modules/@webcomponents/shadydom/src/patch-prototypes.js","../node_modules/@webcomponents/shadydom/src/shadydom.js","../node_modules/@webcomponents/custom-elements/src/Utilities.js","../node_modules/@webcomponents/custom-elements/src/CustomElementState.js","../node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","../node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","../node_modules/@webcomponents/custom-elements/src/Deferred.js","../node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","../node_modules/@webcomponents/custom-elements/src/Patch/Native.js","../node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","../node_modules/@webcomponents/custom-elements/src/custom-elements.js","../node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","../node_modules/@webcomponents/custom-elements/src/Patch/Document.js","../node_modules/@webcomponents/custom-elements/src/Patch/DocumentFragment.js","../node_modules/@webcomponents/custom-elements/src/Patch/Node.js","../node_modules/@webcomponents/custom-elements/src/Patch/Element.js","../node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js","../node_modules/@webcomponents/shadycss/src/css-parse.js","../node_modules/@webcomponents/shadycss/src/style-settings.js","../node_modules/@webcomponents/shadycss/src/common-regex.js","../node_modules/@webcomponents/shadycss/src/unscoped-style-handler.js","../node_modules/@webcomponents/shadycss/src/style-util.js","../node_modules/@webcomponents/shadycss/src/style-transformer.js","../node_modules/@webcomponents/shadycss/src/style-info.js","../node_modules/@webcomponents/shadycss/src/style-properties.js","../node_modules/@webcomponents/shadycss/src/style-placeholder.js","../node_modules/@webcomponents/shadycss/src/document-watcher.js","../node_modules/@webcomponents/shadycss/src/template-map.js","../node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","../node_modules/@webcomponents/shadycss/src/document-wait.js","../node_modules/@webcomponents/shadycss/src/custom-style-interface.js","../node_modules/@webcomponents/shadycss/src/scoping-shim.js","../node_modules/@webcomponents/shadycss/src/style-cache.js","../node_modules/@webcomponents/shadycss/src/common-utils.js","../node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nexport class ShadyData {\n  constructor() {\n    /** @type {ShadowRoot} */\n    this.root = null;\n    /** @type {ShadowRoot} */\n    this.publicRoot = null;\n    this.dirty = false;\n    this.observer = null;\n    /** @type {Array<Node>} */\n    this.assignedNodes = null;\n    /** @type {Element} */\n    this.assignedSlot = null;\n    /** @type {Array<Node>} */\n    this._previouslyAssignedNodes = null;\n    /** @type {Element} */\n    this._prevAssignedSlot = null;\n    /** @type {Array<Node>} */\n    this.flattenedNodes = null;\n    this.ownerShadyRoot = undefined;\n    /** @type {Node|undefined} */\n    this.parentNode = undefined;\n    /** @type {Node|undefined} */\n    this.firstChild = undefined;\n    /** @type {Node|undefined} */\n    this.lastChild = undefined;\n    /** @type {Node|undefined} */\n    this.previousSibling = undefined;\n    /** @type {Node|undefined} */\n    this.nextSibling = undefined;\n    /** @type {Array<Node>|undefined} */\n    this.childNodes = undefined;\n    this.__outsideAccessors = false;\n    this.__insideAccessors = false;\n    this.__onCallbackListeners = {};\n  }\n\n  /** @override */\n  toJSON() {\n    return {};\n  }\n}\n\nexport function ensureShadyDataForNode(node) {\n  if (!node.__shady) {\n    node.__shady = new ShadyData();\n  }\n  return node.__shady;\n}\n\nexport function shadyDataForNode(node) {\n  return node && node.__shady;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport {shadyDataForNode} from './shady-data.js';\n\n/** @type {!Object} */\nexport const settings = window['ShadyDOM'] || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nconst desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');\n\nsettings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);\nsettings.inUse = settings['force'] || !settings.hasNativeShadowDOM;\nsettings.noPatch = settings['noPatch'] || false;\nsettings.preferPerformance = settings['preferPerformance'];\n\nexport const isTrackingLogicalChildNodes = (node) => {\n  const nodeData = shadyDataForNode(node);\n  return (nodeData && nodeData.firstChild !== undefined);\n}\n\nexport const isShadyRoot = (obj) => {\n  return Boolean(obj._localName === 'ShadyRoot');\n}\n\nexport const hasShadowRootWithSlot = (node) => {\n  const nodeData = shadyDataForNode(node);\n  let root = nodeData && nodeData.root;\n  return (root && root._hasInsertionPoint());\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport const matchesSelector = (element, selector) => {\n  return matches.call(element, selector);\n}\n\nexport const mixin = (target, source) => {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\n// NOTE, prefer MutationObserver over Promise for microtask timing\n// for consistency x-platform.\nlet twiddle = document.createTextNode('');\nlet content = 0;\nlet queue = [];\nnew MutationObserver(() => {\n  while (queue.length) {\n    // catch errors in user code...\n    try {\n      queue.shift()();\n    } catch(e) {\n      // enqueue another record and throw\n      twiddle.textContent = content++;\n      throw(e);\n    }\n  }\n}).observe(twiddle, {characterData: true});\n\n// use MutationObserver to get microtask async timing.\nexport const microtask = (callback) => {\n  queue.push(callback);\n  twiddle.textContent = content++;\n}\n\nexport const hasDocumentContains = Boolean(document.contains);\n\nexport const contains = (container, node) => {\n  while (node) {\n    if (node == container) {\n      return true;\n    }\n    node = node[SHADY_PREFIX + 'parentNode'];\n  }\n  return false;\n}\n\nconst getNodeHTMLCollectionName = (node) =>\n    node.getAttribute('id') || node.getAttribute('name');\n\nconst isValidHTMLCollectionName = (name) => name !== 'length' && isNaN(name);\n\nexport const createPolyfilledHTMLCollection = (nodes) => {\n  // Note: loop in reverse so that the first named item matches the named property\n  for (let l = nodes.length - 1; l >= 0; l--) {\n    const node = nodes[l];\n    const name = getNodeHTMLCollectionName(node);\n\n    if (name && isValidHTMLCollectionName(name)) {\n      nodes[name] = node;\n    }\n  }\n  nodes.item = function(index) {\n    return nodes[index];\n  }\n  nodes.namedItem = function(name) {\n    if (isValidHTMLCollectionName(name) && nodes[name]) {\n      return nodes[name];\n    }\n\n    for (const node of nodes) {\n      const nodeName = getNodeHTMLCollectionName(node);\n\n      if (nodeName == name) {\n        return node;\n      }\n    }\n\n    return null;\n  };\n  return nodes;\n}\n\nexport const NATIVE_PREFIX = '__shady_native_';\nexport const SHADY_PREFIX = '__shady_';\n\n\n\n/**\n * Patch a group of accessors on an object only if it exists or if the `force`\n * argument is true.\n * @param {!Object} proto\n * @param {!Object} descriptors\n * @param {string=} prefix\n * @param {Array=} disallowedPatches\n */\nexport const patchProperties = (proto, descriptors, prefix = '', disallowedPatches) => {\n  for (let p in descriptors) {\n    const newDescriptor = descriptors[p];\n    if (disallowedPatches && disallowedPatches.indexOf(p) >= 0) {\n      continue;\n    }\n    newDescriptor.configurable = true;\n    const name = prefix + p;\n    // NOTE: we prefer writing directly because some browsers\n    // have descriptors that are writable but not configurable (e.g.\n    // `appendChild` on older browsers)\n    if (newDescriptor.value) {\n      proto[name] = newDescriptor.value;\n    } else {\n      // NOTE: this can throw if 'force' is used so catch the error.\n      try {\n        Object.defineProperty(proto, name, newDescriptor);\n      } catch(e) {\n        // this error is harmless so we just trap it.\n      }\n    }\n  }\n}\n\n/** @type {!function(new:HTMLElement)} */\nexport const NativeHTMLElement =\n    (window['customElements'] && window['customElements']['nativeHTMLElement']) ||\n    HTMLElement;\n\n// note, this is not a perfect polyfill since it doesn't include symbols\n/** @return {!Object<!ObjectPropertyDescriptor>} */\nexport const getOwnPropertyDescriptors = (obj) => {\n  const descriptors = {};\n  Object.getOwnPropertyNames(obj).forEach((name) => {\n    descriptors[name] = Object.getOwnPropertyDescriptor(obj, name);\n  });\n  return descriptors;\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\n// render enqueuer/flusher\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.microtask(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  let didFlush = Boolean(flushList.length);\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  return didFlush;\n}\n\nflush['list'] = flushList;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.microtask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  const sd = ensureShadyDataForNode(node);\n  if (!sd.observer) {\n    sd.observer = new AsyncObserver();\n  }\n  sd.observer.callbacks.add(callback);\n  let observer = sd.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      ensureShadyDataForNode(handle._node).observer = null;\n    }\n  }\n}\n\nexport function filterMutations(mutations, target) {\n  /** @const {Node} */\n  const targetRootNode = target.getRootNode();\n  return mutations.map(function(mutation) {\n    /** @const {boolean} */\n    const mutationInScope = (targetRootNode === mutation.target.getRootNode());\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === n.getRootNode());\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\n/**\n * @param {Node} node\n * @param {Node} parentNode\n * @param {Function=} callback\n */\nexport function getOuterHTML(node, parentNode, callback) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, callback) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = /** @type {Text} */ (node).data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + /** @type {Comment} */ (node).data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Function=} callback\n */\nexport function getInnerHTML(node, callback) {\n  if (node.localName === 'template') {\n    node =  /** @type {HTMLTemplateElement} */ (node).content;\n  }\n  let s = '';\n  let c$ = callback ? callback(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, callback);\n  }\n  return s;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from './utils.js';\nimport {patchProperties} from './utils.js';\nimport {getInnerHTML} from './innerHTML.js';\n\nconst hasDescriptors = utils.settings.hasDescriptors;\nexport const NATIVE_PREFIX = utils.NATIVE_PREFIX;\n\n// Object on which raw native methods are stored.\n// e.g. `nativeMethods.querySelector.call(node, selector)`\n// same as `node.querySelector(selector)`\nexport const nativeMethods = {\n  /** @this {Element} */\n  querySelector(selector) {\n    return this[NATIVE_PREFIX + 'querySelector'](selector);\n  },\n  /** @this {Element} */\n  querySelectorAll(selector) {\n    return this[NATIVE_PREFIX + 'querySelectorAll'](selector);\n  }\n};\n// Object on which raw native accessors are available via `accessorName(node)`.\n// e.g. `nativeTree.firstChild(node)`\n// same as `node.firstChild`\nexport const nativeTree = {};\n\nconst installNativeAccessor = (name) => {\n  nativeTree[name] = (node) => node[NATIVE_PREFIX + name];\n}\n\nconst installNativeMethod = (name, fn) => {\n  if (!nativeMethods[name]) {\n    nativeMethods[name] = fn;\n  }\n}\n\n\nconst defineNativeAccessors = (proto, descriptors) => {\n  patchProperties(proto, descriptors, NATIVE_PREFIX);\n  // make native accessors available to users\n  for (let prop in descriptors) {\n    installNativeAccessor(prop);\n  }\n}\n\nconst copyProperties = (proto, list = []) => {\n  for (let i = 0; i < list.length; i++) {\n    const name = list[i];\n    const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n    if (descriptor) {\n      Object.defineProperty(proto, NATIVE_PREFIX + name, descriptor);\n      // make native methods/accessors available to users\n      if (descriptor.value) {\n        installNativeMethod(name, descriptor.value);\n      } else {\n        installNativeAccessor(name);\n\n      }\n    }\n  }\n}\n\n/** @type {!TreeWalker} */\nconst nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\n  null, false);\n\n/** @type {!TreeWalker} */\nconst elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT,\n  null, false);\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nconst clearNode = node => {\n  let firstChild;\n  while ((firstChild = node[NATIVE_PREFIX + 'firstChild'])) {\n    node[NATIVE_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nconst ParentNodeAccessors = [\n  'firstElementChild',\n  'lastElementChild',\n  'children',\n  'childElementCount',\n];\n\nconst ParentNodeMethods = [\n  'querySelector',\n  'querySelectorAll'\n  // 'append', 'prepend'\n];\n\nexport const addNativePrefixedProperties = () => {\n\n  // EventTarget\n  const eventProps = [\n    'dispatchEvent',\n    'addEventListener',\n    'removeEventListener'\n  ];\n  if (window.EventTarget) {\n    copyProperties(window.EventTarget.prototype, eventProps);\n  } else {\n    copyProperties(Node.prototype, eventProps);\n    copyProperties(Window.prototype, eventProps);\n  }\n\n\n  // Node\n  if (hasDescriptors) {\n    copyProperties(Node.prototype, [\n      'parentNode',\n      'firstChild',\n      'lastChild',\n      'previousSibling',\n      'nextSibling',\n      'childNodes',\n      'parentElement',\n      'textContent',\n    ]);\n  } else {\n    defineNativeAccessors(Node.prototype, {\n      parentNode: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.parentNode();\n        }\n      },\n      firstChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.firstChild();\n        }\n      },\n      lastChild: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.lastChild();\n        }\n\n      },\n      previousSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.previousSibling();\n        }\n      },\n      nextSibling: {\n        /** @this {Node} */\n        get() {\n          nodeWalker.currentNode = this;\n          return nodeWalker.nextSibling();\n        }\n      },\n      // TODO(sorvell): make this a NodeList or whatever\n      childNodes: {\n        /** @this {Node} */\n        get() {\n          const nodes = [];\n          nodeWalker.currentNode = this;\n          let n = nodeWalker.firstChild();\n          while (n) {\n            nodes.push(n);\n            n = nodeWalker.nextSibling();\n          }\n          return nodes;\n        }\n      },\n      parentElement: {\n        /** @this {Node} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.parentNode();\n        }\n      },\n      textContent: {\n        /** @this {Node} */\n        get() {\n          /* eslint-disable no-case-declarations */\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              // TODO(sorvell): This cannot be a single TreeWalker that's reused\n              // at least for Safari 9, but it's unclear why.\n              const textWalker = document.createTreeWalker(this, NodeFilter.SHOW_TEXT,\n                null, false);\n              let content = '', n;\n              while ( (n = textWalker.nextNode()) ) {\n                // TODO(sorvell): can't use textContent since we patch it on Node.prototype!\n                // However, should probably patch it only on element.\n                content += n.nodeValue;\n              }\n              return content;\n            default:\n              return this.nodeValue;\n          }\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Node} */\n        set(value) {\n          if (typeof value === 'undefined' || value === null) {\n            value = ''\n          }\n          switch (this.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n              clearNode(this);\n              // Document fragments must have no childnodes if setting a blank string\n              if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n                // Note: old Chrome versions require 2nd argument here\n                this[NATIVE_PREFIX + 'insertBefore'](document.createTextNode(value), undefined);\n              }\n              break;\n            default:\n              // TODO(sorvell): can't do this if patch nodeValue.\n              this.nodeValue = value;\n              break;\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Node.prototype, [\n    'appendChild',\n    'insertBefore',\n    'removeChild',\n    'replaceChild',\n    'cloneNode',\n    'contains'\n  ]);\n\n  const ParentNodeWalkerDescriptors = {\n    firstElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.firstChild();\n      }\n    },\n    lastElementChild: {\n      /** @this {ParentNode} */\n      get() {\n        elementWalker.currentNode = this;\n        return elementWalker.lastChild();\n      }\n    },\n    children: {\n      /** @this {ParentNode} */\n      get() {\n        let nodes = [];\n        elementWalker.currentNode = this;\n        let n = elementWalker.firstChild();\n        while (n) {\n          nodes.push(n);\n          n = elementWalker.nextSibling();\n        }\n        return utils.createPolyfilledHTMLCollection(nodes);\n      }\n    },\n    childElementCount: {\n      /** @this {ParentNode} */\n      get() {\n        if (this.children) {\n          return this.children.length;\n        }\n        return 0;\n      }\n    }\n  };\n\n  // Element\n  if (hasDescriptors) {\n    copyProperties(Element.prototype, ParentNodeAccessors);\n\n    copyProperties(Element.prototype, [\n      'previousElementSibling',\n      'nextElementSibling',\n      'innerHTML'\n    ]);\n\n    // NOTE, on IE 11 / Edge 15 children and/or innerHTML are on HTMLElement instead of Element\n    if (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n      copyProperties(HTMLElement.prototype, [\n        'children'\n      ]);\n    }\n    if (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n      copyProperties(HTMLElement.prototype, [\n        'innerHTML'\n      ]);\n    }\n  } else {\n    defineNativeAccessors(Element.prototype, ParentNodeWalkerDescriptors);\n    defineNativeAccessors(Element.prototype, {\n      previousElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.previousSibling();\n        }\n      },\n      nextElementSibling: {\n        /** @this {Element} */\n        get() {\n          elementWalker.currentNode = this;\n          return elementWalker.nextSibling();\n        }\n      },\n      innerHTML: {\n        /** @this {Element} */\n        get() {\n          return getInnerHTML(this, n => n[NATIVE_PREFIX + 'childNodes']);\n        },\n        // Needed on browsers that do not proper accessors (e.g. old versions of Chrome)\n        /** @this {Element} */\n        set(value) {\n          const content = this.localName === 'template' ?\n          /** @type {HTMLTemplateElement} */(this).content : this;\n          clearNode(content);\n          const containerName = this.localName || 'div';\n          let htmlContainer;\n          if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n            htmlContainer = inertDoc.createElement(containerName);\n          } else {\n            htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n          }\n          htmlContainer.innerHTML = value;\n          const newContent = this.localName === 'template' ?\n            /** @type {HTMLTemplateElement} */(htmlContainer).content : htmlContainer;\n          let firstChild;\n          while ((firstChild = newContent[NATIVE_PREFIX + 'firstChild'])) {\n            // Note: old Chrome versions require 2nd argument here\n            content[NATIVE_PREFIX + 'insertBefore'](firstChild, undefined);\n          }\n        }\n      }\n    });\n  }\n\n  copyProperties(Element.prototype, [\n    'setAttribute',\n    'getAttribute',\n    'hasAttribute',\n    'removeAttribute',\n    // on older Safari, these are on Element.\n    'focus',\n    'blur',\n  ]);\n  copyProperties(Element.prototype, ParentNodeMethods);\n\n  // HTMLElement\n  copyProperties(HTMLElement.prototype, [\n    'focus',\n    'blur',\n    // On IE these are on HTMLElement\n    'contains'\n  ]);\n\n  if (hasDescriptors) {\n    copyProperties(HTMLElement.prototype, [\n      'parentElement',\n      'children',\n      'innerHTML'\n    ]);\n  }\n\n  // HTMLTemplateElement\n  if (window.HTMLTemplateElement) {\n    copyProperties(window.HTMLTemplateElement.prototype, ['innerHTML']);\n  }\n\n  // DocumentFragment\n  if (hasDescriptors) {\n    // NOTE, IE 11 does not have on DocumentFragment\n    // firstElementChild\n    // lastElementChild\n    copyProperties(DocumentFragment.prototype, ParentNodeAccessors);\n  } else {\n    defineNativeAccessors(DocumentFragment.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(DocumentFragment.prototype, ParentNodeMethods);\n\n  // Document\n  if (hasDescriptors) {\n    copyProperties(Document.prototype, ParentNodeAccessors);\n    copyProperties(Document.prototype, [\n      'activeElement'\n    ]);\n  } else {\n    defineNativeAccessors(Document.prototype, ParentNodeWalkerDescriptors);\n  }\n\n  copyProperties(Document.prototype, [\n    'importNode',\n    'getElementById'\n  ]);\n  copyProperties(Document.prototype, ParentNodeMethods);\n\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {ensureShadyDataForNode} from './shady-data.js';\n\nexport const InsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get childNodes() {\n    return this[utils.SHADY_PREFIX + 'childNodes'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    return this[utils.SHADY_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    return this[utils.SHADY_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    return this[utils.SHADY_PREFIX + 'textContent'];\n  },\n\n  /** @this {Node} */\n  set textContent(value) {\n    this[utils.SHADY_PREFIX + 'textContent'] = value;\n  },\n\n  /** @this {Node} */\n  get childElementCount() {\n    return this[utils.SHADY_PREFIX + 'childElementCount'];\n  },\n\n  /** @this {Node} */\n  get children() {\n    return this[utils.SHADY_PREFIX + 'children'];\n  },\n\n  /** @this {Node} */\n  get firstElementChild() {\n    return this[utils.SHADY_PREFIX + 'firstElementChild'];\n  },\n\n  /** @this {Node} */\n  get lastElementChild() {\n    return this[utils.SHADY_PREFIX + 'lastElementChild'];\n  },\n\n  /** @this {Node} */\n  get innerHTML() {\n    return this[utils.SHADY_PREFIX + 'innerHTML'];\n  },\n\n  /** @this {Node} */\n  set innerHTML(value) {\n    return this[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  },\n\n  /** @this {Node} */\n  get shadowRoot() {\n    return this[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n});\n\nexport const OutsideDescriptors = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentElement() {\n    return this[utils.SHADY_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get parentNode() {\n    return this[utils.SHADY_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    return this[utils.SHADY_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    return this[utils.SHADY_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get nextElementSibling() {\n    return this[utils.SHADY_PREFIX + 'nextElementSibling'];\n  },\n\n  /** @this {Node} */\n  get previousElementSibling() {\n    return this[utils.SHADY_PREFIX + 'previousElementSibling'];\n  },\n\n  /** @this {Node} */\n  get className() {\n    return this[utils.SHADY_PREFIX + 'className'];\n  },\n\n  /** @this {Node} */\n  set className(value) {\n    return this[utils.SHADY_PREFIX + 'className'] = value;\n  }\n\n});\n\nfor (let prop in InsideDescriptors) {\n  InsideDescriptors[prop].enumerable = false;\n}\n\nfor (let prop in OutsideDescriptors) {\n  OutsideDescriptors[prop].enumerable = false;\n}\n\nconst noInstancePatching = utils.settings.hasDescriptors || utils.settings.noPatch;\n\n// ensure an element has patched \"outside\" accessors; no-op when not needed\nexport let patchOutsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__outsideAccessors) {\n      sd.__outsideAccessors = true;\n      utils.patchProperties(element, OutsideDescriptors);\n    }\n  }\n\n// ensure an element has patched \"inside\" accessors; no-op when not needed\nexport let patchInsideElementAccessors = noInstancePatching ?\n  function() {} : function(element) {\n    const sd = ensureShadyDataForNode(element);\n    if (!sd.__insideAccessors) {\n      sd.__insideAccessors = true;\n      utils.patchProperties(element, InsideDescriptors);\n    }\n  }","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode} from './shady-data.js';\n\n/*\nMake this name unique so it is unlikely to conflict with properties on objects passed to `addEventListener`\nhttps://github.com/webcomponents/shadydom/issues/173\n*/\nconst /** string */ eventWrappersName = `__eventWrappers${Date.now()}`;\n\n/** @type {?function(!Event): boolean} */\nconst composedGetter = (() => {\n  const composedProp = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');\n  return composedProp ? (ev) => composedProp.get.call(ev) : null;\n})();\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nconst alwaysComposed = {\n  'blur': true,\n  'focus': true,\n  'focusin': true,\n  'focusout': true,\n  'click': true,\n  'dblclick': true,\n  'mousedown': true,\n  'mouseenter': true,\n  'mouseleave': true,\n  'mousemove': true,\n  'mouseout': true,\n  'mouseover': true,\n  'mouseup': true,\n  'wheel': true,\n  'beforeinput': true,\n  'input': true,\n  'keydown': true,\n  'keyup': true,\n  'compositionstart': true,\n  'compositionupdate': true,\n  'compositionend': true,\n  'touchstart': true,\n  'touchend': true,\n  'touchmove': true,\n  'touchcancel': true,\n  'pointerover': true,\n  'pointerenter': true,\n  'pointerdown': true,\n  'pointermove': true,\n  'pointerup': true,\n  'pointercancel': true,\n  'pointerout': true,\n  'pointerleave': true,\n  'gotpointercapture': true,\n  'lostpointercapture': true,\n  'dragstart': true,\n  'drag': true,\n  'dragenter': true,\n  'dragleave': true,\n  'dragover': true,\n  'drop': true,\n  'dragend': true,\n  'DOMActivate': true,\n  'DOMFocusIn': true,\n  'DOMFocusOut': true,\n  'keypress': true\n};\n\nconst unpatchedEvents = {\n  'DOMAttrModified': true,\n  'DOMAttributeNameChanged': true,\n  'DOMCharacterDataModified': true,\n  'DOMElementNameChanged': true,\n  'DOMNodeInserted': true,\n  'DOMNodeInsertedIntoDocument': true,\n  'DOMNodeRemoved': true,\n  'DOMNodeRemovedFromDocument': true,\n  'DOMSubtreeModified': true\n}\n\n/**\n * Some EventTarget subclasses are not Node subclasses, and you cannot call\n * `getRootNode()` on them.\n *\n * @param {!(Node|EventTarget)} eventTarget\n * @return {!(Node|EventTarget)}\n */\nfunction getRootNodeWithFallback(eventTarget) {\n  if (eventTarget instanceof Node) {\n    return eventTarget[utils.SHADY_PREFIX + 'getRootNode']();\n  } else {\n    return eventTarget;\n  }\n}\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = getRootNodeWithFallback(startNode);\n  while (current) {\n    composedPath.push(current);\n    if (current[utils.SHADY_PREFIX + 'assignedSlot']) {\n      current = current[utils.SHADY_PREFIX + 'assignedSlot'];\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current[utils.SHADY_PREFIX + 'parentNode'];\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nexport const composedPath = (event) => {\n  if (!event.__composedPath) {\n    event.__composedPath = pathComposer(event.target, true);\n  }\n  return event.__composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = getRootNodeWithFallback(ancestor);\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventPatches = {\n\n  /**\n   * @this {Event}\n   */\n  get composed() {\n    if (this.__composed === undefined) {\n      // if there's an original `composed` getter on the Event prototype, use that\n      if (composedGetter) {\n        // TODO(web-padawan): see https://github.com/webcomponents/shadydom/issues/275\n        this.__composed = this.type === 'focusin' || this.type === 'focusout' || composedGetter(this);\n      // If the event is trusted, or `isTrusted` is not supported, check the list of always composed events\n      } else if (this.isTrusted !== false) {\n        this.__composed = alwaysComposed[this.type];\n      }\n    }\n    return /** @type {!Event} */(this).__composed || false;\n  },\n\n  /**\n   * @this {Event}\n   */\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this['__target'], this.composed);\n    }\n    return /** @type {!Event} */(this).__composedPath;\n  },\n\n  /**\n   * @this {Event}\n   */\n  get target() {\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  /**\n   * @this {Event}\n   */\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget || this['__previousCurrentTarget'], /** @type {!Event} */(this).__relatedTargetComposedPath);\n  },\n  /**\n   * @this {Event}\n   */\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  /**\n   * @this {Event}\n   */\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options['composed']);\n    return event;\n  }\n  // put constructor properties on subclass\n  klazz.__proto__ = Base;\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  'focus': true,\n  'blur': true\n};\n\n\n/**\n * Check if the event has been retargeted by comparing original `target`, and calculated `target`\n * @param {Event} event\n * @return {boolean} True if the original target and calculated target are the same\n */\nfunction hasRetargeted(event) {\n  return event['__target'] !== event.target || event.__relatedTarget !== event.relatedTarget;\n}\n\n/**\n *\n * @param {Event} event\n * @param {Node} node\n * @param {string} phase\n */\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      if (hasRetargeted(event) && event.target === event.relatedTarget) {\n        return;\n      }\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {get() { return Event.AT_TARGET }});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    const nodeData = shadyDataForNode(node);\n    const root = nodeData && nodeData.root;\n    if (i === 0 || (root && root === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node[utils.SHADY_PREFIX + 'getRootNode']();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction listenerSettingsEqual(savedListener, node, type, capture, once, passive) {\n  let {\n    node: savedNode,\n    type: savedType,\n    capture: savedCapture,\n    once: savedOnce,\n    passive: savedPassive\n  } = savedListener;\n  return node === savedNode &&\n    type === savedType &&\n    capture === savedCapture &&\n    once === savedOnce &&\n    passive === savedPassive;\n}\n\nexport function findListener(wrappers, node, type, capture, once, passive) {\n  for (let i = 0; i < wrappers.length; i++) {\n    if (listenerSettingsEqual(wrappers[i], node, type, capture, once, passive)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Firefox can throw on accessing eventWrappers inside of `removeEventListener` during a selenium run\n * Try/Catch accessing eventWrappers to work around\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1353074\n */\nfunction getEventWrappers(eventLike) {\n  let wrappers = null;\n  try {\n    wrappers = eventLike[eventWrappersName];\n  } catch (e) {} // eslint-disable-line no-empty\n  return wrappers;\n}\n\n/**\n * @this {EventTarget}\n */\nexport function addEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n\n  const handlerType = typeof fnOrObj;\n\n  // bail if `fnOrObj` is not a function, not an object\n  if (handlerType !== 'function' && handlerType !== 'object') {\n    return;\n  }\n\n  // bail if `fnOrObj` is an object without a `handleEvent` method\n  if (handlerType === 'object' && (!fnOrObj.handleEvent || typeof fnOrObj.handleEvent !== 'function')) {\n    return;\n  }\n\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'addEventListener'](type, fnOrObj, optionsOrCapture);\n  }\n\n  // The callback `fn` might be used for multiple nodes/events. Since we generate\n  // a wrapper function, we need to keep track of it when we remove the listener.\n  // It's more efficient to store the node/type/options information as Array in\n  // `fn` itself rather than the node (we assume that the same callback is used\n  // for few nodes at most, whereas a node will likely have many event listeners).\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  // hack to let ShadyRoots have event listeners\n  // event listener will be on host, but `currentTarget`\n  // will be set to shadyroot for event listener\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n\n  let wrappers = fnOrObj[eventWrappersName];\n  if (wrappers) {\n    // Stop if the wrapper function has already been created.\n    if (findListener(wrappers, target, type, capture, once, passive) > -1) {\n      return;\n    }\n  } else {\n    fnOrObj[eventWrappersName] = [];\n  }\n\n  /**\n   * @this {HTMLElement}\n   * @param {Event} e\n   */\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this[utils.SHADY_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n    }\n    if (!e['__target']) {\n      patchEvent(e);\n    }\n    let lastCurrentTargetDesc;\n    if (target !== this) {\n      // replace `currentTarget` to make `target` and `relatedTarget` correct for inside the shadowroot\n      lastCurrentTargetDesc = Object.getOwnPropertyDescriptor(e, 'currentTarget');\n      Object.defineProperty(e, 'currentTarget', {get() { return target }, configurable: true});\n    }\n    e['__previousCurrentTarget'] = e['currentTarget'];\n    // Always check if a shadowRoot is in the current event path.\n    // If it is not, the event was generated on either the host of the shadowRoot\n    // or a children of the host.\n    if (utils.isShadyRoot(target) && e.composedPath().indexOf(target) == -1) {\n      return;\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(target) > -1) {\n      if (hasRetargeted(e) && e.target === e.relatedTarget) {\n        if (e.eventPhase === Event.BUBBLING_PHASE) {\n          e.stopImmediatePropagation();\n        }\n        return;\n      }\n      // prevent non-bubbling events from triggering bubbling handlers on shadowroot, but only if not in capture phase\n      if (e.eventPhase !== Event.CAPTURING_PHASE && !e.bubbles && e.target !== target && !(target instanceof Window)) {\n        return;\n      }\n      let ret = handlerType === 'function' ?\n        fnOrObj.call(target, e) :\n        (fnOrObj.handleEvent && fnOrObj.handleEvent(e));\n      if (target !== this) {\n        // replace the \"correct\" `currentTarget`\n        if (lastCurrentTargetDesc) {\n          Object.defineProperty(e, 'currentTarget', lastCurrentTargetDesc);\n          lastCurrentTargetDesc = null;\n        } else {\n          delete e['currentTarget'];\n        }\n      }\n      return ret;\n    }\n  };\n\n  // Store the wrapper information.\n  fnOrObj[eventWrappersName].push({\n    // note: use target here which is either a shadowRoot\n    // (when the host element is proxy'ing the event) or this element\n    node: target,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] ||\n      {'capture': [], 'bubble': []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    this[utils.NATIVE_PREFIX + 'addEventListener'](type, wrapperFn, optionsOrCapture);\n  }\n}\n\n/**\n * @this {EventTarget}\n */\nexport function removeEventListener(type, fnOrObj, optionsOrCapture) {\n  if (!fnOrObj) {\n    return;\n  }\n  if (unpatchedEvents[type]) {\n    return this[utils.NATIVE_PREFIX + 'removeEventListener'](type, fnOrObj, optionsOrCapture);\n  }\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (optionsOrCapture && typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  let target = (optionsOrCapture && optionsOrCapture.__shadyTarget) || this;\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  let wrappers = getEventWrappers(fnOrObj);\n  if (wrappers) {\n    let idx = findListener(wrappers, target, type, capture, once, passive);\n    if (idx > -1) {\n      wrapperFn = wrappers.splice(idx, 1)[0].wrapperFn;\n      // Cleanup.\n      if (!wrappers.length) {\n        fnOrObj[eventWrappersName] = undefined;\n      }\n    }\n  }\n  this[utils.NATIVE_PREFIX + 'removeEventListener'](type, wrapperFn || fnOrObj, optionsOrCapture);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nfunction activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window[utils.NATIVE_PREFIX + 'addEventListener'](ev, function(e) {\n      if (!e['__target']) {\n        patchEvent(e);\n        retargetNonBubblingEvent(e);\n      }\n    }, true);\n  }\n}\n\nconst EventPatchesDescriptors = utils.getOwnPropertyDescriptors(EventPatches);\n\nconst SHADY_PROTO = '__shady_patchedProto';\nconst SHADY_SOURCE_PROTO = '__shady_sourceProto';\n\nfunction patchEvent(event) {\n  event['__target'] = event.target;\n  event.__relatedTarget = event.relatedTarget;\n  // attempt to patch prototype (via cache)\n  if (utils.settings.hasDescriptors) {\n    const proto = Object.getPrototypeOf(event);\n    if (!Object.hasOwnProperty(proto, SHADY_PROTO)) {\n      const patchedProto = Object.create(proto);\n      patchedProto[SHADY_SOURCE_PROTO] = proto;\n      utils.patchProperties(patchedProto, EventPatchesDescriptors);\n      proto[SHADY_PROTO] = patchedProto;\n    }\n    event.__proto__ = proto[SHADY_PROTO];\n  // and fallback to patching instance\n  } else {\n    utils.patchProperties(event, EventPatchesDescriptors);\n  }\n}\n\nlet PatchedEvent = mixinComposedFlag(Event);\nlet PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nlet PatchedMouseEvent = mixinComposedFlag(MouseEvent);\n\n\nexport function patchEvents() {\n  activateFocusEventOverrides();\n  window.Event = PatchedEvent;\n  window.CustomEvent = PatchedCustomEvent;\n  window.MouseEvent = PatchedMouseEvent;\n}\n\nexport function patchClick() {\n  // Fix up `Element.prototype.click()` if `isTrusted` is supported, but `composed` isn't\n  if (!composedGetter && Object.getOwnPropertyDescriptor(Event.prototype, 'isTrusted')) {\n    /** @this {Element} */\n    const composedClickFn = function() {\n      const ev = new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      this[utils.SHADY_PREFIX + 'dispatchEvent'](ev);\n    };\n    if (Element.prototype.click) {\n      Element.prototype.click = composedClickFn;\n    } else if (HTMLElement.prototype.click) {\n      HTMLElement.prototype.click = composedClickFn;\n    }\n  }\n}\n\nexport const eventPropertyNames = Object.getOwnPropertyNames(Document.prototype)\n    .filter(name => name.substring(0,2) === 'on');\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' -> '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd,\n                            old, oldStart, oldEnd) {\n  // \"Deletion\" columns\n  let rowCount = oldEnd - oldStart + 1;\n  let columnCount = currentEnd - currentStart + 1;\n  let distances = new Array(rowCount);\n\n  // \"Addition\" rows. Initialize null column.\n  for (let i = 0; i < rowCount; i++) {\n    distances[i] = new Array(columnCount);\n    distances[i][0] = i;\n  }\n\n  // Initialize null row\n  for (let j = 0; j < columnCount; j++)\n    distances[0][j] = j;\n\n  for (let i = 1; i < rowCount; i++) {\n    for (let j = 1; j < columnCount; j++) {\n      if (equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n        distances[i][j] = distances[i - 1][j - 1];\n      else {\n        let north = distances[i - 1][j] + 1;\n        let west = distances[i][j - 1] + 1;\n        distances[i][j] = north < west ? north : west;\n      }\n    }\n  }\n\n  return distances;\n}\n\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n  let i = distances.length - 1;\n  let j = distances[0].length - 1;\n  let current = distances[i][j];\n  let edits = [];\n  while (i > 0 || j > 0) {\n    if (i == 0) {\n      edits.push(EDIT_ADD);\n      j--;\n      continue;\n    }\n    if (j == 0) {\n      edits.push(EDIT_DELETE);\n      i--;\n      continue;\n    }\n    let northWest = distances[i - 1][j - 1];\n    let west = distances[i - 1][j];\n    let north = distances[i][j - 1];\n\n    let min;\n    if (west < north)\n      min = west < northWest ? west : northWest;\n    else\n      min = north < northWest ? north : northWest;\n\n    if (min == northWest) {\n      if (northWest == current) {\n        edits.push(EDIT_LEAVE);\n      } else {\n        edits.push(EDIT_UPDATE);\n        current = northWest;\n      }\n      i--;\n      j--;\n    } else if (min == west) {\n      edits.push(EDIT_DELETE);\n      i--;\n      current = west;\n    } else {\n      edits.push(EDIT_ADD);\n      j--;\n      current = north;\n    }\n  }\n\n  edits.reverse();\n  return edits;\n}\n\n/**\n * Splice Projection functions:\n *\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   <index, removed, addedCount>\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n */\n\n/**\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calcSplices(current, currentStart, currentEnd,\n                      old, oldStart, oldEnd) {\n  let prefixCount = 0;\n  let suffixCount = 0;\n  let splice;\n\n  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n  if (currentStart == 0 && oldStart == 0)\n    prefixCount = sharedPrefix(current, old, minLength);\n\n  if (currentEnd == current.length && oldEnd == old.length)\n    suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n\n  currentStart += prefixCount;\n  oldStart += prefixCount;\n  currentEnd -= suffixCount;\n  oldEnd -= suffixCount;\n\n  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n    return [];\n\n  if (currentStart == currentEnd) {\n    splice = newSplice(currentStart, [], 0);\n    while (oldStart < oldEnd)\n      splice.removed.push(old[oldStart++]);\n\n    return [ splice ];\n  } else if (oldStart == oldEnd)\n    return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n  let ops = spliceOperationsFromEditDistances(\n      calcEditDistances(current, currentStart, currentEnd,\n                             old, oldStart, oldEnd));\n\n  splice = undefined;\n  let splices = [];\n  let index = currentStart;\n  let oldIndex = oldStart;\n  for (let i = 0; i < ops.length; i++) {\n    switch(ops[i]) {\n      case EDIT_LEAVE:\n        if (splice) {\n          splices.push(splice);\n          splice = undefined;\n        }\n\n        index++;\n        oldIndex++;\n        break;\n      case EDIT_UPDATE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n      case EDIT_ADD:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.addedCount++;\n        index++;\n        break;\n      case EDIT_DELETE:\n        if (!splice)\n          splice = newSplice(index, [], 0);\n\n        splice.removed.push(old[oldIndex]);\n        oldIndex++;\n        break;\n    }\n  }\n\n  if (splice) {\n    splices.push(splice);\n  }\n  return splices;\n}\n\nfunction sharedPrefix(current, old, searchLength) {\n  for (let i = 0; i < searchLength; i++)\n    if (!equals(current[i], old[i]))\n      return i;\n  return searchLength;\n}\n\nfunction sharedSuffix(current, old, searchLength) {\n  let index1 = current.length;\n  let index2 = old.length;\n  let count = 0;\n  while (count < searchLength && equals(current[--index1], old[--index2]))\n    count++;\n\n  return count;\n}\n\nfunction equals(currentValue, previousValue) {\n  return currentValue === previousValue;\n}\n\nexport function calculateSplices(current, previous) {\n  return calcSplices(current, 0, current.length, previous, 0,\n                          previous.length);\n}\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from './shady-data.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\n\nfunction linkNode(node, container, ref_node) {\n  patchOutsideElementAccessors(node);\n  ref_node = ref_node || null;\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  const ref_nodeData = ref_node ? ensureShadyDataForNode(ref_node) : null;\n  // update ref_node.previousSibling <-> node\n  nodeData.previousSibling = ref_node ? ref_nodeData.previousSibling :\n    container[utils.SHADY_PREFIX + 'lastChild'];\n  let psd = shadyDataForNode(nodeData.previousSibling);\n  if (psd) {\n    psd.nextSibling = node;\n  }\n  // update node <-> ref_node\n  let nsd = shadyDataForNode(nodeData.nextSibling = ref_node);\n  if (nsd) {\n    nsd.previousSibling = node;\n  }\n  // update node <-> container\n  nodeData.parentNode = container;\n  if (ref_node) {\n    if (ref_node === containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  } else {\n    containerData.lastChild = node;\n    if (!containerData.firstChild) {\n      containerData.firstChild = node;\n    }\n  }\n  // remove caching of childNodes\n  containerData.childNodes = null;\n}\n\nexport const recordInsertBefore = (node, container, ref_node) => {\n  patchInsideElementAccessors(container);\n  const containerData = ensureShadyDataForNode(container);\n  if (containerData.firstChild !== undefined) {\n    containerData.childNodes = null;\n  }\n  // handle document fragments\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i=0; i < c$.length; i++) {\n      linkNode(c$[i], container, ref_node);\n    }\n    // cleanup logical dom in doc fragment.\n    const nodeData = ensureShadyDataForNode(node);\n    let resetTo = (nodeData.firstChild !== undefined) ? null : undefined;\n    nodeData.firstChild = nodeData.lastChild = resetTo;\n    nodeData.childNodes = resetTo;\n  } else {\n    linkNode(node, container, ref_node);\n  }\n}\n\nexport const recordRemoveChild = (node, container) => {\n  const nodeData = ensureShadyDataForNode(node);\n  const containerData = ensureShadyDataForNode(container);\n  if (node === containerData.firstChild) {\n    containerData.firstChild = nodeData.nextSibling;\n  }\n  if (node === containerData.lastChild) {\n    containerData.lastChild = nodeData.previousSibling;\n  }\n  let p = nodeData.previousSibling;\n  let n = nodeData.nextSibling;\n  if (p) {\n    ensureShadyDataForNode(p).nextSibling = n;\n  }\n  if (n) {\n    ensureShadyDataForNode(n).previousSibling = p;\n  }\n  // When an element is removed, logical data is no longer tracked.\n  // Explicitly set `undefined` here to indicate this. This is disginguished\n  // from `null` which is set if info is null.\n  nodeData.parentNode = nodeData.previousSibling =\n  nodeData.nextSibling = undefined;\n  if (containerData.childNodes !== undefined) {\n    // remove caching of childNodes\n    containerData.childNodes = null;\n  }\n}\n\n/**\n * @param  {!Node} node\n */\nexport const recordChildNodes = (node) => {\n  const nodeData = ensureShadyDataForNode(node);\n  if (nodeData.firstChild === undefined) {\n    // remove caching of childNodes\n    nodeData.childNodes = null;\n    const first = nodeData.firstChild = node[utils.NATIVE_PREFIX + 'firstChild'] || null;\n    nodeData.lastChild = node[utils.NATIVE_PREFIX + 'lastChild'] || null;\n    patchInsideElementAccessors(node);\n    for (let n = first, previous; n; (n = n[utils.NATIVE_PREFIX + 'nextSibling'])) {\n      const sd = ensureShadyDataForNode(n);\n      sd.parentNode = node;\n      sd.nextSibling = n[utils.NATIVE_PREFIX + 'nextSibling'] || null;\n      sd.previousSibling = previous || null;\n      previous = n;\n      patchOutsideElementAccessors(n);\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\n\nlet scopingShim = null;\n\nexport function getScopingShim() {\n  if (!scopingShim) {\n    scopingShim = window['ShadyCSS'] && window['ShadyCSS']['ScopingShim'];\n  }\n  return scopingShim || null;\n}\n\n/**\n * @param {!Node} node\n * @param {string} attr\n * @param {string} value\n */\nexport function scopeClassAttribute(node, attr, value) {\n  const scopingShim = getScopingShim();\n  if (scopingShim && attr === 'class') {\n    scopingShim['setElementClass'](node, value);\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n */\nexport function addShadyScoping(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['scopeNode'](node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} currentScopeName\n */\nexport function removeShadyScoping(node, currentScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  scopingShim['unscopeNode'](node, currentScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @param {string} oldScopeName\n */\nexport function replaceShadyScoping(node, newScopeName, oldScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return;\n  }\n  if (oldScopeName) {\n    removeShadyScoping(node, oldScopeName);\n  }\n  addShadyScoping(node, newScopeName);\n}\n\n/**\n * @param {!Node} node\n * @param {string} newScopeName\n * @return {boolean}\n */\nexport function currentScopeIsCorrect(node, newScopeName) {\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return true;\n  }\n  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    // NOTE: as an optimization, only check that all the top-level children\n    // have the correct scope.\n    let correctScope = true;\n    const childNodes = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let idx = 0; correctScope && (idx < childNodes.length); idx++) {\n      correctScope = correctScope &&\n        currentScopeIsCorrect(childNodes[idx], newScopeName);\n    }\n    return correctScope;\n  }\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  const currentScope = scopingShim['currentScopeForNode'](node);\n  return currentScope === newScopeName;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function currentScopeForNode(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return '';\n  }\n  const scopingShim = getScopingShim();\n  if (!scopingShim) {\n    return '';\n  }\n  return scopingShim['currentScopeForNode'](node);\n}\n\n/**\n * Walk over a node's tree and apply visitorFn to each element node\n *\n * @param {Node} node\n * @param {function(!Node):void} visitorFn\n */\nexport function treeVisitor(node, visitorFn) {\n  if (!node) {\n    return;\n  }\n  // this check is necessary if `node` is a Document Fragment\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    visitorFn(node);\n  }\n  const childNodes = node[utils.SHADY_PREFIX + 'childNodes'];\n  for (let idx = 0, n; idx < childNodes.length; idx++) {\n    n = childNodes[idx];\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      treeVisitor(n, visitorFn);\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getScopingShim, removeShadyScoping, replaceShadyScoping,\n  treeVisitor, currentScopeForNode, currentScopeIsCorrect } from '../style-scoping.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\nimport {recordInsertBefore, recordRemoveChild} from '../link-nodes.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\nconst preferPerformance = utils.settings.preferPerformance;\n\nconst nativeIsConnectedAccessors =\n/** @type {ObjectPropertyDescriptor} */(\n  Object.getOwnPropertyDescriptor(Node.prototype, 'isConnected')\n);\n\nconst nativeIsConnected = nativeIsConnectedAccessors && nativeIsConnectedAccessors.get;\n\nexport function clearNode(node) {\n  let firstChild;\n  while ((firstChild = node[utils.SHADY_PREFIX + 'firstChild'])) {\n    node[utils.SHADY_PREFIX + 'removeChild'](firstChild);\n  }\n}\n\nfunction removeOwnerShadyRoot(node) {\n  // optimization: only reset the tree if node is actually in a root\n  if (hasCachedOwnerRoot(node)) {\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n      removeOwnerShadyRoot(n);\n    }\n  }\n  const nodeData = shadyDataForNode(node);\n  if (nodeData) {\n    nodeData.ownerShadyRoot = undefined;\n  }\n}\n\nfunction hasCachedOwnerRoot(node) {\n  const nodeData = shadyDataForNode(node);\n  return Boolean(nodeData && nodeData.ownerShadyRoot !== undefined);\n}\n\n/**\n * Finds the first flattened node that is composed in the node's parent.\n * If the given node is a slot, then the first flattened node is returned\n * if it exists, otherwise advance to the node's nextSibling.\n * @param {Node} node within which to find first composed node\n * @returns {Node} first composed node\n */\nfunction firstComposedNode(node) {\n  let composed = node;\n  if (node && node.localName === 'slot') {\n    const nodeData = shadyDataForNode(node);\n    const flattened = nodeData && nodeData.flattenedNodes;\n    composed = flattened && flattened.length ? flattened[0] :\n      firstComposedNode(node[utils.SHADY_PREFIX + 'nextSibling']);\n  }\n  return composed;\n}\n\n/**\n * @param {Node} node\n * @param {Node=} addedNode\n * @param {Node=} removedNode\n */\nfunction scheduleObserver(node, addedNode, removedNode) {\n  const nodeData = shadyDataForNode(node);\n  const observer = nodeData && nodeData.observer;\n  if (observer) {\n    if (addedNode) {\n      observer.addedNodes.push(addedNode);\n    }\n    if (removedNode) {\n      observer.removedNodes.push(removedNode);\n    }\n    observer.schedule();\n  }\n}\n\nexport const NodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get parentNode() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.parentNode;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentNode'];\n  },\n\n  /** @this {Node} */\n  get firstChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.firstChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'firstChild'];\n  },\n\n  /** @this {Node} */\n  get lastChild() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.lastChild;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'lastChild'];\n  },\n\n  /** @this {Node} */\n  get nextSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.nextSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'nextSibling'];\n  },\n\n  /** @this {Node} */\n  get previousSibling() {\n    const nodeData = shadyDataForNode(this);\n    const l = nodeData && nodeData.previousSibling;\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'previousSibling'];\n  },\n\n  /** @this {Node} */\n  get childNodes() {\n    let childNodes;\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const nodeData = shadyDataForNode(this);\n      if (!nodeData.childNodes) {\n        nodeData.childNodes = [];\n        for (let n=this[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          nodeData.childNodes.push(n);\n        }\n      }\n      childNodes = nodeData.childNodes;\n    } else {\n      childNodes = this[utils.NATIVE_PREFIX + 'childNodes'];\n    }\n    childNodes.item = function(index) {\n      return childNodes[index];\n    }\n    return childNodes;\n  },\n\n  /** @this {Node} */\n  get parentElement() {\n    const nodeData = shadyDataForNode(this);\n    let l = nodeData && nodeData.parentNode;\n    if (l && l.nodeType !== Node.ELEMENT_NODE) {\n      l = null;\n    }\n    return l !== undefined ? l : this[utils.NATIVE_PREFIX + 'parentElement'];\n  },\n\n  /** @this {Node} */\n  get isConnected() {\n    if (nativeIsConnected && nativeIsConnected.call(this)) {\n      return true;\n    }\n    if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) {\n      return false;\n    }\n    // Fast path for distributed nodes.\n    const ownerDocument = this.ownerDocument;\n    if (utils.hasDocumentContains) {\n      if (ownerDocument[utils.NATIVE_PREFIX + 'contains'](this)) {\n        return true;\n      }\n    } else if (ownerDocument.documentElement &&\n      ownerDocument.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n      return true;\n    }\n    // Slow path for non-distributed nodes.\n    let node = this;\n    while (node && !(node instanceof Document)) {\n      node = node[utils.SHADY_PREFIX + 'parentNode'] || (utils.isShadyRoot(node) ? /** @type {ShadowRoot} */(node).host : undefined);\n    }\n    return !!(node && node instanceof Document);\n  },\n\n  /** @this {Node} */\n  get textContent() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      let tc = [];\n      for (let i = 0, cn = this[utils.SHADY_PREFIX + 'childNodes'], c; (c = cn[i]); i++) {\n        if (c.nodeType !== Node.COMMENT_NODE) {\n          tc.push(c[utils.SHADY_PREFIX + 'textContent']);\n        }\n      }\n      return tc.join('');\n    } else {\n      return this[utils.NATIVE_PREFIX + 'textContent'];\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {string} value\n   */\n  set textContent(value) {\n    if (typeof value === 'undefined' || value === null) {\n      value = ''\n    }\n    switch (this.nodeType) {\n      case Node.ELEMENT_NODE:\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        if (!utils.isTrackingLogicalChildNodes(this) && utils.settings.hasDescriptors) {\n          // may be removing a nested slot but fast path if we know we are not.\n          const firstChild = this[utils.SHADY_PREFIX + 'firstChild'];\n          if (firstChild != this[utils.SHADY_PREFIX + 'lastChild'] ||\n            (firstChild && firstChild.nodeType != Node.TEXT_NODE)) {\n            clearNode(this);\n          }\n          this[utils.NATIVE_PREFIX + 'textContent'] = value;\n        } else {\n          clearNode(this);\n          // Document fragments must have no childNodes if setting a blank string\n          if (value.length > 0 || this.nodeType === Node.ELEMENT_NODE) {\n            this[utils.SHADY_PREFIX + 'insertBefore'](document.createTextNode(value))\n          }\n        }\n        break;\n      default:\n        // Note, be wary of patching `nodeValue`.\n        this.nodeValue = value;\n        break;\n    }\n  },\n\n  // Patched `insertBefore`. Note that all mutations that add nodes are routed\n  // here. When a <slot> is added or a node is added to a host with a shadowRoot\n  // with a slot, a standard dom `insert` call is aborted and `_asyncRender`\n  // is called on the relevant shadowRoot. In all other cases, a standard dom\n  // `insert` can be made, but the location and ref_node may need to be changed.\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  insertBefore(node, ref_node) {\n    // optimization: assume native insertBefore is ok if the nodes are not in the document.\n    if (this.ownerDocument !== doc && node.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      return node;\n    }\n    if (node === this) {\n      throw Error(`Failed to execute 'appendChild' on 'Node': The new child element contains the parent.`);\n    }\n    if (ref_node) {\n      const refData = shadyDataForNode(ref_node);\n      const p = refData && refData.parentNode;\n      if ((p !== undefined && p !== this) ||\n        (p === undefined && ref_node[utils.NATIVE_PREFIX + 'parentNode'] !== this)) {\n        throw Error(`Failed to execute 'insertBefore' on 'Node': The node ` +\n        `before which the new node is to be inserted is not a child of this node.`);\n      }\n    }\n    if (ref_node === node) {\n      return node;\n    }\n    /** @type {!Array<!HTMLSlotElement>} */\n    const slotsAdded = [];\n    const ownerRoot = ownerShadyRootForNode(this);\n    /** @type {string} */\n    const newScopeName = ownerRoot ? ownerRoot.host.localName : currentScopeForNode(this);\n    /** @type {string} */\n    let oldScopeName;\n    // remove from existing location\n    const parentNode = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (parentNode) {\n      oldScopeName = currentScopeForNode(node);\n      parentNode[utils.SHADY_PREFIX + 'removeChild'](node,\n        Boolean(ownerRoot) || !ownerShadyRootForNode(node));\n    }\n    // add to new parent\n    let allowNativeInsert = true;\n    const needsScoping = (!preferPerformance || node['__noInsertionPoint'] === undefined) &&\n        !currentScopeIsCorrect(node, newScopeName);\n    const needsSlotFinding = ownerRoot && !node['__noInsertionPoint'] &&\n        (!preferPerformance || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    if (needsSlotFinding || needsScoping) {\n      // NOTE: avoid node.removeChild as this *can* trigger another patched\n      // method (e.g. custom elements) and we want only the shady method to run.\n      // The following table describes what style scoping actions should happen as a result of this insertion.\n      // document -> shadowRoot: replace\n      // shadowRoot -> shadowRoot: replace\n      // shadowRoot -> shadowRoot of same type: do nothing\n      // shadowRoot -> document: allow unscoping\n      // document -> document: do nothing\n      // The \"same type of shadowRoot\" and \"document to document cases rely on `currentScopeIsCorrect` returning true\n      if (needsScoping) {\n        // in a document or disconnected tree, replace scoping if necessary\n        oldScopeName = oldScopeName || currentScopeForNode(node);\n      }\n      treeVisitor(node, (node) => {\n        if (needsSlotFinding && node.localName === 'slot') {\n          slotsAdded.push(/** @type {!HTMLSlotElement} */(node));\n        }\n        if (needsScoping) {\n          replaceShadyScoping(node, newScopeName, oldScopeName);\n        }\n      });\n    }\n    // if a slot is added, must render containing root.\n    if (this.localName === 'slot' || slotsAdded.length) {\n      if (slotsAdded.length) {\n        ownerRoot._addSlots(slotsAdded);\n      }\n      if (ownerRoot) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordInsertBefore(node, this, ref_node);\n      // when inserting into a host with a shadowRoot with slot, use\n      // `shadowRoot._asyncRender()` via `attach-shadow` module\n      const parentData = shadyDataForNode(this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        allowNativeInsert = false;\n      // when inserting into a host with shadowRoot with NO slot, do nothing\n      // as the node should not be added to composed dome anywhere.\n      } else if (parentData.root) {\n        allowNativeInsert = false;\n      }\n    }\n    if (allowNativeInsert) {\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host : this;\n      // if ref_node, get the ref_node that's actually in composed dom.\n      if (ref_node) {\n        ref_node = firstComposedNode(ref_node);\n        container[utils.NATIVE_PREFIX + 'insertBefore'](node, ref_node);\n      } else {\n        container[utils.NATIVE_PREFIX + 'appendChild'](node);\n      }\n    // Since ownerDocument is not patched, it can be incorrect after this call\n    // if the node is physically appended via distribution. This can result\n    // in the custom elements polyfill not upgrading the node if it's in an inert doc.\n    // We correct this by calling `adoptNode`.\n    } else if (node.ownerDocument !== this.ownerDocument) {\n      this.ownerDocument.adoptNode(node);\n    }\n    scheduleObserver(this, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   */\n  appendChild(node) {\n    return this[utils.SHADY_PREFIX + 'insertBefore'](node);\n  },\n\n  /**\n   * Patched `removeChild`. Note that all dom \"removals\" are routed here.\n   * Removes the given `node` from the element's `children`.\n   * This method also performs dom composition.\n   * @this {Node}\n   * @param {Node} node\n   * @param {boolean=} skipUnscoping\n   */\n  removeChild(node, skipUnscoping = false) {\n    if (this.ownerDocument !== doc) {\n      return this[utils.NATIVE_PREFIX + 'removeChild'](node);\n    }\n    if (node[utils.SHADY_PREFIX + 'parentNode'] !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    let preventNativeRemove;\n    let ownerRoot = ownerShadyRootForNode(node);\n    const removingInsertionPoint = ownerRoot && ownerRoot._removeContainedSlots(node);\n    const parentData = shadyDataForNode(this);\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      recordRemoveChild(node, this);\n      if (utils.hasShadowRootWithSlot(this)) {\n        parentData.root._asyncRender();\n        preventNativeRemove = true;\n      }\n    }\n    // unscope a node leaving a ShadowRoot if ShadyCSS is present, and this node\n    // is not going to be rescoped in `insertBefore`\n    if (getScopingShim() && !skipUnscoping && ownerRoot) {\n      const oldScopeName = currentScopeForNode(node);\n      treeVisitor(node, (node) => {\n        removeShadyScoping(node, oldScopeName);\n      });\n    }\n    removeOwnerShadyRoot(node);\n    // if removing slot, must render containing root\n    if (ownerRoot) {\n      let changeSlotContent = this && this.localName === 'slot';\n      if (changeSlotContent) {\n        preventNativeRemove = true;\n      }\n      if (removingInsertionPoint || changeSlotContent) {\n        ownerRoot._asyncRender();\n      }\n    }\n    if (!preventNativeRemove) {\n      // if removing from a shadyRoot, remove from host instead\n      let container = utils.isShadyRoot(this) ?\n        /** @type {ShadowRoot} */(this).host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // (1) if parent has a shadyRoot, element may or may not at distributed\n      // location (could be undistributed)\n      // (2) if parent is a slot, element may not ben in composed dom\n      if (!(parentData.root || node.localName === 'slot') ||\n        (container === node[utils.NATIVE_PREFIX + 'parentNode'])) {\n        container[utils.NATIVE_PREFIX + 'removeChild'](node);\n      }\n    }\n    scheduleObserver(this, null, node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {Node} node\n   * @param {Node=} ref_node\n   */\n  replaceChild(node, ref_node) {\n    this[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n    this[utils.SHADY_PREFIX + 'removeChild'](ref_node);\n    return node;\n  },\n\n  /**\n   * @this {Node}\n   * @param {boolean=} deep\n   */\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return this[utils.NATIVE_PREFIX + 'cloneNode'](deep);\n    } else {\n      const n = this[utils.NATIVE_PREFIX + 'cloneNode'](false);\n      // Attribute nodes historically had childNodes, but they have later\n      // been removed from the spec.\n      // Make sure we do not do a deep clone on them for old browsers (IE11)\n      if (deep && n.nodeType !== Node.ATTRIBUTE_NODE) {\n        let c$ = this[utils.SHADY_PREFIX + 'childNodes'];\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i][utils.SHADY_PREFIX + 'cloneNode'](true);\n          n[utils.SHADY_PREFIX + 'appendChild'](nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  /**\n   * @this {Node}\n   * @param {Object=} options\n   */\n  // TODO(sorvell): implement `options` e.g. `{ composed: boolean }`\n  getRootNode(options) { // eslint-disable-line no-unused-vars\n    if (!this || !this.nodeType) {\n      return;\n    }\n    const nodeData = ensureShadyDataForNode(this);\n    let root = nodeData.ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(this)) {\n        root = this;\n        nodeData.ownerShadyRoot = root;\n      } else {\n        let parent = this[utils.SHADY_PREFIX + 'parentNode'];\n        root = parent ? parent[utils.SHADY_PREFIX + 'getRootNode'](options) : this;\n        // memo-ize result for performance but only memo-ize\n        // result if node is in the document. This avoids a problem where a root\n        // can be cached while an element is inside a fragment.\n        // If this happens and we cache the result, the value can become stale\n        // because for perf we avoid processing the subtree of added fragments.\n        if (document.documentElement[utils.NATIVE_PREFIX + 'contains'](this)) {\n          nodeData.ownerShadyRoot = root;\n        }\n      }\n\n    }\n    return root;\n  },\n\n  /** @this {Node} */\n  contains(node) {\n    return utils.contains(this, node);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\n/**\n * @param {Node} node\n * @param {Function} matcher\n * @param {Function=} halter\n */\nexport function query(node, matcher, halter) {\n  let list = [];\n  queryElements(node[utils.SHADY_PREFIX + 'childNodes'], matcher,\n    halter, list);\n  return list;\n}\n\nfunction queryElements(elements, matcher, halter, list) {\n  for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n    if (c.nodeType === Node.ELEMENT_NODE &&\n        queryElement(c, matcher, halter, list)) {\n      return true;\n    }\n  }\n}\n\nfunction queryElement(node, matcher, halter, list) {\n  let result = matcher(node);\n  if (result) {\n    list.push(node);\n  }\n  if (halter && halter(result)) {\n    return result;\n  }\n  queryElements(node[utils.SHADY_PREFIX + 'childNodes'], matcher,\n    halter, list);\n}\n\n// Needed on Element, DocumentFragment, Document\nexport const ParentNodePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get firstElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.firstChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'firstChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'firstElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get lastElementChild() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.lastChild !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'lastChild'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'lastElementChild'];\n    }\n  },\n\n  /** @this {Element} */\n  get children() {\n    if (!utils.isTrackingLogicalChildNodes(this)) {\n      return this[utils.NATIVE_PREFIX + 'children'];\n    }\n    return utils.createPolyfilledHTMLCollection(Array.prototype.filter.call(\n        this[utils.SHADY_PREFIX + 'childNodes'], function(n) {\n      return (n.nodeType === Node.ELEMENT_NODE);\n    }));\n  },\n\n  /** @this {Element} */\n  get childElementCount() {\n    let children = this[utils.SHADY_PREFIX + 'children'];\n    if(children) {\n      return children.length;\n    }\n    return 0;\n  }\n\n});\n\nexport const QueryPatches = utils.getOwnPropertyDescriptors({\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   */\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  /**\n   * @this {Element}\n   * @param  {string} selector\n   * @param  {boolean} useNative\n   */\n  // TODO(sorvell): `useNative` option relies on native querySelectorAll and\n  // misses distributed nodes, see\n  // https://github.com/webcomponents/shadydom/pull/210#issuecomment-361435503\n  querySelectorAll(selector, useNative) {\n    if (useNative) {\n      const o = Array.prototype.slice.call(this[utils.NATIVE_PREFIX + 'querySelectorAll'](selector));\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      return o.filter(e => e[utils.SHADY_PREFIX + 'getRootNode']() == root);\n    }\n    return query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  }\n\n});\n\n// Create a custom `ParentNodeDocumentOrFragment` that optionally does not\n// mixin querySelector/All; this is a performance optimization.\nexport const ParentNodeDocumentOrFragmentPatches = utils.settings.preferPerformance ?\n  Object.assign({}, ParentNodePatches) : ParentNodePatches;\n\nObject.assign(ParentNodePatches, QueryPatches);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport { query } from './ParentNode.js';\n\nexport const DocumentOrFragmentPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {Element}\n   * @param {string} id\n   */\n  getElementById(id) {\n    if (id === '') {\n      return null;\n    }\n    let result = query(this, function(n) {\n      return n.id == id;\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {ownerShadyRootForNode} from '../attach-shadow.js';\n\nfunction getDocumentActiveElement() {\n  if (utils.settings.hasDescriptors) {\n    return document[utils.NATIVE_PREFIX + 'activeElement'];\n  } else {\n    return document.activeElement;\n  }\n}\n\nexport const DocumentOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Document|ShadowRoot} */\n  get activeElement() {\n    let active = getDocumentActiveElement();\n    // In IE11, activeElement might be an empty object if the document is\n    // contained in an iframe.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10998788/\n    if (!active || !active.nodeType) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(this));\n    if (this !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (this.host === active ||\n          !this.host[utils.NATIVE_PREFIX + 'contains'](active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== this) {\n      active = activeRoot.host;\n      activeRoot = ownerShadyRootForNode(active);\n    }\n    if (this === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === this ? active : null;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {getInnerHTML} from '../innerHTML.js';\nimport {clearNode} from './Node.js';\n\n/** @type {!Document} */\nconst inertDoc = document.implementation.createHTMLDocument('inert');\n\nexport const ElementOrShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get innerHTML() {\n    if (utils.isTrackingLogicalChildNodes(this)) {\n      const content = this.localName === 'template' ?\n      /** @type {HTMLTemplateElement} */(this).content : this;\n      return getInnerHTML(content, (e) => e[utils.SHADY_PREFIX + 'childNodes']);\n    } else {\n      return this[utils.NATIVE_PREFIX + 'innerHTML'];\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set innerHTML(value) {\n    if (this.localName === 'template') {\n      this[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n    } else {\n      clearNode(this);\n      const containerName = this.localName || 'div';\n      let htmlContainer;\n      if (!this.namespaceURI || this.namespaceURI === inertDoc.namespaceURI) {\n        htmlContainer = inertDoc.createElement(containerName);\n      } else {\n        htmlContainer = inertDoc.createElementNS(this.namespaceURI, containerName);\n      }\n      if (utils.settings.hasDescriptors) {\n        htmlContainer[utils.NATIVE_PREFIX + 'innerHTML'] = value;\n      } else {\n        htmlContainer.innerHTML = value;\n      }\n      let firstChild;\n      while ((firstChild = htmlContainer[utils.SHADY_PREFIX + 'firstChild'])) {\n        this[utils.SHADY_PREFIX + 'insertBefore'](firstChild);\n      }\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nexport const ShadowRootPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  addEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    optionsOrCapture.__shadyTarget = this;\n    this.host[utils.SHADY_PREFIX + 'addEventListener'](type, fn, optionsOrCapture);\n  },\n\n  /**\n   * @this {ShadowRoot}\n   * @param {string} type\n   * @param {Function} fn\n   * @param {Object|boolean=} optionsOrCapture\n   */\n  removeEventListener(type, fn, optionsOrCapture) {\n    if (typeof optionsOrCapture !== 'object') {\n      optionsOrCapture = {\n        capture: Boolean(optionsOrCapture)\n      }\n    }\n    optionsOrCapture.__shadyTarget = this;\n    this.host[utils.SHADY_PREFIX + 'removeEventListener'](type, fn, optionsOrCapture);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {NodePatches} from './patches/Node.js';\nimport {OutsideDescriptors, InsideDescriptors} from './patch-instances.js';\nimport {ParentNodePatches} from './patches/ParentNode.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {ShadowRootPatches} from './patches/ShadowRoot.js';\n\n/**\n * @param {!Object} proto\n * @param {string=} prefix\n */\nconst patchShadyAccessors = (proto, prefix) => {\n  utils.patchProperties(proto, ShadowRootPatches, prefix);\n  utils.patchProperties(proto, DocumentOrShadowRootPatches, prefix);\n  utils.patchProperties(proto, ElementOrShadowRootPatches, prefix);\n  // We ensure ParentNode accessors since these do not exist in Edge/IE on DocumentFragments.\n  utils.patchProperties(proto, ParentNodePatches, prefix);\n  // Ensure `shadowRoot` has basic descriptors when we cannot rely\n  // on them coming from DocumentFragment.\n  //\n  // Case 1, noPatching: Because we want noPatch ShadyRoots to have native property\n  // names so that they do not have to be wrapped...\n  // When we do *not* patch Node/DocumentFragment.prototype\n  // we must manually install those properties on ShadyRoot's prototype.\n  // Note, it's important to only install these in this mode so as not to stomp\n  // over CustomElements polyfill's patches on Node/DocumentFragment methods.\n  if (utils.settings.noPatch && !prefix) {\n    utils.patchProperties(proto, NodePatches, prefix);\n    utils.patchProperties(proto, DocumentOrFragmentPatches, prefix);\n  // Case 2, bad descriptors: Ensure accessors are on ShadowRoot.\n  // These descriptors are normally used for instance patching but because\n  // ShadyRoot can always be patched, just do it to the prototype.\n  } else if (!utils.settings.hasDescriptors) {\n    utils.patchProperties(proto, OutsideDescriptors);\n    utils.patchProperties(proto, InsideDescriptors);\n  }\n}\n\nexport const patchShadyRoot = (proto) => {\n  proto.__proto__ = DocumentFragment.prototype;\n\n  // patch both prefixed and not, even when noPatch == true.\n  patchShadyAccessors(proto, utils.SHADY_PREFIX);\n  patchShadyAccessors(proto);\n\n  // Ensure native properties are all safely wrapped since ShadowRoot is not an\n  // actual DocumentFragment instance.\n  Object.defineProperties(proto, {\n    nodeType: {\n      value: Node.DOCUMENT_FRAGMENT_NODE,\n      configurable: true\n    },\n    nodeName: {\n      value: '#document-fragment',\n      configurable: true\n    },\n    nodeValue: {\n      value: null,\n      configurable: true\n    }\n  });\n\n  // make undefined\n  [\n    'localName',\n    'namespaceURI',\n    'prefix'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      value: undefined,\n      configurable: true\n    });\n  });\n\n  // defer properties to host\n  [\n    'ownerDocument',\n    'baseURI',\n    'isConnected'\n  ].forEach((prop) => {\n    Object.defineProperty(proto, prop, {\n      /** @this {ShadowRoot} */\n      get() {\n        return this.host[prop];\n      },\n      configurable: true\n    });\n  });\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport {calculateSplices} from './array-splice.js';\nimport * as utils from './utils.js';\nimport {enqueue} from './flush.js';\nimport {ensureShadyDataForNode, shadyDataForNode} from './shady-data.js';\nimport {recordChildNodes} from './link-nodes.js';\nimport {patchShadyRoot} from './patch-shadyRoot.js';\n\n// Do not export this object. It must be passed as the first argument to the\n// ShadyRoot constructor in `attachShadow` to prevent the constructor from\n// throwing. This prevents the user from being able to manually construct a\n// ShadyRoot (i.e. `new ShadowRoot()`).\nconst ShadyRootConstructionToken = {};\n\nconst CATCHALL_NAME = '__catchall';\nconst SHADYROOT_NAME = 'ShadyRoot';\n\nconst MODE_CLOSED = 'closed';\n\nlet isRendering = utils.settings['deferConnectionCallbacks'] && document.readyState === 'loading';\nlet rootRendered;\n\nfunction ancestorList(node) {\n  let ancestors = [];\n  do {\n    ancestors.unshift(node);\n  } while ((node = node[utils.SHADY_PREFIX + 'parentNode']));\n  return ancestors;\n}\n\n/**\n * @extends {ShadowRoot}\n */\nclass ShadyRoot {\n\n  constructor(token, host, options) {\n    if (token !== ShadyRootConstructionToken) {\n      throw new TypeError('Illegal constructor');\n    }\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this._localName = SHADYROOT_NAME;\n    // root <=> host\n    this.host = host;\n    /** @type {!string|undefined} */\n    this.mode = options && options.mode;\n    recordChildNodes(host);\n    const hostData = ensureShadyDataForNode(host);\n    /** @type {!ShadyRoot} */\n    hostData.root = this;\n    hostData.publicRoot = this.mode !== MODE_CLOSED ? this : null;\n    // setup root\n    const rootData = ensureShadyDataForNode(this);\n    rootData.firstChild = rootData.lastChild =\n        rootData.parentNode = rootData.nextSibling =\n        rootData.previousSibling = null;\n    rootData.childNodes = [];\n    // state flags\n    this._renderPending = false;\n    this._hasRendered = false;\n    // marsalled lazily\n    this._slotList = null;\n    /** @type {Object<string, Array<HTMLSlotElement>>} */\n    this._slotMap = null;\n    this._pendingSlots = null;\n    // NOTE: optimization flag, only require an asynchronous render\n    // to record parsed children if flag is not set.\n    if (utils.settings['preferPerformance']) {\n      let n;\n      while ((n = host[utils.NATIVE_PREFIX + 'firstChild'])) {\n        host[utils.NATIVE_PREFIX + 'removeChild'](n);\n      }\n    } else {\n      this._asyncRender();\n    }\n  }\n\n  _asyncRender() {\n    if (!this._renderPending) {\n      this._renderPending = true;\n      enqueue(() => this._render());\n    }\n  }\n\n  // returns the oldest renderPending ancestor root.\n  _getPendingDistributionRoot() {\n    let renderRoot;\n    let root = this;\n    while (root) {\n      if (root._renderPending) {\n        renderRoot = root;\n      }\n      root = root._getDistributionParent();\n    }\n    return renderRoot;\n  }\n\n  // Returns the shadyRoot `this.host` if `this.host`\n  // has children that require distribution.\n  _getDistributionParent() {\n    let root = this.host[utils.SHADY_PREFIX + 'getRootNode']();\n    if (!utils.isShadyRoot(root)) {\n      return;\n    }\n    const nodeData = shadyDataForNode(this.host);\n    if (nodeData && nodeData.__childSlotCount > 0) {\n      return root;\n    }\n  }\n\n  // Renders the top most render pending shadowRoot in the distribution tree.\n  // This is safe because when a distribution parent renders, all children render.\n  _render() {\n    // If this root is not pending, it needs no rendering work. Any pending\n    // parent that needs to render wll cause this root to render.\n    const root = this._renderPending && this._getPendingDistributionRoot();\n    if (root) {\n      root._renderSelf();\n    }\n  }\n\n  _flushInitial() {\n    if (!this._hasRendered && this._renderPending) {\n      this._render();\n    }\n  }\n\n  /** @override */\n  _renderSelf() {\n    // track rendering state.\n    const wasRendering = isRendering;\n    isRendering = true;\n    this._renderPending = false;\n    if (this._slotList) {\n      this._distribute();\n      this._compose();\n    }\n    // NOTE: optimization flag, only process parsed children\n    // if optimization flag is not set.\n    // on initial render remove any undistributed children.\n    if (!utils.settings['preferPerformance'] && !this._hasRendered) {\n      const c$ = this.host[utils.SHADY_PREFIX + 'childNodes'];\n      for (let i=0, l=c$.length; i < l; i++) {\n        const child = c$[i];\n        const data = shadyDataForNode(child);\n        if (child[utils.NATIVE_PREFIX + 'parentNode'] === this.host &&\n            (child.localName === 'slot' || !data.assignedSlot)) {\n          this.host[utils.NATIVE_PREFIX + 'removeChild'](child);\n        }\n      }\n    }\n    this._hasRendered = true;\n    isRendering = wasRendering;\n    if (rootRendered) {\n      rootRendered();\n    }\n  }\n\n  _distribute() {\n    this._validateSlots();\n    // capture # of previously assigned nodes to help determine if dirty.\n    for (let i=0, slot; i < this._slotList.length; i++) {\n      slot = this._slotList[i];\n      this._clearSlotAssignedNodes(slot);\n    }\n    // distribute host children.\n    for (let n=this.host[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n      this._distributeNodeToSlot(n);\n    }\n    // fallback content, slotchange, and dirty roots\n    for (let i=0; i < this._slotList.length; i++) {\n      const slot = this._slotList[i];\n      const slotData = shadyDataForNode(slot);\n      // distribute fallback content\n      if (!slotData.assignedNodes.length) {\n        for (let n=slot[utils.SHADY_PREFIX + 'firstChild']; n; n=n[utils.SHADY_PREFIX + 'nextSibling']) {\n          this._distributeNodeToSlot(n, slot);\n        }\n      }\n      const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n      const slotParentRoot = slotParentData && slotParentData.root;\n      if (slotParentRoot && (slotParentRoot._hasInsertionPoint() || slotParentRoot._renderPending)) {\n        slotParentRoot._renderSelf();\n      }\n      this._addAssignedToFlattenedNodes(slotData.flattenedNodes,\n        slotData.assignedNodes);\n      let prevAssignedNodes = slotData._previouslyAssignedNodes;\n      if (prevAssignedNodes) {\n        for (let i=0; i < prevAssignedNodes.length; i++) {\n          shadyDataForNode(prevAssignedNodes[i])._prevAssignedSlot = null;\n        }\n        slotData._previouslyAssignedNodes = null;\n        // dirty if previously less assigned nodes than previously assigned.\n        if (prevAssignedNodes.length > slotData.assignedNodes.length) {\n          slotData.dirty = true;\n        }\n      }\n      /* Note: A slot is marked dirty whenever a node is newly assigned to it\n      or a node is assigned to a different slot (done in `_distributeNodeToSlot`)\n      or if the number of nodes assigned to the slot has decreased (done above);\n      */\n      if (slotData.dirty) {\n        slotData.dirty = false;\n        this._fireSlotChange(slot);\n      }\n    }\n  }\n\n  /**\n   * Distributes given `node` to the appropriate slot based on its `slot`\n   * attribute. If `forcedSlot` is given, then the node is distributed to the\n   * `forcedSlot`.\n   * Note: slot to which the node is assigned will be marked dirty for firing\n   * `slotchange`.\n   * @param {Node} node\n   * @param {Node=} forcedSlot\n   *\n   */\n  _distributeNodeToSlot(node, forcedSlot) {\n    const nodeData = ensureShadyDataForNode(node);\n    let oldSlot = nodeData._prevAssignedSlot;\n    nodeData._prevAssignedSlot = null;\n    let slot = forcedSlot;\n    if (!slot) {\n      let name = node[utils.SHADY_PREFIX + 'slot'] || CATCHALL_NAME;\n      const list = this._slotMap[name];\n      slot = list && list[0];\n    }\n    if (slot) {\n      const slotData = ensureShadyDataForNode(slot);\n      slotData.assignedNodes.push(node);\n      nodeData.assignedSlot = slot;\n    } else {\n      nodeData.assignedSlot = undefined;\n    }\n    if (oldSlot !== nodeData.assignedSlot) {\n      if (nodeData.assignedSlot) {\n        ensureShadyDataForNode(nodeData.assignedSlot).dirty = true;\n      }\n    }\n  }\n\n  /**\n   * Clears the assignedNodes tracking data for a given `slot`. Note, the current\n   * assigned node data is tracked (via _previouslyAssignedNodes and\n   * _prevAssignedSlot) to see if `slotchange` should fire. This data may be out\n   *  of date at this time because the assigned nodes may have already been\n   * distributed to another root. This is ok since this data is only used to\n   * track changes.\n   * @param {HTMLSlotElement} slot\n   */\n  _clearSlotAssignedNodes(slot) {\n    const slotData = shadyDataForNode(slot);\n    let n$ = slotData.assignedNodes;\n    slotData.assignedNodes = [];\n    slotData.flattenedNodes = [];\n    slotData._previouslyAssignedNodes = n$;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = shadyDataForNode(n$[i]);\n        n._prevAssignedSlot = n.assignedSlot;\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n.assignedSlot === slot) {\n          n.assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  _addAssignedToFlattenedNodes(flattened, assigned) {\n    for (let i=0, n; (i<assigned.length) && (n=assigned[i]); i++) {\n      if (n.localName == 'slot') {\n        const nestedAssigned = shadyDataForNode(n).assignedNodes;\n        if (nestedAssigned && nestedAssigned.length) {\n          this._addAssignedToFlattenedNodes(flattened, nestedAssigned);\n        }\n      } else {\n        flattened.push(assigned[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(slot) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    slot[utils.NATIVE_PREFIX + 'dispatchEvent'](new Event('slotchange'));\n    const slotData = shadyDataForNode(slot);\n    if (slotData.assignedSlot) {\n      this._fireSlotChange(slotData.assignedSlot);\n    }\n  }\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  // NOTE: here we only compose parents of <slot> elements and not the\n  // shadowRoot into the host. The latter is performend via a fast path\n  // in the `logical-mutation`.insertBefore.\n  _compose() {\n    const slots = this._slotList;\n    let composeList = [];\n    for (let i=0; i < slots.length; i++) {\n      const parent = slots[i][utils.SHADY_PREFIX + 'parentNode'];\n      /* compose node only if:\n        (1) parent does not have a shadowRoot since shadowRoot has already\n        composed into the host\n        (2) we're not already composing it\n        [consider (n^2) but rare better than Set]\n      */\n      const parentData = shadyDataForNode(parent);\n      if (!(parentData && parentData.root) &&\n        composeList.indexOf(parent) < 0) {\n        composeList.push(parent);\n      }\n    }\n    for (let i=0; i < composeList.length; i++) {\n      const node = composeList[i];\n      const targetNode = node === this ? this.host : node;\n      this._updateChildNodes(targetNode, this._composeNode(node));\n    }\n  }\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      // Note: if we see a slot here, the nodes are guaranteed to need to be\n      // composed here. This is because if there is redistribution, it has\n      // already been handled by this point.\n      if (this._isInsertionPoint(child)) {\n        let flattenedNodes = shadyDataForNode(child).flattenedNodes;\n        for (let j = 0; j < flattenedNodes.length; j++) {\n          let distributedNode = flattenedNodes[j];\n            children.push(distributedNode);\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  }\n\n  _isInsertionPoint(node) {\n      return node.localName == 'slot';\n    }\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = Array.prototype.slice.call(container[utils.NATIVE_PREFIX + 'childNodes']);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (n[utils.NATIVE_PREFIX + 'parentNode'] === container) {\n          container[utils.NATIVE_PREFIX + 'removeChild'](n);\n        }\n        // TODO(sorvell): avoid the need for splicing here.\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        container[utils.NATIVE_PREFIX + 'insertBefore'](n, next);\n        composed.splice(j, 0, n);\n      }\n    }\n  }\n\n  _ensureSlotData() {\n    this._pendingSlots = this._pendingSlots || [];\n    this._slotList = this._slotList || [];\n    this._slotMap = this._slotMap || {};\n  }\n\n  _addSlots(slots) {\n    this._ensureSlotData();\n    this._pendingSlots.push(...slots);\n  }\n\n  _validateSlots() {\n    if (this._pendingSlots && this._pendingSlots.length) {\n      this._mapSlots(this._pendingSlots);\n      this._pendingSlots = [];\n    }\n  }\n\n  /**\n   * Adds the given slots. Slots are maintained in an dom-ordered list.\n   * In addition a map of name to slot is updated.\n   */\n  _mapSlots(slots) {\n    let slotNamesToSort;\n    for (let i=0; i < slots.length; i++) {\n      const slot = slots[i];\n      // ensure insertionPoints's and their parents have logical dom info.\n      // save logical tree info\n      // a. for shadyRoot\n      // b. for insertion points (fallback)\n      // c. for parents of insertion points\n      recordChildNodes(slot);\n      const slotParent = slot[utils.SHADY_PREFIX + 'parentNode'];\n      recordChildNodes(slotParent);\n      const slotParentData = shadyDataForNode(slotParent);\n      slotParentData.__childSlotCount = (slotParentData.__childSlotCount || 0) + 1;\n      let name = this._nameForSlot(slot);\n      if (this._slotMap[name]) {\n        slotNamesToSort = slotNamesToSort || {};\n        slotNamesToSort[name] = true;\n        this._slotMap[name].push(slot);\n      } else {\n        this._slotMap[name] = [slot];\n      }\n      this._slotList.push(slot);\n    }\n    if (slotNamesToSort) {\n      for (let n in slotNamesToSort) {\n        this._slotMap[n] = this._sortSlots(this._slotMap[n]);\n      }\n    }\n  }\n\n  _nameForSlot(slot) {\n    const name = slot['name'] || slot.getAttribute('name') || CATCHALL_NAME;\n    slot.__slotName = name;\n    return name;\n  }\n\n  /**\n   * Slots are kept in an ordered list. Slots with the same name\n   * are sorted here by tree order.\n   */\n  _sortSlots(slots) {\n    // NOTE: Cannot use `compareDocumentPosition` because it's not polyfilled,\n    // but the code here could be used to polyfill the preceeding/following info\n    // in `compareDocumentPosition`.\n    return slots.sort((a, b) => {\n      let listA = ancestorList(a);\n      let listB = ancestorList(b);\n      for (var i=0; i < listA.length; i++) {\n        let nA = listA[i];\n        let nB = listB[i];\n        if (nA !== nB) {\n          let c$ = Array.from(nA[utils.SHADY_PREFIX + 'parentNode'][utils.SHADY_PREFIX + 'childNodes']);\n          return c$.indexOf(nA) - c$.indexOf(nB);\n        }\n      }\n    });\n  }\n\n  /**\n   * Removes from tracked slot data any slots contained within `container` and\n   * then updates the tracked data (_slotList and _slotMap).\n   * Any removed slots also have their `assignedNodes` removed from comopsed dom.\n   */\n  _removeContainedSlots(container) {\n    if (!this._slotList) {\n      return;\n    }\n    this._validateSlots();\n    let didRemove;\n    const map = this._slotMap;\n    for (let n in map) {\n      const slots = map[n];\n      for (let i=0; i < slots.length; i++) {\n        const slot = slots[i];\n        if (utils.contains(container, slot)) {\n          slots.splice(i, 1);\n          const x = this._slotList.indexOf(slot);\n          if (x >= 0) {\n            this._slotList.splice(x, 1);\n            const slotParentData = shadyDataForNode(slot[utils.SHADY_PREFIX + 'parentNode']);\n            if (slotParentData && slotParentData.__childSlotCount) {\n              slotParentData.__childSlotCount--;\n            }\n          }\n          i--;\n          this._removeFlattenedNodes(slot);\n          didRemove = true;\n        }\n      }\n    }\n    return didRemove;\n  }\n\n  _updateSlotName(slot) {\n    if (!this._slotList) {\n      return;\n    }\n    // make sure slotMap is initialized with this slot\n    this._validateSlots();\n    const oldName = slot.__slotName;\n    const name = this._nameForSlot(slot);\n    if (name === oldName) {\n      return;\n    }\n    // remove from existing tracking\n    let slots = this._slotMap[oldName];\n    const i = slots.indexOf(slot);\n    if (i >= 0) {\n      slots.splice(i, 1);\n    }\n    // add to new location and sort if nedessary\n    let list = this._slotMap[name] || (this._slotMap[name] = []);\n    list.push(slot);\n    if (list.length > 1) {\n      this._slotMap[name] = this._sortSlots(list);\n    }\n  }\n\n  _removeFlattenedNodes(slot) {\n    const data = shadyDataForNode(slot);\n    let n$ = data.flattenedNodes;\n    if (n$) {\n      for (let i=0; i<n$.length; i++) {\n        let node = n$[i];\n        let parent = node[utils.NATIVE_PREFIX + 'parentNode'];\n        if (parent) {\n          parent[utils.NATIVE_PREFIX + 'removeChild'](node);\n        }\n      }\n    }\n    data.flattenedNodes = [];\n    data.assignedNodes = [];\n  }\n\n  _hasInsertionPoint() {\n    this._validateSlots();\n    return Boolean(this._slotList && this._slotList.length);\n  }\n}\n\npatchShadyRoot(ShadyRoot.prototype);\nexport {ShadyRoot};\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport const attachShadow = (host, options) => {\n  if (!host) {\n    throw new Error('Must provide a host.');\n  }\n  if (!options) {\n    throw new Error('Not enough arguments.');\n  }\n  return new ShadyRoot(ShadyRootConstructionToken, host, options);\n}\n\n// Mitigate connect/disconnect spam by wrapping custom element classes.\nif (window['customElements'] && utils.settings.inUse && !utils.settings['preferPerformance']) {\n\n  // process connect/disconnect after roots have rendered to avoid\n  // issues with reaction stack.\n  let connectMap = new Map();\n  rootRendered = function() {\n    // allow elements to connect\n    // save map state (without needing polyfills on IE11)\n    const r = [];\n    connectMap.forEach((v, k) => {\n      r.push([k, v]);\n    });\n    connectMap.clear();\n    for (let i=0; i < r.length; i++) {\n      const e = r[i][0], value = r[i][1];\n      if (value) {\n        e.__shadydom_connectedCallback();\n      } else {\n        e.__shadydom_disconnectedCallback();\n      }\n    }\n  }\n\n  // Document is in loading state and flag is set (deferConnectionCallbacks)\n  // so process connection stack when `readystatechange` fires.\n  if (isRendering) {\n    document.addEventListener('readystatechange', () => {\n      isRendering = false;\n      rootRendered();\n    }, {once: true});\n  }\n\n  /*\n   * (1) elements can only be connected/disconnected if they are in the expected\n   * state.\n   * (2) never run connect/disconnect during rendering to avoid reaction stack issues.\n   */\n  const ManageConnect = (base, connected, disconnected) => {\n    let counter = 0;\n    const connectFlag = `__isConnected${counter++}`;\n    if (connected || disconnected) {\n\n      /** @this {!HTMLElement} */\n      base.prototype.connectedCallback = base.prototype.__shadydom_connectedCallback = function() {\n        // if rendering defer connected\n        // otherwise connect only if we haven't already\n        if (isRendering) {\n          connectMap.set(this, true);\n        } else if (!this[connectFlag]) {\n          this[connectFlag] = true;\n          if (connected) {\n            connected.call(this);\n          }\n        }\n      }\n\n      /** @this {!HTMLElement} */\n      base.prototype.disconnectedCallback = base.prototype.__shadydom_disconnectedCallback = function() {\n        // if rendering, cancel a pending connection and queue disconnect,\n        // otherwise disconnect only if a connection has been allowed\n        if (isRendering) {\n          // This is necessary only because calling removeChild\n          // on a node that requires distribution leaves it in the DOM tree\n          // until distribution.\n          // NOTE: remember this is checking the patched isConnected to determine\n          // if the node is in the logical tree.\n          if (!this.isConnected) {\n            connectMap.set(this, false);\n          }\n        } else if (this[connectFlag]) {\n          this[connectFlag] = false;\n          if (disconnected) {\n            disconnected.call(this);\n          }\n        }\n      }\n    }\n\n    return base;\n  }\n\n  const define = window['customElements']['define'];\n  // NOTE: Instead of patching customElements.define,\n  // re-define on the CustomElementRegistry.prototype.define\n  // for Safari 10 compatibility (it's flakey otherwise).\n  Object.defineProperty(window['CustomElementRegistry'].prototype, 'define', {\n    value: function(name, constructor) {\n      const connected = constructor.prototype.connectedCallback;\n      const disconnected = constructor.prototype.disconnectedCallback;\n      define.call(window['customElements'], name,\n          ManageConnect(constructor, connected, disconnected));\n      // unpatch connected/disconnected on class; custom elements tears this off\n      // so the patch is maintained, but if the user calls these methods for\n      // e.g. testing, they will be as expected.\n      constructor.prototype.connectedCallback = connected;\n      constructor.prototype.disconnectedCallback = disconnected;\n    }\n  });\n\n}\n\n/** @return {!ShadyRoot|undefined} */\nexport const ownerShadyRootForNode = (node) => {\n  let root = node[utils.SHADY_PREFIX + 'getRootNode']();\n  if (utils.isShadyRoot(root)) {\n    return root;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {eventPropertyNames} from './patch-events.js';\n\n/** @implements {IWrapper} */\nclass Wrapper {\n\n  /** @param {!Node} node */\n  constructor(node) {\n    this.node = node;\n  }\n\n  // node\n  addEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'addEventListener'](name, fn, options);\n  }\n\n  removeEventListener(name, fn, options) {\n    return this.node[utils.SHADY_PREFIX + 'removeEventListener'](name, fn, options);\n  }\n\n  appendChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'appendChild'](node);\n  }\n\n  insertBefore(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'insertBefore'](node, ref_node);\n  }\n\n  removeChild(node) {\n    return this.node[utils.SHADY_PREFIX + 'removeChild'](node);\n  }\n\n  replaceChild(node, ref_node) {\n    return this.node[utils.SHADY_PREFIX + 'replaceChild'](node, ref_node);\n  }\n\n  cloneNode(deep) {\n    return this.node[utils.SHADY_PREFIX + 'cloneNode'](deep);\n  }\n\n  getRootNode(options) {\n    return this.node[utils.SHADY_PREFIX + 'getRootNode'](options);\n  }\n\n  contains(node) {\n    return this.node[utils.SHADY_PREFIX + 'contains'](node);\n  }\n\n  dispatchEvent(event) {\n    return this.node[utils.SHADY_PREFIX + 'dispatchEvent'](event);\n  }\n\n  // element\n  setAttribute(name, value) {\n    this.node[utils.SHADY_PREFIX + 'setAttribute'](name, value);\n  }\n\n  // NOTE: not needed, just here for balance\n  getAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'getAttribute'](name);\n  }\n\n  // NOTE: not needed, just here for balance\n  hasAttribute(name) {\n    return this.node[utils.NATIVE_PREFIX + 'hasAttribute'](name);\n  }\n\n  removeAttribute(name) {\n    this.node[utils.SHADY_PREFIX + 'removeAttribute'](name);\n  }\n\n  attachShadow(options) {\n    return this.node[utils.SHADY_PREFIX + 'attachShadow'](options);\n  }\n\n  /** @return {!Node|undefined} */\n  get activeElement() {\n    if (utils.isShadyRoot(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) {\n      const e = this.node[utils.SHADY_PREFIX + 'activeElement'];\n      return e;\n    }\n  }\n\n  /**\n   * Installed for compatibility with browsers (older Chrome/Safari) that do\n   * not have a configurable `activeElement` accessor. Enables noPatch and\n   * patch mode both to consistently use ShadyDOM.wrap(document)._activeElement.\n   * @override\n   * @return {!Node|undefined}\n   */\n  get _activeElement() {\n    return this.activeElement;\n  }\n\n  // NOTE: not needed, just here for balance\n  /** @override */\n  focus() {\n    this.node[utils.NATIVE_PREFIX + 'focus']();\n  }\n\n  blur() {\n    this.node[utils.SHADY_PREFIX + 'blur']();\n  }\n\n  // document\n  importNode(node, deep) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'importNode'](node, deep);\n    }\n  }\n\n  getElementById(id) {\n    if (this.node.nodeType === Node.DOCUMENT_NODE) {\n      return this.node[utils.SHADY_PREFIX + 'getElementById'](id);\n    }\n  }\n\n  // query\n  querySelector(selector) {\n    return this.node[utils.SHADY_PREFIX + 'querySelector'](selector);\n  }\n\n  querySelectorAll(selector, useNative) {\n    return this.node[utils.SHADY_PREFIX + 'querySelectorAll'](selector, useNative);\n  }\n\n  // slot\n  assignedNodes(options) {\n    if (this.node.localName === 'slot') {\n      return this.node[utils.SHADY_PREFIX + 'assignedNodes'](options);\n    }\n  }\n\n  get host() {\n    if (utils.isShadyRoot(this.node)) {\n      return /** @type {!ShadowRoot} */(this.node).host;\n    }\n  }\n\n  get parentNode() {\n    return this.node[utils.SHADY_PREFIX + 'parentNode'];\n  }\n\n  get firstChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstChild'];\n  }\n\n  get lastChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastChild'];\n  }\n\n  get nextSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextSibling'];\n  }\n\n  get previousSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousSibling'];\n  }\n\n  get childNodes() {\n    return this.node[utils.SHADY_PREFIX + 'childNodes'];\n  }\n\n  get parentElement() {\n    return this.node[utils.SHADY_PREFIX + 'parentElement'];\n  }\n\n  get firstElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'firstElementChild'];\n  }\n\n  get lastElementChild() {\n    return this.node[utils.SHADY_PREFIX + 'lastElementChild'];\n  }\n\n  get nextElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'nextElementSibling'];\n  }\n\n  get previousElementSibling() {\n    return this.node[utils.SHADY_PREFIX + 'previousElementSibling'];\n  }\n\n  get children() {\n    return this.node[utils.SHADY_PREFIX + 'children'];\n  }\n\n  get childElementCount() {\n    return this.node[utils.SHADY_PREFIX + 'childElementCount'];\n  }\n\n  get shadowRoot() {\n    return this.node[utils.SHADY_PREFIX + 'shadowRoot'];\n  }\n\n  get assignedSlot() {\n    return this.node[utils.SHADY_PREFIX + 'assignedSlot'];\n  }\n\n  get isConnected() {\n    return this.node[utils.SHADY_PREFIX + 'isConnected'];\n  }\n\n  get innerHTML() {\n    return this.node[utils.SHADY_PREFIX + 'innerHTML'];\n  }\n\n  set innerHTML(value) {\n    this.node[utils.SHADY_PREFIX + 'innerHTML'] = value;\n  }\n\n  get textContent() {\n    return this.node[utils.SHADY_PREFIX + 'textContent'];\n  }\n\n  set textContent(value) {\n    this.node[utils.SHADY_PREFIX + 'textContent'] = value;\n  }\n\n  get slot() {\n    return this.node[utils.SHADY_PREFIX + 'slot'];\n  }\n\n  set slot(value) {\n    this.node[utils.SHADY_PREFIX + 'slot'] = value;\n  }\n\n}\n\neventPropertyNames.forEach(name => {\n  Object.defineProperty(Wrapper.prototype, name, {\n    /** @this {Wrapper} */\n    get() {\n      return this.node[utils.SHADY_PREFIX + name];\n    },\n    /** @this {Wrapper} */\n    set(value) {\n      this.node[utils.SHADY_PREFIX + name] = value;\n    },\n    configurable: true\n  });\n\n});\n\nexport {Wrapper};\n\nconst wrapperMap = new WeakMap();\n\nexport function wrap(obj) {\n  if (utils.isShadyRoot(obj) || obj instanceof Wrapper) {\n    return obj;\n  }\n  let wrapper = wrapperMap.get(obj)\n  if (!wrapper) {\n    wrapper = new Wrapper(obj);\n    wrapperMap.set(obj, wrapper);\n  }\n  return wrapper;\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {flush} from '../flush.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const EventTargetPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  dispatchEvent(event) {\n    flush();\n    return this[utils.NATIVE_PREFIX + 'dispatchEvent'](event);\n  },\n\n  addEventListener,\n\n  removeEventListener\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotablePatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Node} */\n  get assignedSlot() {\n    // Force any parent's shadowRoot to flush so that distribution occurs\n    // and this node has an assignedSlot.\n    const parent = this[utils.SHADY_PREFIX + 'parentNode'];\n    const ownerRoot = parent && parent[utils.SHADY_PREFIX + 'shadowRoot'];\n    if (ownerRoot) {\n      ownerRoot._render();\n    }\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.assignedSlot || null;\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {scopeClassAttribute} from '../style-scoping.js';\nimport {shadyDataForNode} from '../shady-data.js';\nimport {attachShadow, ownerShadyRootForNode} from '../attach-shadow.js';\n\nconst doc = window.document;\n\n/**\n * Should be called whenever an attribute changes. If the `slot` attribute\n * changes, provokes rendering if necessary. If a `<slot>` element's `name`\n * attribute changes, updates the root's slot map and renders.\n * @param {Node} node\n * @param {string} name\n */\nfunction distributeAttributeChange(node, name) {\n  if (name === 'slot') {\n    const parent = node[utils.SHADY_PREFIX + 'parentNode'];\n    if (utils.hasShadowRootWithSlot(parent)) {\n      shadyDataForNode(parent).root._asyncRender();\n    }\n  } else if (node.localName === 'slot' && name === 'name') {\n    let root = ownerShadyRootForNode(node);\n    if (root) {\n      root._updateSlotName(node);\n      root._asyncRender();\n    }\n  }\n}\n\nexport const ElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {Element} */\n  get previousElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.previousSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'previousSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'previousSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'previousElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get nextElementSibling() {\n    const nodeData = shadyDataForNode(this);\n    if (nodeData && nodeData.nextSibling !== undefined) {\n      let n = this[utils.SHADY_PREFIX + 'nextSibling'];\n      while (n && n.nodeType !== Node.ELEMENT_NODE) {\n        n = n[utils.SHADY_PREFIX + 'nextSibling'];\n      }\n      return n;\n    } else {\n      return this[utils.NATIVE_PREFIX + 'nextElementSibling'];\n    }\n  },\n\n  /** @this {Element} */\n  get slot() {\n    return this.getAttribute('slot');\n  },\n\n  /** @this {Element} */\n  set slot(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('slot', value);\n  },\n\n  // Note: Can be patched on element prototype on all browsers.\n  // Must be patched on instance on browsers that support native Shadow DOM\n  // but do not have builtin accessors (old Chrome).\n  /** @this {Element} */\n  get shadowRoot() {\n    const nodeData = shadyDataForNode(this);\n    return nodeData && nodeData.publicRoot || null;\n  },\n\n  /** @this {Element} */\n  get className() {\n    return this.getAttribute('class') || '';\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} value\n   */\n  set className(value) {\n    this[utils.SHADY_PREFIX + 'setAttribute']('class', value);\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttribute(attr, value) {\n    if (this.ownerDocument !== doc) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n    } else if (!scopeClassAttribute(this, attr, value)) {\n      this[utils.NATIVE_PREFIX + 'setAttribute'](attr, value);\n      distributeAttributeChange(this, attr);\n    }\n  },\n\n  /**\n   * @this {Element}\n   * @param {string} attr\n   */\n  removeAttribute(attr) {\n    this[utils.NATIVE_PREFIX + 'removeAttribute'](attr);\n    distributeAttributeChange(this, attr);\n  },\n\n  /**\n   * @this {Element}\n   * @param {!{mode: string}} options\n   */\n  attachShadow(options) {\n    return attachShadow(this, options);\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {eventPropertyNames} from '../patch-events.js';\nimport {shadyDataForNode, ensureShadyDataForNode} from '../shady-data.js';\n\nexport const HTMLElementPatches = utils.getOwnPropertyDescriptors({\n\n  /** @this {HTMLElement} */\n  blur() {\n    const nodeData = shadyDataForNode(this);\n    let root = nodeData && nodeData.root;\n    let shadowActive = root && root.activeElement;\n    if (shadowActive) {\n      shadowActive[utils.SHADY_PREFIX + 'blur']();\n    } else {\n      this[utils.NATIVE_PREFIX + 'blur']();\n    }\n  }\n\n});\n\neventPropertyNames.forEach(property => {\n  HTMLElementPatches[property] = {\n    /** @this {HTMLElement} */\n    set: function(fn) {\n      const shadyData = ensureShadyDataForNode(this);\n      const eventName = property.substring(2);\n      shadyData.__onCallbackListeners[property] && this.removeEventListener(eventName, shadyData.__onCallbackListeners[property]);\n      this[utils.SHADY_PREFIX + 'addEventListener'](eventName, fn);\n      shadyData.__onCallbackListeners[property] = fn;\n    },\n    /** @this {HTMLElement} */\n    get() {\n      const shadyData = shadyDataForNode(this);\n      return shadyData && shadyData.__onCallbackListeners[property];\n    },\n    configurable: true\n  };\n});\n\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\nimport {shadyDataForNode} from '../shady-data.js';\n\nexport const SlotPatches = utils.getOwnPropertyDescriptors({\n\n  /**\n   * @this {HTMLSlotElement}\n   * @param {Object=} options\n   */\n  assignedNodes(options) {\n    if (this.localName === 'slot') {\n      // Force any containing shadowRoot to flush so that distribution occurs\n      // and this node has assignedNodes.\n      const root = this[utils.SHADY_PREFIX + 'getRootNode']();\n      if (root && utils.isShadyRoot(root)) {\n        root._render();\n      }\n      const nodeData = shadyDataForNode(this);\n      return nodeData ?\n        ((options && options.flatten ? nodeData.flattenedNodes :\n          nodeData.assignedNodes) || []) :\n        [];\n    }\n  }\n\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from '../utils.js';\n\nconst doc = window.document;\n\nexport const DocumentPatches = utils.getOwnPropertyDescriptors({\n\n  // note: Though not technically correct, we fast path `importNode`\n  // when called on a node not owned by the main document.\n  // This allows, for example, elements that cannot\n  // contain custom elements and are therefore not likely to contain shadowRoots\n  // to cloned natively. This is a fairly significant performance win.\n  /**\n   * @this {Document}\n   * @param {Node} node\n   * @param {boolean} deep\n   */\n  importNode(node, deep) {\n    // A template element normally has no children with shadowRoots, so make\n    // sure we always make a deep copy to correctly construct the template.content\n    if (node.ownerDocument !== doc || node.localName === 'template') {\n      return this[utils.NATIVE_PREFIX + 'importNode'](node, deep);\n    }\n    let n = this[utils.NATIVE_PREFIX + 'importNode'](node, false);\n    if (deep) {\n      let c$ = node[utils.SHADY_PREFIX + 'childNodes'];\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = this[utils.SHADY_PREFIX + 'importNode'](c$[i], true);\n        n[utils.SHADY_PREFIX + 'appendChild'](nc);\n      }\n    }\n    return n;\n  }\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport * as utils from '../utils.js';\nimport {addEventListener, removeEventListener} from '../patch-events.js';\n\nexport const WindowPatches = utils.getOwnPropertyDescriptors({\n\n  // NOTE: ensure these methods are bound to `window` so that `this` is correct\n  // when called directly from global context without a receiver; e.g.\n  // `addEventListener(...)`.\n  addEventListener: addEventListener.bind(window),\n\n  removeEventListener: removeEventListener.bind(window)\n\n});","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport * as utils from './utils.js';\nimport {EventTargetPatches} from './patches/EventTarget.js';\nimport {NodePatches} from './patches/Node.js';\nimport {SlotablePatches} from './patches/Slotable.js';\nimport {ParentNodePatches, ParentNodeDocumentOrFragmentPatches} from './patches/ParentNode.js';\nimport {ElementPatches} from './patches/Element.js';\nimport {ElementOrShadowRootPatches} from './patches/ElementOrShadowRoot.js';\nimport {HTMLElementPatches} from './patches/HTMLElement.js';\nimport {SlotPatches} from './patches/Slot.js';\nimport {DocumentOrFragmentPatches} from './patches/DocumentOrFragment.js';\nimport {DocumentOrShadowRootPatches} from './patches/DocumentOrShadowRoot.js';\nimport {DocumentPatches} from './patches/Document.js';\nimport {WindowPatches} from './patches/Window.js';\n\n// Some browsers (IE/Edge) have non-standard HTMLElement accessors.\nconst NonStandardHTMLElement = {};\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement')) {\n  NonStandardHTMLElement.parentElement = NodePatches.parentElement;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'contains')) {\n  NonStandardHTMLElement.contains = NodePatches.contains;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'children')) {\n  NonStandardHTMLElement.children = ParentNodePatches.children;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML')) {\n  NonStandardHTMLElement.innerHTML = ElementOrShadowRootPatches.innerHTML;\n}\n\nif (Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'className')) {\n  NonStandardHTMLElement.className = ElementPatches.className;\n}\n\n// Avoid patching `innerHTML` if it does not exist on Element (IE)\n// and we can patch accessors (hasDescriptors).\nconst ElementShouldHaveInnerHTML = !utils.settings.hasDescriptors || 'innerHTML' in Element.prototype;\n\n// setup patching\nconst patchMap = {\n  EventTarget: [EventTargetPatches],\n  Node: [NodePatches, !window.EventTarget ? EventTargetPatches : null],\n  Text: [SlotablePatches],\n  Element: [ElementPatches, ParentNodePatches, SlotablePatches,\n    ElementShouldHaveInnerHTML ? ElementOrShadowRootPatches : null,\n    !window.HTMLSlotElement ? SlotPatches : null],\n  HTMLElement: [HTMLElementPatches, NonStandardHTMLElement],\n  HTMLSlotElement: [SlotPatches],\n  DocumentFragment: [ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches],\n  Document: [DocumentPatches, ParentNodeDocumentOrFragmentPatches, DocumentOrFragmentPatches, DocumentOrShadowRootPatches],\n  Window: [WindowPatches]\n}\n\nconst getPatchPrototype = (name) => window[name] && window[name].prototype;\n\n// Note, must avoid patching accessors on prototypes when descriptors are not correct\n// because the CustomElements polyfill checks if these exist before patching instances.\n// CustomElements polyfill *only* cares about these accessors.\nconst disallowedNativePatches = utils.settings.hasDescriptors ? null : ['innerHTML', 'textContent'];\n\n/** @param {string=} prefix */\nexport const applyPatches = (prefix) => {\n  const disallowed = prefix ? null : disallowedNativePatches;\n  for (let p in patchMap) {\n    const proto = getPatchPrototype(p);\n    patchMap[p].forEach(patch => proto && patch &&\n        utils.patchProperties(proto, patch, prefix, disallowed));\n  }\n}\n\nexport const addShadyPrefixedProperties = () => {\n  // perform shady patches\n  applyPatches(utils.SHADY_PREFIX);\n\n  // install `_activeElement` because some browsers (older Chrome/Safari) do not have\n  // a 'configurable' `activeElement` accesssor.\n  const descriptor = DocumentOrShadowRootPatches.activeElement;\n  Object.defineProperty(document, '_activeElement', descriptor);\n\n  // On Window, we're patching `addEventListener` which is a weird auto-bound\n  // property that is not directly on the Window prototype.\n  utils.patchProperties(Window.prototype, WindowPatches, utils.SHADY_PREFIX);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\nimport * as utils from './utils.js';\nimport {flush, enqueue} from './flush.js';\nimport {observeChildren, unobserveChildren, filterMutations} from './observe-changes.js';\nimport {addNativePrefixedProperties, nativeMethods, nativeTree} from './patch-native.js';\nimport {patchInsideElementAccessors, patchOutsideElementAccessors} from './patch-instances.js';\nimport {patchEvents, patchClick, composedPath} from './patch-events.js';\nimport {ShadyRoot} from './attach-shadow.js';\nimport {wrap, Wrapper} from './wrapper.js';\nimport {addShadyPrefixedProperties, applyPatches} from './patch-prototypes.js';\n\nif (utils.settings.inUse) {\n  let ShadyDOM = {\n    // TODO(sorvell): remove when Polymer does not depend on this.\n    'inUse': utils.settings.inUse,\n    // NOTE: old browsers without prototype accessors (very old Chrome\n    // and Safari) need manually patched accessors to properly set\n    // `innerHTML` and `textContent` when an element is:\n    // (1) inside a shadowRoot\n    // (2) does not have special (slot) children itself\n    // (3) and setting the property needs to provoke distribution (because\n    // a nested slot is added/removed)\n    'patch': (node) => {\n      patchInsideElementAccessors(node);\n      patchOutsideElementAccessors(node);\n      return node;\n    },\n    'isShadyRoot': utils.isShadyRoot,\n    'enqueue': enqueue,\n    'flush': flush,\n    'flushInitial': (root) => {\n      root._flushInitial();\n    },\n    'settings': utils.settings,\n    'filterMutations': filterMutations,\n    'observeChildren': observeChildren,\n    'unobserveChildren': unobserveChildren,\n    // Set to true to defer native custom elements connection until the\n    // document has fully parsed. This enables custom elements that create\n    // shadowRoots to be defined while the document is loading. Elements\n    // customized as they are created by the parser will successfully\n    // render with this flag on.\n    'deferConnectionCallbacks': utils.settings['deferConnectionCallbacks'],\n    // Set to true to speed up the polyfill slightly at the cost of correctness\n    // * does not patch querySelector/All on Document or DocumentFragment\n    // * does not wrap connected/disconnected callbacks to de-dup these\n    // when using native customElements\n    // * does not wait to process children of elements with shadowRoots\n    // meaning shadowRoots should not be created while an element is parsing\n    // (e.g. if a custom element that creates a shadowRoot is defined before\n    // a candidate element in the document below it.\n    'preferPerformance': utils.settings['preferPerformance'],\n    // Integration point with ShadyCSS to disable styling MutationObserver,\n    // as ShadyDOM will now handle dynamic scoping.\n    'handlesDynamicScoping': true,\n    'wrap': utils.settings.noPatch ? wrap : (n) => n,\n    'Wrapper': Wrapper,\n    'composedPath': composedPath,\n    // Set to true to avoid patching regular platform property names. When set,\n    // Shadow DOM compatible behavior is only available when accessing DOM\n    // API using `ShadyDOM.wrap`, e.g. `ShadyDOM.wrap(element).shadowRoot`.\n    // This setting provides a small performance boost, but requires all DOM API\n    // access that requires Shadow DOM behavior to be proxied via `ShadyDOM.wrap`.\n    'noPatch': utils.settings.noPatch,\n    'nativeMethods': nativeMethods,\n    'nativeTree': nativeTree\n  };\n\n  window['ShadyDOM'] = ShadyDOM;\n\n  // Modifies native prototypes for Node, Element, etc. to\n  // make native platform behavior available at prefixed names, e.g.\n  // `utils.NATIVE_PREFIX + 'firstChild'` or `__shady_native_firstChild`.\n  // This allows the standard names to be safely patched while retaining the\n  // ability for native behavior to be used. This polyfill manipulates DOM\n  // by using this saved native behavior.\n  // Note, some browsers do not have proper element descriptors for\n  // accessors; in this case, native behavior for these accessors is simulated\n  // via a TreeWalker.\n  addNativePrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to make ShadowDOM\n  // behavior available at prefixed names, e.g.\n  // `utils.SHADY_PREFIX + 'firstChild` or `__shady_firstChild`. This is done\n  // so this polyfill can perform Shadow DOM style DOM manipulation.\n  // Because patching normal platform property names is optional, these prefixed\n  // names are used internally.\n  addShadyPrefixedProperties();\n\n  // Modifies native prototypes for Node, Element, etc. to patch\n  // regular platform property names to have Shadow DOM compatible API behavior.\n  // This applies the utils.SHADY_PREFIX behavior to normal names. For example,\n  // if `noPatch` is not set, then `el.__shady_firstChild` is equivalent to\n  // `el.firstChild`.\n  // NOTE, on older browsers (old Chrome/Safari) native accessors cannot be\n  // patched on prototypes (e.g. Node.prototype.firstChild cannot be modified).\n  // On these browsers, instance level patching is performed where needed; this\n  // instance patching is only done when `noPatch` is *not* set.\n  if (!utils.settings.noPatch) {\n    applyPatches();\n    // Patch click event behavior only if we're patching\n    patchClick()\n  }\n\n  // For simplicity, patch events unconditionally.\n  // Patches the event system to have Shadow DOM compatible behavior (e.g.\n  // event retargeting). When `noPatch` is set, retargeting is only available\n  // when adding event listeners and dispatching events via `ShadyDOM.wrap`\n  // (e.g. `ShadyDOM.wrap(element).addEventListener(...)`).\n  patchEvents();\n\n  window.ShadowRoot = /** @type {function(new:ShadowRoot)} */(ShadyRoot);\n}\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patch(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Node} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ? rawElement.content : rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nlet nativeCssVariables_;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables_ = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\n/** @type {string | undefined} */\nexport let cssBuild;\nif (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {\n  cssBuild = window.ShadyCSS.cssBuild;\n}\n\n/** @type {boolean} */\nexport const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables_ = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n// Hack for type error under new type inference which doesn't like that\n// nativeCssVariables is updated in a function and assigns the type\n// `function(): ?` instead of `boolean`.\nexport const nativeCssVariables = /** @type {boolean} */(nativeCssVariables_);","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables, cssBuild} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nexport function findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @type {function(*):*}\n */\nexport const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || ((node) => node);\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}\n\n/**\n * Split a selector separated by commas into an array in a smart way\n * @param {string} selector\n * @return {!Array<string>}\n */\nexport function splitSelectorList(selector) {\n  const parts = [];\n  let part = '';\n  for (let i = 0; i >= 0 && i < selector.length; i++) {\n    // A selector with parentheses will be one complete part\n    if (selector[i] === '(') {\n      // find the matching paren\n      const end = findMatchingParen(selector, i);\n      // push the paren block into the part\n      part += selector.slice(i, end + 1);\n      // move the index to after the paren block\n      i = end;\n    } else if (selector[i] === ',') {\n      parts.push(part);\n      part = '';\n    } else {\n      part += selector[i];\n    }\n  }\n  // catch any pieces after the last comma\n  if (part) {\n    parts.push(part);\n  }\n  return parts;\n}\n\nconst CSS_BUILD_ATTR = 'css-build';\n\n/**\n * Return the polymer-css-build \"build type\" applied to this element\n *\n * @param {!HTMLElement} element\n * @return {string} Can be \"\", \"shady\", or \"shadow\"\n */\nexport function getCssBuild(element) {\n  if (cssBuild !== undefined) {\n    return /** @type {string} */(cssBuild);\n  }\n  if (element.__cssBuild === undefined) {\n    // try attribute first, as it is the common case\n    const attrValue = element.getAttribute(CSS_BUILD_ATTR);\n    if (attrValue) {\n      element.__cssBuild = attrValue;\n    } else {\n      const buildComment = getBuildComment(element);\n      if (buildComment !== '') {\n        // remove build comment so it is not needlessly copied into every element instance\n        removeBuildComment(element);\n      }\n      element.__cssBuild = buildComment;\n    }\n  }\n  return element.__cssBuild || '';\n}\n\n/**\n * Check if the given element, either a <template> or <style>, has been processed\n * by polymer-css-build.\n *\n * If so, then we can make a number of optimizations:\n * - polymer-css-build will decompose mixins into individual CSS Custom Properties,\n * so the ApplyShim can be skipped entirely.\n * - Under native ShadowDOM, the style text can just be copied into each instance\n * without modification\n * - If the build is \"shady\" and ShadyDOM is in use, the styling does not need\n * scoping beyond the shimming of CSS Custom Properties\n *\n * @param {!HTMLElement} element\n * @return {boolean}\n */\nexport function elementHasBuiltCss(element) {\n  return getCssBuild(element) !== '';\n}\n\n/**\n * For templates made with tagged template literals, polymer-css-build will\n * insert a comment of the form `<!--css-build:shadow-->`\n *\n * @param {!HTMLElement} element\n * @return {string}\n */\nexport function getBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  if (buildComment instanceof Comment) {\n    const commentParts = buildComment.textContent.trim().split(':');\n    if (commentParts[0] === CSS_BUILD_ATTR) {\n      return commentParts[1];\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the css build status is optimal, and do no unneeded work.\n *\n * @param {string=} cssBuild CSS build status\n * @return {boolean} css build is optimal or not\n */\nexport function isOptimalCssBuild(cssBuild = '') {\n  // CSS custom property shim always requires work\n  if (cssBuild === '' || !nativeCssVariables) {\n    return false;\n  }\n  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';\n}\n\n/**\n * @param {!HTMLElement} element\n */\nfunction removeBuildComment(element) {\n  const buildComment = element.localName === 'template' ?\n      /** @type {!HTMLTemplateElement} */ (element).content.firstChild :\n      element.firstChild;\n  buildComment.parentNode.removeChild(buildComment);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  /**\n   * Given a node and scope name, add a scoping class to each node\n   * in the tree. This facilitates transforming css into scoped rules.\n   * @param {!Node} node\n   * @param {string} scope\n   * @param {boolean=} shouldRemoveScope\n   * @deprecated\n   */\n  dom(node, scope, shouldRemoveScope) {\n    const fn = (node) => {\n      this.element(node, scope || '', shouldRemoveScope);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * Given a node and scope name, add a scoping class to each node in the tree.\n   * @param {!Node} node\n   * @param {string} scope\n   */\n  domAddScope(node, scope) {\n    const fn = (node) => {\n      this.element(node, scope || '');\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {!Node} startNode\n   * @param {!function(!Node)} transformer\n   */\n  _transformDom(startNode, transformer) {\n    if (startNode.nodeType === Node.ELEMENT_NODE) {\n      transformer(startNode)\n    }\n    let c$;\n    if (startNode.localName === 'template') {\n      const template = /** @type {!HTMLTemplateElement} */ (startNode);\n      // In case the template is in svg context, fall back to the node\n      // since it won't be an HTMLTemplateElement with a .content property\n      c$ = (template.content || template._content || template).childNodes;\n    } else {\n      c$ = /** @type {!ParentNode} */ (startNode).children ||\n          startNode.childNodes;\n    }\n    if (c$) {\n      for (let i = 0; i < c$.length; i++) {\n        this._transformDom(c$[i], transformer);\n      }\n    }\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} scope\n   * @param {?=} shouldRemoveScope\n   */\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  /**\n   * Given a node, replace the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   * @param {string} newScope\n   */\n  domReplaceScope(node, oldScope, newScope) {\n    const fn = (node) => {\n      this.element(node, oldScope, true);\n      this.element(node, newScope);\n    };\n    this._transformDom(node, fn);\n  }\n  /**\n   * Given a node, remove the scoping class to each subnode in the tree.\n   * @param {!Node} node\n   * @param {string} oldScope\n   */\n  domRemoveScope(node, oldScope) {\n    const fn = (node) => {\n      this.element(node, oldScope || '', true);\n    };\n    this._transformDom(node, fn);\n  }\n\n  /**\n   * @param {?} element\n   * @param {?} styleRules\n   * @param {?=} callback\n   * @param {string=} cssBuild\n   * @param {string=} cssText\n   * @return {string}\n   */\n  elementStyles(element, styleRules, callback, cssBuild = '', cssText = '') {\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    if (cssText === '') {\n      if (nativeShadow || cssBuild === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        let {is, typeExtension} = StyleUtil.getIsExtends(element);\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = StyleUtil.splitSelectorList(rule['selector']);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.filter((part) => Boolean(part)).join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n  /**\n   * Preserve `:matches()` selectors by replacing them with MATCHES_REPLACMENT\n   * and returning an array of `:matches()` selectors.\n   * Use `_replacesMatchesPseudo` to replace the `:matches()` parts\n   *\n   * @param {string} selector\n   * @return {{selector: string, matches: !Array<string>}}\n   */\n  _preserveMatchesPseudo(selector) {\n    /** @type {!Array<string>} */\n    const matches = [];\n    let match;\n    while ((match = selector.match(MATCHES))) {\n      const start = match.index;\n      const end = StyleUtil.findMatchingParen(selector, start);\n      if (end === -1) {\n        throw new Error(`${match.input} selector missing ')'`)\n      }\n      const part = selector.slice(start, end + 1);\n      selector = selector.replace(part, MATCHES_REPLACEMENT);\n      matches.push(part);\n    }\n    return {selector, matches};\n  }\n\n  /**\n   * Replace MATCHES_REPLACMENT character with the given set of `:matches()`\n   * selectors.\n   *\n   * @param {string} selector\n   * @param {!Array<string>} matches\n   * @return {string}\n   */\n  _replaceMatchesPseudo(selector, matches) {\n    const parts = selector.split(MATCHES_REPLACEMENT);\n    return matches.reduce((acc, cur, idx) => acc + cur + parts[idx + 1], parts[0]);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    // Preserve selectors like `:-webkit-any` so that SIMPLE_SELECTOR_SEP does\n    // not get confused by spaces inside the pseudo selector\n    const isMatches = MATCHES.test(selector);\n    /** @type {!Array<string>} */\n    let matches;\n    if (isMatches) {\n      ({selector, matches} = this._preserveMatchesPseudo(selector));\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    // replace `:matches()` selectors\n    if (isMatches) {\n      selector = this._replaceMatchesPseudo(selector, matches);\n    }\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    const attributes = selector.split(/(\\[.+?\\])/);\n\n    const output = [];\n    for (let i = 0; i < attributes.length; i++) {\n      // Do not attempt to transform any attribute selector content\n      if ((i % 2) === 1) {\n        output.push(attributes[i]);\n      } else {\n        const part = attributes[i];\n\n        if (!(part === '' && i === attributes.length - 1)) {\n          let p$ = part.split(PSEUDO_PREFIX);\n          p$[0] += scope;\n          output.push(p$.join(PSEUDO_PREFIX));\n        }\n      }\n    }\n\n    return output.join('');\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    if (selector.match(HOST)) {\n      // remove ':host' type selectors in document rules\n      return '';\n    } else if (selector.match(SLOTTED)) {\n      return this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR)\n    } else {\n      return this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }\n}\n\nconst NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nconst SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nconst COMPLEX_SELECTOR_SEP = ',';\nconst SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nconst SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nconst HOST = ':host';\nconst ROOT = ':root';\nconst SLOTTED = '::slotted';\nconst SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nconst HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nconst SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nconst DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nconst CSS_CLASS_PREFIX = '.';\nconst PSEUDO_PREFIX = ':';\nconst CLASS = 'class';\nconst SELECTOR_NO_MATCH = 'should_not_match';\nconst MATCHES = /:(?:matches|any|-(?:webkit|moz)-any)/;\nconst MATCHES_REPLACEMENT = '\\u{e000}';\n\nexport default new StyleTransformer()\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Object} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\n/* eslint-disable-next-line no-self-assign */\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {};\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          this.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @param {string} cssBuild\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules, cssBuild) {\n    let hostProps = {}, rootProps = {};\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, (rule) => {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      this.whenHostOrRootRule(scope, rule, cssBuild, (info) => {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            this.collectProperties(rule, hostProps);\n          } else {\n            this.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let {styleRules: rules, cssBuild} = StyleInfo.get(element);\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    }, cssBuild);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = StyleUtil.splitSelectorList(selector);\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow, disableRuntime} from './style-settings.js';\n\n/** @type {!Object<string, !Node>} */\nconst placeholderMap = {};\n\n/**\n * @param {string} elementName\n * @return {Node}\n */\nexport function getStylePlaceholder(elementName) {\n  return placeholderMap[elementName] || null;\n}\n\n/**\n * @param {string} elementName\n */\nexport function ensureStylePlaceholder(elementName) {\n  if (!placeholderMap[elementName]) {\n    placeholderMap[elementName] = applyStylePlaceHolder(elementName);\n  }\n}\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow && !disableRuntime) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    ensureStylePlaceholder(name);\n    origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends, elementHasBuiltCss, wrap} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nfunction getClasses(element) {\n  if (element.classList && element.classList.value) {\n    return element.classList.value;\n  } else {\n    // NOTE: className is patched to remove scoping classes in ShadyDOM\n    // use getAttribute('class') instead, which is unpatched\n    return element.getAttribute('class') || '';\n  }\n}\n\nconst scopeRegExp = new RegExp(`${StyleTransformer.SCOPE_NAME}\\\\s*([^\\\\s]*)`);\n\n/**\n * @param {!Element} element\n * @return {string}\n */\nexport function getCurrentScope(element) {\n  const match = getClasses(element).match(scopeRegExp);\n  if (match) {\n    return match[1];\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {!Node} node\n */\nexport function getOwnerScope(node) {\n  const ownerRoot = wrap(node).getRootNode();\n  if (ownerRoot === node || ownerRoot === node.ownerDocument) {\n    return '';\n  }\n  const host = /** @type {!ShadowRoot} */(ownerRoot).host;\n  if (!host) {\n    // this may actually be a document fragment\n    return '';\n  }\n  return getIsExtends(host).is;\n}\n\n/**\n * @param {!Element} element\n */\nexport function ensureCorrectScope(element) {\n  const currentScope = getCurrentScope(element);\n  const ownerRoot = wrap(element).getRootNode();\n  if (ownerRoot === element) {\n    return;\n  }\n  if (currentScope && ownerRoot === element.ownerDocument) {\n    // node was scoped, but now is in document\n    StyleTransformer.domRemoveScope(element, currentScope);\n  } else if (ownerRoot instanceof ShadowRoot) {\n    const ownerScope = getOwnerScope(element);\n    if (ownerScope !== currentScope) {\n      // node was scoped, but not by its current owner\n      StyleTransformer.domReplaceScope(element, currentScope, ownerScope);\n    }\n  }\n}\n\n/**\n * @param {!HTMLElement|!HTMLDocument} element\n */\nexport function ensureCorrectSubtreeScoping(element) {\n  // find unscoped subtree nodes\n  const unscopedNodes = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n    element, `:not(.${StyleTransformer.SCOPE_NAME})`);\n\n  for (let j = 0; j < unscopedNodes.length; j++) {\n    // it's possible, during large batch inserts, that nodes that aren't\n    // scoped within the current scope were added.\n    // To make sure that any unscoped nodes that were inserted in the current batch are correctly styled,\n    // query all unscoped nodes and force their style-scope to be applied.\n    // This could happen if a sub-element appended an unscoped node in its shadowroot and this function\n    // runs on a parent element of the host of that unscoped node:\n    // parent-element -> element -> unscoped node\n    // Here unscoped node should have the style-scope element, not parent-element.\n    const unscopedNode = unscopedNodes[j];\n    const scopeForPreviouslyUnscopedNode = getOwnerScope(unscopedNode);\n    if (scopeForPreviouslyUnscopedNode) {\n      StyleTransformer.element(unscopedNode, scopeForPreviouslyUnscopedNode);\n    }\n  }\n}\n\n/**\n * @param {HTMLElement} el\n * @return {boolean}\n */\nfunction isElementWithBuiltCss(el) {\n  if (el.localName === 'style' || el.localName === 'template') {\n    return elementHasBuiltCss(el);\n  }\n  return false;\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      // If this element has built css, we must not remove scoping as this node\n      // will be used as a template or style without re - applying scoping as an optimization\n      if (currentScope && root === n.ownerDocument && !isElementWithBuiltCss(n)) {\n        StyleTransformer.domRemoveScope(n, currentScope);\n      } else if (root instanceof ShadowRoot) {\n        const newScope = getOwnerScope(n);\n        // rescope current node and subtree if necessary\n        if (newScope !== currentScope) {\n          StyleTransformer.domReplaceScope(n, currentScope, newScope);\n        }\n        // make sure all the subtree elements are scoped correctly\n        ensureCorrectSubtreeScoping(n);\n      }\n    }\n  }\n}\n\n// if native Shadow DOM is being used, or ShadyDOM handles dynamic scoiping, do not activate the MutationObserver\nif (!nativeShadow && !(window['ShadyDOM'] && window['ShadyDOM']['handlesDynamicScoping'])) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n    // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;\n    documentWait(() => {\n      if (window['ShadyCSS']['flushCustomStyles']) {\n        window['ShadyCSS']['flushCustomStyles']();\n      }\n    })\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\n/* eslint-disable no-self-assign */\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n/* eslint-enable no-self-assign */\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport const CustomStyleInterfaceInterface = {};\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables, disableRuntime} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport {ensureStylePlaceholder, getStylePlaceholder} from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush, getOwnerScope, getCurrentScope} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/** @type {!Object<string, string>} */\nconst adoptedCssTextMap = {};\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = /** @type {!HTMLElement} */(document.documentElement);\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    /** @type {?Object} */\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    this.prepareTemplateDom(template, elementName);\n    this.prepareTemplateStyles(template, elementName, typeExtension);\n  }\n  /**\n   * Prepare styling for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplateStyles(template, elementName, typeExtension) {\n    if (template._prepared || disableRuntime) {\n      return;\n    }\n    // style placeholders are only used when ShadyDOM is active\n    if (!nativeShadow) {\n      ensureStylePlaceholder(elementName);\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = StyleUtil.getCssBuild(template);\n    const optimalBuild = StyleUtil.isOptimalCssBuild(cssBuild);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n    };\n    let cssText = this._gatherStyles(template) + (adoptedCssTextMap[elementName] || '');\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    if (!optimalBuild) {\n      let hasMixins = !cssBuild && detectMixin(cssText);\n      let ast = parse(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n    }\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst']);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = getStylePlaceholder(elementName);\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder, cssBuild, optimalBuild ? cssText : '');\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n\n  /**\n   * @param {!Array<string>} cssTextArray\n   * @param {string} elementName\n   */\n  prepareAdoptedCssText(cssTextArray, elementName) {\n    adoptedCssTextMap[elementName] = cssTextArray.join(' ');\n  }\n  /**\n   * Prepare template for the given element type\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    if (disableRuntime) {\n      return;\n    }\n    const cssBuild = StyleUtil.getCssBuild(template);\n    if (!nativeShadow && cssBuild !== 'shady' && !template._domPrepared) {\n      template._domPrepared = true;\n      StyleTransformer.domAddScope(template.content, elementName);\n    }\n  }\n  /**\n   * @param {!{is: string, extends: (string|undefined)}} info\n   * @param {!StyleNode} rules\n   * @param {DocumentFragment} shadowroot\n   * @param {Node} placeholder\n   * @param {string} cssBuild\n   * @param {string=} cssText\n   * @return {?HTMLStyleElement}\n   */\n  _generateStaticStyle(info, rules, shadowroot, placeholder, cssBuild, cssText) {\n    cssText = StyleTransformer.elementStyles(info, rules, null, cssBuild, cssText);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n    return null;\n  }\n  _prepareHost(host) {\n    const {is, typeExtension} = StyleUtil.getIsExtends(host);\n    const placeholder = getStylePlaceholder(is);\n    const template = templateMap[is];\n    if (!template) {\n      return;\n    }\n    const ast = template['_styleAst'];\n    const ownStylePropertyNames = template._ownPropertyNames;\n    const cssBuild = StyleUtil.getCssBuild(template);\n    const styleInfo = new StyleInfo(\n      ast,\n      placeholder,\n      ownStylePropertyNames,\n      is,\n      typeExtension,\n      cssBuild\n    );\n    StyleInfo.set(host, styleInfo);\n    return styleInfo;\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = /** @type {!Object} */ (window.ShadyCSS.ApplyShim);\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    if (disableRuntime) {\n      return;\n    }\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    // bail if custom styles are built optimally\n    if (StyleUtil.isOptimalCssBuild(this._documentOwnerStyleInfo.cssBuild)) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n      if (this._elementsHaveApplied) {\n        // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n        this.styleDocument();\n      }\n    } else if (!this._documentOwnerStyleInfo.cssBuild) {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    if (disableRuntime) {\n      if (overrideProps) {\n        if (!StyleInfo.get(host)) {\n          StyleInfo.set(host, new StyleInfo(null));\n        }\n        const styleInfo = /** @type {!StyleInfo} */(StyleInfo.get(host));\n        this._mixOverrideStyleProps(styleInfo, overrideProps);\n        this.styleElementNativeVariables(host, styleInfo);\n      }\n      return;\n    }\n    const styleInfo = StyleInfo.get(host) || this._prepareHost(host);\n    // if there is no style info at this point, bail\n    if (!styleInfo) {\n      return;\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      this._mixOverrideStyleProps(styleInfo, overrideProps);\n    }\n    if (!nativeCssVariables) {\n      this.styleElementShimVariables(host, styleInfo);\n    } else {\n      this.styleElementNativeVariables(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!StyleInfo} styleInfo\n   * @param {Object} overrideProps\n   */\n  _mixOverrideStyleProps(styleInfo, overrideProps) {\n    styleInfo.overrideStyleProperties =\n      styleInfo.overrideStyleProperties || {};\n    Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementShimVariables(host, styleInfo) {\n    this.flush();\n    this._updateProperties(host, styleInfo);\n    if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n      this._applyStyleProperties(host, styleInfo);\n    }\n  }\n  /**\n   * @param {!HTMLElement} host\n   * @param {!StyleInfo} styleInfo\n   */\n  styleElementNativeVariables(host, styleInfo) {\n    const { is } = StyleUtil.getIsExtends(host);\n    if (styleInfo.overrideStyleProperties) {\n      updateNativeProperties(host, styleInfo.overrideStyleProperties);\n    }\n    const template = templateMap[is];\n    // bail early if there is no shadowroot for this element\n    if (!template && !this._isRootOwner(host)) {\n      return;\n    }\n    // bail early if the template was built with polymer-css-build\n    if (template && StyleUtil.elementHasBuiltCss(template)) {\n      return;\n    }\n    if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n      // update template\n      if (!ApplyShimUtils.templateIsValidating(template)) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n        template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n        ApplyShimUtils.startValidatingTemplate(template);\n      }\n      // update instance if native shadowdom\n      if (nativeShadow) {\n        let root = host.shadowRoot;\n        if (root) {\n          let style = root.querySelector('style');\n          if (style) {\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n      }\n      styleInfo.styleRules = template['_styleAst'];\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = StyleUtil.wrap(node).getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host) || this._prepareHost(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    // style owner has not updated properties yet\n    // go up the chain and force property update,\n    // except if the owner is the document\n    if (owner !== this._documentOwner && !ownerProperties) {\n      this._updateProperties(owner, ownerStyleInfo);\n      ownerProperties = ownerStyleInfo.styleProperties;\n    }\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules, styleInfo.cssBuild);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    const wrappedHost = StyleUtil.wrap(host);\n    let root = wrappedHost.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren =\n        root && (/** @type {!ParentNode} */ (root).children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = wrappedHost.children || wrappedHost.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    const cssBuild = StyleUtil.getCssBuild(style);\n    if (cssBuild !== this._documentOwnerStyleInfo.cssBuild) {\n      this._documentOwnerStyleInfo.cssBuild = cssBuild;\n    }\n    if (StyleUtil.isOptimalCssBuild(cssBuild)) {\n      return;\n    }\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables && cssBuild === '') {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules['rules'].push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = StyleUtil.wrap(element).getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  scopeNode(node, scope) {\n    StyleTransformer.element(node, scope);\n  }\n  /**\n   * @param {!Element} node\n   * @param {string} scope\n   */\n  unscopeNode(node, scope) {\n    StyleTransformer.element(node, scope, true);\n  }\n  /**\n   * @param {!Node} node\n   * @return {string}\n   */\n  scopeForNode(node) {\n    return getOwnerScope(node);\n  }\n  /**\n   * @param {!Element} node\n   * @return {string}\n   */\n  currentScopeForNode(node) {\n    return getCurrentScope(node);\n  }\n}\n\n/* exports */\n/* eslint-disable no-self-assign */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nScopingShim.prototype['scopeNode'] = ScopingShim.prototype.scopeNode;\nScopingShim.prototype['unscopeNode'] = ScopingShim.prototype.unscopeNode;\nScopingShim.prototype['scopeForNode'] = ScopingShim.prototype.scopeForNode;\nScopingShim.prototype['currentScopeForNode'] = ScopingShim.prototype.currentScopeForNode;\nScopingShim.prototype['prepareAdoptedCssText'] = ScopingShim.prototype.prepareAdoptedCssText;\n/* eslint-enable no-self-assign */\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    /** @type {number} */\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow, cssBuild, disableRuntime} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   */\n  prepareTemplateDom(template, elementName) {\n    scopingShim.prepareTemplateDom(template, elementName);\n  },\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplateStyles(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplateStyles(template, elementName, elementExtends)\n  },\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  flushCustomStyles() {\n    scopingShim.flushCustomStyles();\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow,\n\n  cssBuild: cssBuild,\n\n  disableRuntime: disableRuntime,\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"],"names":["ShadyData","constructor","root","publicRoot","dirty","observer","assignedNodes","assignedSlot","_previouslyAssignedNodes","_prevAssignedSlot","flattenedNodes","ownerShadyRoot","undefined","parentNode","firstChild","lastChild","previousSibling","nextSibling","childNodes","__outsideAccessors","__insideAccessors","__onCallbackListeners","toJSON","ensureShadyDataForNode","node","__shady","shadyDataForNode","settings","window","hasNativeShadowDOM","Boolean","Element","prototype","attachShadow","Node","getRootNode","desc","Object","getOwnPropertyDescriptor","hasDescriptors","configurable","get","inUse","noPatch","preferPerformance","isTrackingLogicalChildNodes","nodeData","isShadyRoot","obj","_localName","hasShadowRootWithSlot","_hasInsertionPoint","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","selector","call","twiddle","document","createTextNode","content","queue","MutationObserver","length","shift","e","textContent","observe","characterData","microtask","callback","push","hasDocumentContains","contains","container","SHADY_PREFIX","getNodeHTMLCollectionName","getAttribute","isValidHTMLCollectionName","name","isNaN","createPolyfilledHTMLCollection","nodes","l","item","index","namedItem","NATIVE_PREFIX","patchProperties","proto","descriptors","prefix","disallowedPatches","newDescriptor","indexOf","value","defineProperty","getOwnPropertyDescriptors","HTMLElement","getOwnPropertyNames","forEach","scheduled","flushList","enqueue","utils","flush","didFlush","AsyncObserver","_scheduled","addedNodes","removedNodes","callbacks","Set","schedule","this","mutations","takeRecords","cb","observeChildren","sd","add","_callback","_observer","_node","unobserveChildren","handle","delete","size","escapeAttrRegExp","escapeDataRegExp","escapeReplace","c","escapeAttr","s","replace","makeSet","arr","set","i","voidElements","plaintextParents","getOuterHTML","nodeType","ELEMENT_NODE","tagName","localName","attrs","attributes","attr","getInnerHTML","TEXT_NODE","data","COMMENT_NODE","console","error","Error","c$","child","nativeMethods","querySelector","querySelectorAll","nativeTree","installNativeAccessor","installNativeMethod","fn","defineNativeAccessors","prop","copyProperties","list","descriptor","nodeWalker","createTreeWalker","NodeFilter","SHOW_ALL","elementWalker","SHOW_ELEMENT","inertDoc","implementation","createHTMLDocument","clearNode","ParentNodeAccessors","ParentNodeMethods","addNativePrefixedProperties","eventProps","EventTarget","Window","currentNode","n","parentElement","DOCUMENT_FRAGMENT_NODE","textWalker","SHOW_TEXT","nextNode","nodeValue","ParentNodeWalkerDescriptors","firstElementChild","lastElementChild","children","childElementCount","previousElementSibling","nextElementSibling","innerHTML","containerName","htmlContainer","namespaceURI","createElementNS","createElement","newContent","HTMLTemplateElement","DocumentFragment","Document","InsideDescriptors","OutsideDescriptors","enumerable","noInstancePatching","patchOutsideElementAccessors","patchInsideElementAccessors","eventWrappersName","Date","now","composedGetter","composedProp","Event","ev","alwaysComposed","unpatchedEvents","getRootNodeWithFallback","eventTarget","pathComposer","startNode","composed","composedPath","current","startRoot","host","event","__composedPath","target","retarget","refNode","path","refNodePath","p$","ancestor","lastRoot","rootIdx","mixinComposedFlag","Base","klazz","type","options","__composed","__proto__","nonBubblingEventsToRetarget","hasRetargeted","__relatedTarget","relatedTarget","fireHandlers","phase","hs","__handlers","__immediatePropagationStopped","retargetNonBubblingEvent","lastFiredRoot","__propagationStopped","AT_TARGET","listenerSettingsEqual","savedListener","capture","once","passive","savedNode","savedType","savedCapture","savedOnce","savedPassive","findListener","wrappers","addEventListener","fnOrObj","optionsOrCapture","handlerType","handleEvent","__shadyTarget","wrapperFn","lastCurrentTargetDesc","patchEvent","eventPhase","BUBBLING_PHASE","stopImmediatePropagation","CAPTURING_PHASE","bubbles","ret","removeEventListener","eventLike","getEventWrappers","idx","splice","EventPatchesDescriptors","isTrusted","currentTarget","__relatedTargetComposedPath","stopPropagation","SHADY_PROTO","SHADY_SOURCE_PROTO","getPrototypeOf","hasOwnProperty","patchedProto","create","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","eventPropertyNames","filter","substring","newSplice","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","calcSplices","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","Math","min","searchLength","equals","sharedPrefix","index1","index2","count","sharedSuffix","ops","distances","j","edits","northWest","west","north","reverse","spliceOperationsFromEditDistances","rowCount","columnCount","Array","calcEditDistances","splices","oldIndex","currentValue","previousValue","linkNode","ref_node","containerData","ref_nodeData","psd","nsd","recordChildNodes","first","previous","scopingShim","getScopingShim","removeShadyScoping","currentScopeName","replaceShadyScoping","newScopeName","oldScopeName","addShadyScoping","currentScopeForNode","treeVisitor","visitorFn","doc","nativeIsConnectedAccessors","nativeIsConnected","removeOwnerShadyRoot","hasCachedOwnerRoot","scheduleObserver","addedNode","removedNode","NodePatches","ownerDocument","documentElement","tc","cn","join","insertBefore","refData","slotsAdded","ownerRoot","ownerShadyRootForNode","allowNativeInsert","needsScoping","currentScopeIsCorrect","correctScope","needsSlotFinding","_addSlots","_asyncRender","resetTo","recordInsertBefore","parentData","firstComposedNode","flattened","adoptNode","appendChild","removeChild","skipUnscoping","preventNativeRemove","removingInsertionPoint","_removeContainedSlots","recordRemoveChild","changeSlotContent","replaceChild","cloneNode","deep","ATTRIBUTE_NODE","nc","parent","query","matcher","halter","queryElements","elements","queryElement","result","ParentNodePatches","QueryPatches","useNative","o","slice","ParentNodeDocumentOrFragmentPatches","assign","DocumentOrFragmentPatches","getElementById","id","DocumentOrShadowRootPatches","active","activeElement","activeRoot","ElementOrShadowRootPatches","ShadowRootPatches","patchShadyAccessors","ShadyRootConstructionToken","CATCHALL_NAME","SHADYROOT_NAME","MODE_CLOSED","rootRendered","isRendering","readyState","ancestorList","ancestors","unshift","ShadyRoot","token","TypeError","mode","hostData","rootData","_renderPending","_hasRendered","_slotList","_slotMap","_pendingSlots","_render","_getPendingDistributionRoot","renderRoot","_getDistributionParent","__childSlotCount","_renderSelf","_flushInitial","wasRendering","_distribute","_compose","_validateSlots","slot","_clearSlotAssignedNodes","_distributeNodeToSlot","slotData","slotParentData","slotParentRoot","_addAssignedToFlattenedNodes","prevAssignedNodes","_fireSlotChange","forcedSlot","oldSlot","n$","assigned","nestedAssigned","slots","composeList","targetNode","_updateChildNodes","_composeNode","_isInsertionPoint","distributedNode","d","next","_ensureSlotData","_mapSlots","slotNamesToSort","slotParent","_nameForSlot","_sortSlots","__slotName","sort","a","b","listA","listB","nA","nB","from","didRemove","map","x","_removeFlattenedNodes","_updateSlotName","oldName","defineProperties","nodeName","connectMap","Map","r","v","k","clear","__shadydom_connectedCallback","__shadydom_disconnectedCallback","ManageConnect","base","connected","disconnected","counter","connectFlag","connectedCallback","disconnectedCallback","isConnected","define","Wrapper","dispatchEvent","setAttribute","hasAttribute","removeAttribute","DOCUMENT_NODE","focus","blur","importNode","wrapperMap","WeakMap","EventTargetPatches","SlotablePatches","distributeAttributeChange","ElementPatches","scopeClassAttribute","HTMLElementPatches","shadowActive","property","shadyData","eventName","SlotPatches","flatten","DocumentPatches","WindowPatches","bind","NonStandardHTMLElement","className","ElementShouldHaveInnerHTML","patchMap","Text","HTMLSlotElement","getPatchPrototype","disallowedNativePatches","applyPatches","disallowed","patch","ShadyDOM","targetRootNode","mutation","mutationInScope","m","wrapper","addShadyPrefixedProperties","composedClickFn","cancelable","click","patchClick","activateFocusEventOverrides","ShadowRoot","reservedTagList","isValidCustomElementName","reserved","has","validForm","test","nativeValue","__CE_isImportDocument","nextSiblingOrAncestorSibling","start","walkDeepDescendantElements","visitedImports","import","shadowRoot","__CE_shadowRoot","setPropertyUnchecked","destination","CustomElementState","custom","failed","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","constructorFunction","localNameToDefinition","constructorToDefinition","addPatch","listener","patchTree","Utilities","__CE_patched","connectTree","__CE_state","CEState","upgradeElement","disconnectTree","patchAndUpgradeTree","upgrade","__CE_hasRegistry","__CE_documentLoadHandled","clonedVisitedImports","defaultView","constructionStack","pop","__CE_definition","attributeChangedCallback","observedAttributes","oldValue","newValue","namespace","DocumentConstructionObserver","internals","_internals","_document","_handleMutations","childList","subtree","disconnect","Deferred","_value","_resolve","_promise","Promise","resolve","toPromise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_pendingDefinitions","_documentConstructionObserver","Function","SyntaxError","adoptedCallback","getCallback","callbackValue","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","polyfillWrapFlushCallback","outer","inner","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","Node_textContent","Element_attachShadow","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","builtIn","appendPrependPatch","builtInMethod","connectedElements","apply","prepend","append","priorCustomElements","Native","setPrototypeOf","lastIndex","AlreadyConstructedMarker","toConstructElement","writable","PatchHTMLElement","clone","PatchParentNode","PatchDocument","PatchDocumentFragment","patch_textContent","baseDescriptor","assignedValue","childNodesLength","insertedNodes","nativeResult","nodeWasConnected","nodeToInsert","nodeToRemove","nodeToInsertWasConnected","thisIsConnected","parts","PatchNode","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","position","wasConnected","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","end","text","toLowerCase","marker","String","init","isTemplate","rawElement","warn","beforeAfterPatch","before","after","replaceWith","remove","PatchChildNode","PatchElement","customElements","StyleNode","parse","parseCss","t","trim","ss","code","arguments","repeat","_expandUnicodeEscapes","RX","multipleSpaces","lastIndexOf","AT_START","MEDIA_START","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","VAR_START","MIXIN_RULE","STYLE_RULE","r$","OPEN_BRACE","CLOSE_BRACE","lex","comments","port","stringify","preserveProperties","cssText","rules","_hasMixinRules","mixinApply","varApply","removeCustomPropApply","removeCustomPropAssignment","removeCustomProps","customProp","mixinProp","nativeShadow","nativeCssVariables_","cssBuild","calcCssVariables","navigator","userAgent","CSS","supports","ShadyCSS","disableRuntime","nativeCss","nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","HOST_PREFIX","HOST_SUFFIX","styleTextSet","scopingAttribute","processUnscopedStyle","style","newStyle","head","isUnscopedStyle","toCssText","forEachRule","rulesForStyle","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","applyCss","moniker","contextNode","createScopeStyle","applyStyle","lastHeadApplyNode","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","findMatchingParen","level","setElementClassRaw","wrap","getIsExtends","is","typeExtension","extends","splitSelectorList","part","CSS_BUILD_ATTR","getCssBuild","__cssBuild","attrValue","buildComment","Comment","commentParts","getBuildComment","removeBuildComment","elementHasBuiltCss","isOptimalCssBuild","SCOPE_NAME","NTH","SCOPE_DOC_SELECTOR","COMPLEX_SELECTOR_SEP","SIMPLE_SELECTOR_SEP","SIMPLE_SELECTOR_PREFIX","HOST","ROOT","SLOTTED","SLOTTED_START","RegExp","HOST_PAREN","SLOTTED_PAREN","DIR_PAREN","CSS_CLASS_PREFIX","PSEUDO_PREFIX","CLASS","SELECTOR_NO_MATCH","MATCHES","MATCHES_REPLACEMENT","dom","scope","shouldRemoveScope","_transformDom","domAddScope","transformer","template","_content","classList","StyleUtil","domReplaceScope","oldScope","newScope","domRemoveScope","elementStyles","styleRules","css","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","_transformRule","_transformComplexSelector","transformedSelector","_transformRuleCss","_twiddleNthPlus","inside","_preserveMatchesPseudo","input","_replaceMatchesPseudo","reduce","acc","cur","stop","isNth","isMatches","info","_transformCompoundSelector","combinator","slottedIndex","_transformHostSelector","_transformSimpleSelector","slotted","paren","dir","output","documentRule","normalizeRootSelector","_transformDocumentSelector","infoKey","StyleInfo","styleInfo","ast","placeholder","ownStylePropertyNames","elementName","overrideStyleProperties","styleProperties","scopeSelector","customStyle","_getStyleRules","method","IS_IE","XSCOPE_NAME","decorateStyles","props","keyframes","ruleIndex","decorateRule","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","collectProperties","collectCssText","any","rx","exec","collectConsumingCssText","reify","valueForProperty","valueForProperties","processVariableAndFallback","str","suffix","comma","fallback","propertyValue","colon","pp","applyProperties","applyKeyframeTransforms","keyframeTransforms","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","bits","parseInt","addToBitMask","key","whenHostOrRootRule","StyleTransformer","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","applyElementStyle","applyCustomStyle","placeholderMap","getStylePlaceholder","ensureStylePlaceholder","placeHolder","createComment","applyStylePlaceHolder","ce","origDefine","wrappedDefine","clazz","scopeRegExp","getCurrentScope","getClasses","getOwnerScope","ensureCorrectSubtreeScoping","unscopedNodes","unscopedNode","scopeForPreviouslyUnscopedNode","handler","mxns","mxn","currentScope","el","delayedStart","body","requestAnimationFrame","templateMap","CURRENT_VERSION","NEXT_VERSION","VALIDATING_VERSION","promise","invalidate","invalidateTemplate","templateIsValid","resolveFn","readyPromise","whenReady","documentWait","then","SEEN_MARKER","CACHED_STYLE","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","processStyles","cs","styleToTransform","needsEnqueue","adoptedCssTextMap","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","fetch","entry","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","watcherFlush","_generateScopeSelector","getStyleAst","styleAstToString","_gatherStyles","styleTextParts","styles","prepareTemplate","prepareTemplateDom","prepareTemplateStyles","_prepared","optimalBuild","_ensure","hasMixins","detectMixin","StyleProperties","_generateStaticStyle","_style","_ownPropertyNames","prepareAdoptedCssText","cssTextArray","_domPrepared","shadowroot","_prepareHost","_ensureApplyShim","ApplyShim","ApplyShimUtils","_ensureCustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_mixOverrideStyleProps","styleElementNativeVariables","_isRootOwner","styleElementShimVariables","_applyStyleProperties","removeProperty","setProperty","updateNativeProperties","_validating","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertiesMatchingHost","_mixinOverrideStyles","overrides","styleSubtree","wrappedHost","shadowChildren","_revalidateApplyShim","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","classes","scopeName","classAttr","k$","_styleInfoForNode","scopeNode","unscopeNode","scopeForNode","elementExtends"],"mappings":"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"}